"use strict";void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let e=1;e<arguments.length;e++){const i=arguments[e];if(null!=i)for(const e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])}return t});const e=100,t=101,i=102,n=200,r=201,s=202,o=203,a=204,l=205,c=206,h=207,u=208,d=209,p=210,m=306,f=1e3,g=1001,v=1002,x=1003,y=1004,b=1005,w=1006,_=1007,M=1008,S=1009,C=1012,T=1014,E=1015,P=1016,A=1020,D=1022,L=1023,R=1026,I=1027,O=2300,U=2301,N=2302,k=2400,B=2401,G=2402,F=2500,H=3e3,j=3001,z=3007,V=3002,W=3004,X=3005,q=3006,Y=7680,Z=35044,K=35048;function Q(){}Object.assign(Q.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const e=i.indexOf(t);-1!==e&&i.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const i=t.slice(0);for(let t=0,n=i.length;t<n;t++)i[t].call(this,e)}}});const J=[];for(let e=0;e<256;e++)J[e]=(e<16?"0":"")+e.toString(16);const $={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(J[255&e]+J[e>>8&255]+J[e>>16&255]+J[e>>24&255]+"-"+J[255&t]+J[t>>8&255]+"-"+J[t>>16&15|64]+J[t>>24&255]+"-"+J[63&i|128]+J[i>>8&255]+"-"+J[i>>16&255]+J[i>>24&255]+J[255&n]+J[n>>8&255]+J[n>>16&255]+J[n>>24&255]).toUpperCase()},clamp:function(e,t,i){return Math.max(t,Math.min(i,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},lerp:function(e,t,i){return(1-i)*e+i*t},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*$.DEG2RAD},radToDeg:function(e){return e*$.RAD2DEG},isPowerOfTwo:function(e){return!(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,i,n,r){const s=Math.cos,o=Math.sin,a=s(i/2),l=o(i/2),c=s((t+n)/2),h=o((t+n)/2),u=s((t-n)/2),d=o((t-n)/2),p=s((n-t)/2),m=o((n-t)/2);switch(r){case"XYX":e.set(a*h,l*u,l*d,a*c);break;case"YZY":e.set(l*d,a*h,l*u,a*c);break;case"ZXZ":e.set(l*u,l*d,a*h,a*c);break;case"XZX":e.set(a*h,l*m,l*p,a*c);break;case"YXY":e.set(l*p,a*h,l*m,a*c);break;case"ZYZ":e.set(l*m,l*p,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};function ee(e=0,t=0){this.x=e,this.y=t}function te(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}let ie;Object.defineProperties(ee.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(ee.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(te.prototype,{isMatrix3:!0,set:function(e,t,i,n,r,s,o,a,l){const c=this.elements;return c[0]=e,c[1]=n,c[2]=o,c[3]=t,c[4]=r,c[5]=a,c[6]=i,c[7]=s,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this},extractBasis:function(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],h=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],v=n[1],x=n[4],y=n[7],b=n[2],w=n[5],_=n[8];return r[0]=s*m+o*v+a*b,r[3]=s*f+o*x+a*w,r[6]=s*g+o*y+a*_,r[1]=l*m+c*v+h*b,r[4]=l*f+c*x+h*w,r[7]=l*g+c*y+h*_,r[2]=u*m+d*v+p*b,r[5]=u*f+d*x+p*w,r[8]=u*g+d*y+p*_,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],o=e[5],a=e[6],l=e[7],c=e[8];return t*s*c-t*o*l-i*r*c+i*o*a+n*r*l-n*s*a},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const i=e.elements,n=this.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=d*l-c*u,m=c*h-d*a,f=u*a-l*h,g=r*p+s*m+o*f;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const v=1/g;return n[0]=p*v,n[1]=(o*u-d*s)*v,n[2]=(c*s-o*l)*v,n[3]=m*v,n[4]=(d*r-o*h)*v,n[5]=(o*a-c*r)*v,n[6]=f*v,n[7]=(s*h-u*r)*v,n[8]=(l*r-s*a)*v,this},transpose:function(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,i,n,r,s,o){const a=Math.cos(r),l=Math.sin(r);this.set(i*a,i*l,-i*(a*s+l*o)+s+e,-n*l,n*a,-n*(-l*s+a*o)+o+t,0,0,1)},scale:function(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this},rotate:function(e){const t=Math.cos(e),i=Math.sin(e),n=this.elements,r=n[0],s=n[3],o=n[6],a=n[1],l=n[4],c=n[7];return n[0]=t*r+i*a,n[3]=t*s+i*l,n[6]=t*o+i*c,n[1]=-i*r+t*a,n[4]=-i*s+t*l,n[7]=-i*o+t*c,this},translate:function(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this},equals:function(e){const t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}});const ne={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===ie&&(ie=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),ie.width=e.width,ie.height=e.height;const i=ie.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=ie}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let re=0;function se(e,t,i,n,r,s,o,a,l,c){Object.defineProperty(this,"id",{value:re++}),this.uuid=$.generateUUID(),this.name="",this.image=void 0!==e?e:se.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:se.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:g,this.wrapT=void 0!==n?n:g,this.magFilter=void 0!==r?r:w,this.minFilter=void 0!==s?s:M,this.anisotropy=void 0!==l?l:1,this.format=void 0!==o?o:L,this.internalFormat=null,this.type=void 0!==a?a:S,this.offset=new ee(0,0),this.repeat=new ee(1,1),this.center=new ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new te,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:H,this.version=0,this.onUpdate=null}function oe(e=0,t=0,i=0,n=1){this.x=e,this.y=t,this.z=i,this.w=n}function ae(e,t,i){this.width=e,this.height=t,this.scissor=new oe(0,0,e,t),this.scissorTest=!1,this.viewport=new oe(0,0,e,t),i=i||{},this.texture=new se(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:w,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function le(e,t,i){ae.call(this,e,t,i),this.samples=4}function ce(e=0,t=0,i=0,n=1){this._x=e,this._y=t,this._z=i,this._w=n}se.DEFAULT_IMAGE=void 0,se.DEFAULT_MAPPING=300,se.prototype=Object.assign(Object.create(Q.prototype),{constructor:se,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=$.generateUUID()),!t&&void 0===e.images[n.uuid]){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)t.push(ne.getDataURL(n[e]))}else t=ne.getDataURL(n);e.images[n.uuid]={uuid:n.uuid,url:t}}i.image=n.uuid}return t||(e.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case f:e.x=e.x-Math.floor(e.x);break;case g:e.x=e.x<0?0:1;break;case v:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case f:e.y=e.y-Math.floor(e.y);break;case g:e.y=e.y<0?0:1;break;case v:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(se.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.defineProperties(oe.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(oe.prototype,{isVector4:!0,set:function(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){const t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){let t,i,n,r;const s=.01,o=.1,a=e.elements,l=a[0],c=a[4],h=a[8],u=a[1],d=a[5],p=a[9],m=a[2],f=a[6],g=a[10];if(Math.abs(c-u)<s&&Math.abs(h-m)<s&&Math.abs(p-f)<s){if(Math.abs(c+u)<o&&Math.abs(h+m)<o&&Math.abs(p+f)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,a=(d+1)/2,v=(g+1)/2,x=(c+u)/4,y=(h+m)/4,b=(p+f)/4;return e>a&&e>v?e<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(e),n=x/i,r=y/i):a>v?a<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(a),i=x/n,r=b/n):v<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(v),i=y/r,n=b/r),this.set(i,n,r,t),this}let v=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(h-m)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),ae.prototype=Object.assign(Object.create(Q.prototype),{constructor:ae,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),le.prototype=Object.assign(Object.create(ae.prototype),{constructor:le,isWebGLMultisampleRenderTarget:!0,copy:function(e){return ae.prototype.copy.call(this,e),this.samples=e.samples,this}}),Object.assign(ce,{slerp:function(e,t,i,n){return i.copy(e).slerp(t,n)},slerpFlat:function(e,t,i,n,r,s,o){let a=i[n+0],l=i[n+1],c=i[n+2],h=i[n+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(h!==m||a!==u||l!==d||c!==p){let e=1-o,t=a*u+l*d+c*p+h*m,i=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,t*i);e=Math.sin(e*s)/r,o=Math.sin(o*s)/r}const r=o*i;if(a=a*e+u*r,l=l*e+d*r,c=c*e+p*r,h=h*e+m*r,e===1-o){const e=1/Math.sqrt(a*a+l*l+c*c+h*h);a*=e,l*=e,c*=e,h*=e}}e[t]=a,e[t+1]=l,e[t+2]=c,e[t+3]=h},multiplyQuaternionsFlat:function(e,t,i,n,r,s){const o=i[n],a=i[n+1],l=i[n+2],c=i[n+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return e[t]=o*p+c*h+a*d-l*u,e[t+1]=a*p+c*u+l*h-o*d,e[t+2]=l*p+c*d+o*u-a*h,e[t+3]=c*p-o*h-a*u-l*d,e}}),Object.defineProperties(ce.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(ce.prototype,{isQuaternion:!0,set:function(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,n=e._y,r=e._z,s=e.order,o=Math.cos,a=Math.sin,l=o(i/2),c=o(n/2),h=o(r/2),u=a(i/2),d=a(n/2),p=a(r/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this},setFromRotationMatrix:function(e){const t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],o=t[5],a=t[9],l=t[2],c=t[6],h=t[10],u=i+o+h;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(c-a)*e,this._y=(r-l)*e,this._z=(s-n)*e}else if(i>o&&i>h){const e=2*Math.sqrt(1+i-o-h);this._w=(c-a)/e,this._x=.25*e,this._y=(n+s)/e,this._z=(r+l)/e}else if(o>h){const e=2*Math.sqrt(1+o-i-h);this._w=(r-l)/e,this._x=(n+s)/e,this._y=.25*e,this._z=(a+c)/e}else{const e=2*Math.sqrt(1+h-i-o);this._w=(s-n)/e,this._x=(r+l)/e,this._y=(a+c)/e,this._z=.25*e}return this._onChangeCallback(),this},setFromUnitVectors:function(e,t){let i=e.dot(t)+1;return i<1e-6?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs($.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){const i=this.angleTo(e);if(0===i)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){const i=e._x,n=e._y,r=e._z,s=e._w,o=t._x,a=t._y,l=t._z,c=t._w;return this._x=i*c+s*o+n*l-r*a,this._y=n*c+s*a+r*o-i*l,this._z=r*c+s*l+i*a-n*o,this._w=s*c-i*o-n*a-r*l,this._onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);const i=this._x,n=this._y,r=this._z,s=this._w;let o=s*e._w+i*e._x+n*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const a=1-o*o;if(a<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*i+t*this._x,this._y=e*n+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=s*h+this._w*u,this._x=i*h+this._x*u,this._y=n*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});const he=new de,ue=new ce;function de(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}Object.assign(de.prototype,{isVector3:!0,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ue.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(ue.setFromAxisAngle(e,t))},applyMatrix3:function(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){const t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this},applyQuaternion:function(e){const t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,o=e.z,a=e.w,l=a*t+s*n-o*i,c=a*i+o*t-r*n,h=a*n+r*i-s*t,u=-r*t-s*i-o*n;return this.x=l*a+u*-r+c*-o-h*-s,this.y=c*a+u*-s+h*-r-l*-o,this.z=h*a+u*-o+l*-s-c*-r,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this},cross:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){const i=e.x,n=e.y,r=e.z,s=t.x,o=t.y,a=t.z;return this.x=n*a-r*o,this.y=r*s-i*a,this.z=i*o-n*s,this},projectOnVector:function(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)},projectOnPlane:function(e){return he.copy(this).projectOnVector(e),this.sub(he)},reflect:function(e){return this.sub(he.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos($.clamp(i,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const pe=new de,me=new be,fe=new de(0,0,0),ge=new de(1,1,1),ve=new de,xe=new de,ye=new de;function be(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(be.prototype,{isMatrix4:!0,set:function(e,t,i,n,r,s,o,a,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=o,g[13]=a,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new be).fromArray(this.elements)},copy:function(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this},copyPosition:function(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractBasis:function(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this},extractRotation:function(e){const t=this.elements,i=e.elements,n=1/pe.setFromMatrixColumn(e,0).length(),r=1/pe.setFromMatrixColumn(e,1).length(),s=1/pe.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),o=Math.sin(i),a=Math.cos(n),l=Math.sin(n),c=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){const e=s*c,i=s*h,n=o*c,r=o*h;t[0]=a*c,t[4]=-a*h,t[8]=l,t[1]=i+n*l,t[5]=e-r*l,t[9]=-o*a,t[2]=r-e*l,t[6]=n+i*l,t[10]=s*a}else if("YXZ"===e.order){const e=a*c,i=a*h,n=l*c,r=l*h;t[0]=e+r*o,t[4]=n*o-i,t[8]=s*l,t[1]=s*h,t[5]=s*c,t[9]=-o,t[2]=i*o-n,t[6]=r+e*o,t[10]=s*a}else if("ZXY"===e.order){const e=a*c,i=a*h,n=l*c,r=l*h;t[0]=e-r*o,t[4]=-s*h,t[8]=n+i*o,t[1]=i+n*o,t[5]=s*c,t[9]=r-e*o,t[2]=-s*l,t[6]=o,t[10]=s*a}else if("ZYX"===e.order){const e=s*c,i=s*h,n=o*c,r=o*h;t[0]=a*c,t[4]=n*l-i,t[8]=e*l+r,t[1]=a*h,t[5]=r*l+e,t[9]=i*l-n,t[2]=-l,t[6]=o*a,t[10]=s*a}else if("YZX"===e.order){const e=s*a,i=s*l,n=o*a,r=o*l;t[0]=a*c,t[4]=r-e*h,t[8]=n*h+i,t[1]=h,t[5]=s*c,t[9]=-o*c,t[2]=-l*c,t[6]=i*h+n,t[10]=e-r*h}else if("XZY"===e.order){const e=s*a,i=s*l,n=o*a,r=o*l;t[0]=a*c,t[4]=-h,t[8]=l*c,t[1]=e*h+r,t[5]=s*c,t[9]=i*h-n,t[2]=n*h-i,t[6]=o*c,t[10]=r*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(fe,e,ge)},lookAt:function(e,t,i){const n=this.elements;return ye.subVectors(e,t),0===ye.lengthSq()&&(ye.z=1),ye.normalize(),ve.crossVectors(i,ye),0===ve.lengthSq()&&(1===Math.abs(i.z)?ye.x+=1e-4:ye.z+=1e-4,ye.normalize(),ve.crossVectors(i,ye)),ve.normalize(),xe.crossVectors(ye,ve),n[0]=ve.x,n[4]=xe.x,n[8]=ye.x,n[1]=ve.y,n[5]=xe.y,n[9]=ye.y,n[2]=ve.z,n[6]=xe.z,n[10]=ye.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],o=i[4],a=i[8],l=i[12],c=i[1],h=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],v=i[3],x=i[7],y=i[11],b=i[15],w=n[0],_=n[4],M=n[8],S=n[12],C=n[1],T=n[5],E=n[9],P=n[13],A=n[2],D=n[6],L=n[10],R=n[14],I=n[3],O=n[7],U=n[11],N=n[15];return r[0]=s*w+o*C+a*A+l*I,r[4]=s*_+o*T+a*D+l*O,r[8]=s*M+o*E+a*L+l*U,r[12]=s*S+o*P+a*R+l*N,r[1]=c*w+h*C+u*A+d*I,r[5]=c*_+h*T+u*D+d*O,r[9]=c*M+h*E+u*L+d*U,r[13]=c*S+h*P+u*R+d*N,r[2]=p*w+m*C+f*A+g*I,r[6]=p*_+m*T+f*D+g*O,r[10]=p*M+m*E+f*L+g*U,r[14]=p*S+m*P+f*R+g*N,r[3]=v*w+x*C+y*A+b*I,r[7]=v*_+x*T+y*D+b*O,r[11]=v*M+x*E+y*L+b*U,r[15]=v*S+x*P+y*R+b*N,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],o=e[5],a=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+r*a*h-n*l*h-r*o*u+i*l*u+n*o*d-i*a*d)+e[7]*(+t*a*d-t*l*u+r*s*u-n*s*d+n*l*c-r*a*c)+e[11]*(+t*l*h-t*o*d-r*s*h+i*s*d+r*o*c-i*l*c)+e[15]*(-n*o*c-t*a*h+t*o*u+n*s*h-i*s*u+i*a*c)},transpose:function(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const i=this.elements,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],p=n[9],m=n[10],f=n[11],g=n[12],v=n[13],x=n[14],y=n[15],b=p*x*u-v*m*u+v*h*f-c*x*f-p*h*y+c*m*y,w=g*m*u-d*x*u-g*h*f+l*x*f+d*h*y-l*m*y,_=d*v*u-g*p*u+g*c*f-l*v*f-d*c*y+l*p*y,M=g*p*h-d*v*h-g*c*m+l*v*m+d*c*x-l*p*x,S=r*b+s*w+o*_+a*M;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/S;return i[0]=b*C,i[1]=(v*m*a-p*x*a-v*o*f+s*x*f+p*o*y-s*m*y)*C,i[2]=(c*x*a-v*h*a+v*o*u-s*x*u-c*o*y+s*h*y)*C,i[3]=(p*h*a-c*m*a-p*o*u+s*m*u+c*o*f-s*h*f)*C,i[4]=w*C,i[5]=(d*x*a-g*m*a+g*o*f-r*x*f-d*o*y+r*m*y)*C,i[6]=(g*h*a-l*x*a-g*o*u+r*x*u+l*o*y-r*h*y)*C,i[7]=(l*m*a-d*h*a+d*o*u-r*m*u-l*o*f+r*h*f)*C,i[8]=_*C,i[9]=(g*p*a-d*v*a-g*s*f+r*v*f+d*s*y-r*p*y)*C,i[10]=(l*v*a-g*c*a+g*s*u-r*v*u-l*s*y+r*c*y)*C,i[11]=(d*c*a-l*p*a-d*s*u+r*p*u+l*s*f-r*c*f)*C,i[12]=M*C,i[13]=(d*v*o-g*p*o+g*s*m-r*v*m-d*s*x+r*p*x)*C,i[14]=(g*c*o-l*v*o-g*s*h+r*v*h+l*s*x-r*c*x)*C,i[15]=(l*p*o-d*c*o+d*s*h-r*p*h-l*s*m+r*c*m)*C,this},scale:function(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this},getMaxScaleOnAxis:function(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,o=e.y,a=e.z,l=r*s,c=r*o;return this.set(l*s+i,l*o-n*a,l*a+n*o,0,l*o+n*a,c*o+i,c*a-n*s,0,l*a-n*o,c*a+n*s,r*a*a+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,i){const n=this.elements,r=t._x,s=t._y,o=t._z,a=t._w,l=r+r,c=s+s,h=o+o,u=r*l,d=r*c,p=r*h,m=s*c,f=s*h,g=o*h,v=a*l,x=a*c,y=a*h,b=i.x,w=i.y,_=i.z;return n[0]=(1-(m+g))*b,n[1]=(d+y)*b,n[2]=(p-x)*b,n[3]=0,n[4]=(d-y)*w,n[5]=(1-(u+g))*w,n[6]=(f+v)*w,n[7]=0,n[8]=(p+x)*_,n[9]=(f-v)*_,n[10]=(1-(u+m))*_,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this},decompose:function(e,t,i){const n=this.elements;let r=pe.set(n[0],n[1],n[2]).length(),s=pe.set(n[4],n[5],n[6]).length(),o=pe.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],me.copy(this);const a=1/r,l=1/s,c=1/o;return me.elements[0]*=a,me.elements[1]*=a,me.elements[2]*=a,me.elements[4]*=l,me.elements[5]*=l,me.elements[6]*=l,me.elements[8]*=c,me.elements[9]*=c,me.elements[10]*=c,t.setFromRotationMatrix(me),i.x=r,i.y=s,i.z=o,this},makePerspective:function(e,t,i,n,r,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*r/(t-e),l=2*r/(i-n),c=(t+e)/(t-e),h=(i+n)/(i-n),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return o[0]=a,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,i,n,r,s){const o=this.elements,a=1/(t-e),l=1/(i-n),c=1/(s-r),h=(t+e)*a,u=(i+n)*l,d=(s+r)*c;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){const t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}});const we=new be,_e=new ce;function Me(e=0,t=0,i=0,n=Me.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=n}function Se(){this.mask=1}Me.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Me.DefaultOrder="XYZ",Object.defineProperties(Me.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(Me.prototype,{isEuler:!0,set:function(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,i){const n=$.clamp,r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==i&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,i){return we.makeRotationFromQuaternion(e),this.setFromRotationMatrix(we,t,i)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return _e.setFromEuler(this),this.setFromQuaternion(_e,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new de(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}}),Object.assign(Se.prototype,{set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},disableAll:function(){this.mask=0},test:function(e){return!!(this.mask&e.mask)}});let Ce=0;const Te=new de,Ee=new ce,Pe=new be,Ae=new de,De=new de,Le=new de,Re=new ce,Ie=new de(1,0,0),Oe=new de(0,1,0),Ue=new de(0,0,1),Ne={type:"added"},ke={type:"removed"};function Be(){Object.defineProperty(this,"id",{value:Ce++}),this.uuid=$.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Be.DefaultUp.clone();const e=new de,t=new Me,i=new ce,n=new de(1,1,1);t._onChange((function(){i.setFromEuler(t,!1)})),i._onChange((function(){t.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new be},normalMatrix:{value:new te}}),this.matrix=new be,this.matrixWorld=new be,this.matrixAutoUpdate=Be.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Se,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Ge(){Be.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Be.DefaultUp=new de(0,1,0),Be.DefaultMatrixAutoUpdate=!0,Be.prototype=Object.assign(Object.create(Q.prototype),{constructor:Be,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Ee.setFromAxisAngle(e,t),this.quaternion.multiply(Ee),this},rotateOnWorldAxis:function(e,t){return Ee.setFromAxisAngle(e,t),this.quaternion.premultiply(Ee),this},rotateX:function(e){return this.rotateOnAxis(Ie,e)},rotateY:function(e){return this.rotateOnAxis(Oe,e)},rotateZ:function(e){return this.rotateOnAxis(Ue,e)},translateOnAxis:function(e,t){return Te.copy(e).applyQuaternion(this.quaternion),this.position.add(Te.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(Ie,e)},translateY:function(e){return this.translateOnAxis(Oe,e)},translateZ:function(e){return this.translateOnAxis(Ue,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Pe.getInverse(this.matrixWorld))},lookAt:function(e,t,i){e.isVector3?Ae.copy(e):Ae.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),De.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pe.lookAt(De,Ae,this.up):Pe.lookAt(Ae,De,this.up),this.quaternion.setFromRotationMatrix(Pe),n&&(Pe.extractRotation(n.matrixWorld),Ee.setFromRotationMatrix(Pe),this.quaternion.premultiply(Ee.inverse()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ne)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ke)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),Pe.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Pe.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pe),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new de),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new ce),this.updateMatrixWorld(!0),this.matrixWorld.decompose(De,e,Le),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new de),this.updateMatrixWorld(!0),this.matrixWorld.decompose(De,Re,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new de),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const i=t.shapes;if(Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const n=i[t];r(e.shapes,n)}else r(e.shapes,i)}}if(void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(r(e.materials,this.material[i]));n.material=t}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(t){const t=s(e.geometries),n=s(e.materials),r=s(e.textures),o=s(e.images),a=s(e.shapes);t.length>0&&(i.geometries=t),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),o.length>0&&(i.images=o),a.length>0&&(i.shapes=a)}return i.object=n,i;function s(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const i=e.children[t];this.add(i.clone())}return this}}),Ge.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ge,isScene:!0,copy:function(e,t){return Be.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){const t=Be.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Fe=[new de,new de,new de,new de,new de,new de,new de,new de],He=new de,je=new $e,ze=new de,Ve=new de,We=new de,Xe=new de,qe=new de,Ye=new de,Ze=new de,Ke=new de,Qe=new de,Je=new de;function $e(e,t){this.min=void 0!==e?e:new de(1/0,1/0,1/0),this.max=void 0!==t?t:new de(-1/0,-1/0,-1/0)}function et(e,t,i,n,r){for(let s=0,o=e.length-3;s<=o;s+=3){Je.fromArray(e,s);const o=r.x*Math.abs(Je.x)+r.y*Math.abs(Je.y)+r.z*Math.abs(Je.z),a=t.dot(Je),l=i.dot(Je),c=n.dot(Je);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>o)return!1}return!0}Object.assign($e.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){let t=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,l=e.length;a<l;a+=3){const l=e[a],c=e[a+1],h=e[a+2];l<t&&(t=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>o&&(o=h)}return this.min.set(t,i,n),this.max.set(r,s,o),this},setFromBufferAttribute:function(e){let t=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,l=e.count;a<l;a++){const l=e.getX(a),c=e.getY(a),h=e.getZ(a);l<t&&(t=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>o&&(o=h)}return this.min.set(t,i,n),this.max.set(r,s,o),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const i=He.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new de),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new de),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),je.copy(t.boundingBox),je.applyMatrix4(e.matrixWorld),this.union(je));const i=e.children;for(let e=0,t=i.length;e<t;e++)this.expandByObject(i[e]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new de),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,He),He.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(Ze),Ke.subVectors(this.max,Ze),ze.subVectors(e.a,Ze),Ve.subVectors(e.b,Ze),We.subVectors(e.c,Ze),Xe.subVectors(Ve,ze),qe.subVectors(We,Ve),Ye.subVectors(ze,We);let t=[0,-Xe.z,Xe.y,0,-qe.z,qe.y,0,-Ye.z,Ye.y,Xe.z,0,-Xe.x,qe.z,0,-qe.x,Ye.z,0,-Ye.x,-Xe.y,Xe.x,0,-qe.y,qe.x,0,-Ye.y,Ye.x,0];return!!et(t,ze,Ve,We,Ke)&&(t=[1,0,0,0,1,0,0,0,1],!!et(t,ze,Ve,We,Ke)&&(Qe.crossVectors(Xe,qe),t=[Qe.x,Qe.y,Qe.z],et(t,ze,Ve,We,Ke)))},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new de),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return He.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(He).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()||(Fe[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Fe[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Fe[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Fe[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Fe[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Fe[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Fe[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Fe[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Fe)),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const tt=new $e;function it(e,t){this.center=void 0!==e?e:new de,this.radius=void 0!==t?t:-1}Object.assign(it.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){const i=this.center;void 0!==t?i.copy(t):tt.setFromPoints(e).getCenter(i);let n=0;for(let t=0,r=e.length;t<r;t++)n=Math.max(n,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){const i=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new de),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new $e),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});const nt=new de,rt=new de,st=new de,ot=new de,at=new de,lt=new de,ct=new de;function ht(e,t){this.origin=void 0!==e?e:new de,this.direction=void 0!==t?t:new de(0,0,-1)}Object.assign(ht.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new de),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,nt)),this},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new de),t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){const t=nt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(nt.copy(this.direction).multiplyScalar(t).add(this.origin),nt.distanceToSquared(e))},distanceSqToSegment:function(e,t,i,n){rt.copy(e).add(t).multiplyScalar(.5),st.copy(t).sub(e).normalize(),ot.copy(this.origin).sub(rt);const r=.5*e.distanceTo(t),s=-this.direction.dot(st),o=ot.dot(this.direction),a=-ot.dot(st),l=ot.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*a-o,u=s*o-a,p=r*c,h>=0)if(u>=-p)if(u<=p){const e=1/c;h*=e,u*=e,d=h*(h+s*u+2*o)+u*(s*h+u+2*a)+l}else u=r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u=-r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u<=-p?(h=Math.max(0,-(-s*r+o)),u=h>0?-r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-a),r),d=u*(u+2*a)+l):(h=Math.max(0,-(s*r+o)),u=h>0?r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(st).multiplyScalar(u).add(rt),d},intersectSphere:function(e,t){nt.subVectors(e.center,this.origin);const i=nt.dot(this.direction),n=nt.dot(nt)-i*i,r=e.radius*e.radius;if(n>r)return null;const s=Math.sqrt(r-n),o=i-s,a=i+s;return o<0&&a<0?null:o<0?this.at(a,t):this.at(o,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null},intersectPlane:function(e,t){const i=this.distanceToPlane(e);return null===i?null:this.at(i,t)},intersectsPlane:function(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){let i,n,r,s,o,a;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(i=(e.min.x-u.x)*l,n=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,n=(e.min.x-u.x)*l),c>=0?(r=(e.min.y-u.y)*c,s=(e.max.y-u.y)*c):(r=(e.max.y-u.y)*c,s=(e.min.y-u.y)*c),i>s||r>n?null:((r>i||i!=i)&&(i=r),(s<n||n!=n)&&(n=s),h>=0?(o=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),i>a||o>n?null:((o>i||i!=i)&&(i=o),(a<n||n!=n)&&(n=a),n<0?null:this.at(i>=0?i:n,t)))},intersectsBox:function(e){return null!==this.intersectBox(e,nt)},intersectTriangle:function(e,t,i,n,r){at.subVectors(t,e),lt.subVectors(i,e),ct.crossVectors(at,lt);let s,o=this.direction.dot(ct);if(o>0){if(n)return null;s=1}else{if(!(o<0))return null;s=-1,o=-o}ot.subVectors(this.origin,e);const a=s*this.direction.dot(lt.crossVectors(ot,lt));if(a<0)return null;const l=s*this.direction.dot(at.cross(ot));if(l<0)return null;if(a+l>o)return null;const c=-s*ot.dot(ct);return c<0?null:this.at(c/o,r)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});const ut=new de,dt=new de,pt=new te;function mt(e,t){this.normal=void 0!==e?e:new de(1,0,0),this.constant=void 0!==t?t:0}Object.assign(mt.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,i){const n=ut.subVectors(i,t).cross(dt.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new de),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new de);const i=e.delta(ut),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?void 0:t.copy(i).multiplyScalar(r).add(e.start)},intersectsLine:function(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new de),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){const i=t||pt.getNormalMatrix(e),n=this.coplanarPoint(ut).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});const ft=new de,gt=new de,vt=new de,xt=new de,yt=new de,bt=new de,wt=new de,_t=new de,Mt=new de,St=new de;function Ct(e,t,i){this.a=void 0!==e?e:new de,this.b=void 0!==t?t:new de,this.c=void 0!==i?i:new de}Object.assign(Ct,{getNormal:function(e,t,i,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new de),n.subVectors(i,t),ft.subVectors(e,t),n.cross(ft);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)},getBarycoord:function(e,t,i,n,r){ft.subVectors(n,t),gt.subVectors(i,t),vt.subVectors(e,t);const s=ft.dot(ft),o=ft.dot(gt),a=ft.dot(vt),l=gt.dot(gt),c=gt.dot(vt),h=s*l-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new de),0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*a-o*c)*u,p=(s*c-o*a)*u;return r.set(1-d-p,p,d)},containsPoint:function(e,t,i,n){return Ct.getBarycoord(e,t,i,n,xt),xt.x>=0&&xt.y>=0&&xt.x+xt.y<=1},getUV:function(e,t,i,n,r,s,o,a){return this.getBarycoord(e,t,i,n,xt),a.set(0,0),a.addScaledVector(r,xt.x),a.addScaledVector(s,xt.y),a.addScaledVector(o,xt.z),a},isFrontFacing:function(e,t,i,n){return ft.subVectors(i,t),gt.subVectors(e,t),ft.cross(gt).dot(n)<0}}),Object.assign(Ct.prototype,{set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return ft.subVectors(this.c,this.b),gt.subVectors(this.a,this.b),.5*ft.cross(gt).length()},getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new de),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Ct.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new mt),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Ct.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,i,n,r){return Ct.getUV(e,this.a,this.b,this.c,t,i,n,r)},containsPoint:function(e){return Ct.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return Ct.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new de);const i=this.a,n=this.b,r=this.c;let s,o;yt.subVectors(n,i),bt.subVectors(r,i),_t.subVectors(e,i);const a=yt.dot(_t),l=bt.dot(_t);if(a<=0&&l<=0)return t.copy(i);Mt.subVectors(e,n);const c=yt.dot(Mt),h=bt.dot(Mt);if(c>=0&&h<=c)return t.copy(n);const u=a*h-c*l;if(u<=0&&a>=0&&c<=0)return s=a/(a-c),t.copy(i).addScaledVector(yt,s);St.subVectors(e,r);const d=yt.dot(St),p=bt.dot(St);if(p>=0&&d<=p)return t.copy(r);const m=d*l-a*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(i).addScaledVector(bt,o);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return wt.subVectors(r,n),o=(h-c)/(h-c+(d-p)),t.copy(n).addScaledVector(wt,o);const g=1/(f+m+u);return s=m*g,o=u*g,t.copy(i).addScaledVector(yt,s).addScaledVector(bt,o)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});const Tt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Et={h:0,s:0,l:0},Pt={h:0,s:0,l:0};function At(e,t,i){return void 0===t&&void 0===i?this.set(e):this.setRGB(e,t,i)}function Dt(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}function Lt(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Rt(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}function It(e,t,i,n,r,s){this.a=e,this.b=t,this.c=i,this.normal=n&&n.isVector3?n:new de,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new At,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==s?s:0}Object.assign(At.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(e,t,i){if(e=$.euclideanModulo(e,1),t=$.clamp(t,0,1),i=$.clamp(i,0,1),0===t)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=Dt(r,n,e+1/3),this.g=Dt(r,n,e),this.b=Dt(r,n,e-1/3)}return this},setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[5]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[5]),this;break;case"hsl":case"hsla":if(e=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r)){const i=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,r=parseInt(e[3],10)/100;return t(e[5]),this.setHSL(i,n,r)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(e)){const e=i[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this},setColorName:function(e){const t=Tt[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);const i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=Lt(e.r),this.g=Lt(e.g),this.b=Lt(e.b),this},copyLinearToSRGB:function(e){return this.r=Rt(e.r),this.g=Rt(e.g),this.b=Rt(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,i=this.g,n=this.b,r=Math.max(t,i,n),s=Math.min(t,i,n);let o,a;const l=(s+r)/2;if(s===r)o=0,a=0;else{const e=r-s;switch(a=l<=.5?e/(r+s):e/(2-r-s),r){case t:o=(i-n)/e+(i<n?6:0);break;case i:o=(n-t)/e+2;break;case n:o=(t-i)/e+4}o/=6}return e.h=o,e.s=a,e.l=l,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){return this.getHSL(Et),Et.h+=e,Et.s+=t,Et.l+=i,this.setHSL(Et.h,Et.s,Et.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(Et),e.getHSL(Pt);const i=$.lerp(Et.h,Pt.h,t),n=$.lerp(Et.s,Pt.s,t),r=$.lerp(Et.l,Pt.l,t);return this.setHSL(i,n,r),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},fromBufferAttribute:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this},toJSON:function(){return this.getHex()}}),At.NAMES=Tt,Object.assign(It.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,i=e.vertexNormals.length;t<i;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,i=e.vertexColors.length;t<i;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});let Ot=0;function Ut(){Object.defineProperty(this,"id",{value:Ot++}),this.uuid=$.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=e,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Y,this.stencilZFail=Y,this.stencilZPass=Y,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Nt(e){Ut.call(this),this.type="MeshBasicMaterial",this.color=new At(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Ut.prototype=Object.assign(Object.create(Q.prototype),{constructor:Ut,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){const t=n(e.textures),r=n(e.images);t.length>0&&(i.textures=t),r.length>0&&(i.images=r)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(null!==t){const e=t.length;i=new Array(e);for(let n=0;n!==e;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ut.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Nt.prototype=Object.create(Ut.prototype),Nt.prototype.constructor=Nt,Nt.prototype.isMeshBasicMaterial=!0,Nt.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const kt=new de,Bt=new ee;function Gt(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=Z,this.updateRange={offset:0,count:-1},this.version=0}function Ft(e,t,i){Gt.call(this,new Int8Array(e),t,i)}function Ht(e,t,i){Gt.call(this,new Uint8Array(e),t,i)}function jt(e,t,i){Gt.call(this,new Uint8ClampedArray(e),t,i)}function zt(e,t,i){Gt.call(this,new Int16Array(e),t,i)}function Vt(e,t,i){Gt.call(this,new Uint16Array(e),t,i)}function Wt(e,t,i){Gt.call(this,new Int32Array(e),t,i)}function Xt(e,t,i){Gt.call(this,new Uint32Array(e),t,i)}function qt(e,t,i){Gt.call(this,new Float32Array(e),t,i)}function Yt(e,t,i){Gt.call(this,new Float64Array(e),t,i)}function Zt(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Kt(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,n=e.length;i<n;++i)e[i]>t&&(t=e[i]);return t}Object.defineProperty(Gt.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Gt.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),r=new At),t[i++]=r.r,t[i++]=r.g,t[i++]=r.b}return this},copyVector2sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),r=new ee),t[i++]=r.x,t[i++]=r.y}return this},copyVector3sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),r=new de),t[i++]=r.x,t[i++]=r.y,t[i++]=r.z}return this},copyVector4sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),r=new oe),t[i++]=r.x,t[i++]=r.y,t[i++]=r.z,t[i++]=r.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)Bt.fromBufferAttribute(this,t),Bt.applyMatrix3(e),this.setXY(t,Bt.x,Bt.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)kt.fromBufferAttribute(this,t),kt.applyMatrix3(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this},applyMatrix4:function(e){for(let t=0,i=this.count;t<i;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.applyMatrix4(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this},applyNormalMatrix:function(e){for(let t=0,i=this.count;t<i;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.applyNormalMatrix(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this},transformDirection:function(e){for(let t=0,i=this.count;t<i;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.transformDirection(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this},setXYZ:function(e,t,i,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this},setXYZW:function(e,t,i,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Ft.prototype=Object.create(Gt.prototype),Ft.prototype.constructor=Ft,Ht.prototype=Object.create(Gt.prototype),Ht.prototype.constructor=Ht,jt.prototype=Object.create(Gt.prototype),jt.prototype.constructor=jt,zt.prototype=Object.create(Gt.prototype),zt.prototype.constructor=zt,Vt.prototype=Object.create(Gt.prototype),Vt.prototype.constructor=Vt,Wt.prototype=Object.create(Gt.prototype),Wt.prototype.constructor=Wt,Xt.prototype=Object.create(Gt.prototype),Xt.prototype.constructor=Xt,qt.prototype=Object.create(Gt.prototype),qt.prototype.constructor=qt,Yt.prototype=Object.create(Gt.prototype),Yt.prototype.constructor=Yt,Object.assign(Zt.prototype,{computeGroups:function(e){const t=[];let i,n,r;const s=e.faces;for(n=0;n<s.length;n++){const e=s[n];e.materialIndex!==r&&(r=e.materialIndex,void 0!==i&&(i.count=3*n-i.start,t.push(i)),i={start:3*n,materialIndex:r})}void 0!==i&&(i.count=3*n-i.start,t.push(i)),this.groups=t},fromGeometry:function(e){const t=e.faces,i=e.vertices,n=e.faceVertexUvs,r=n[0]&&n[0].length>0,s=n[1]&&n[1].length>0,o=e.morphTargets,a=o.length;let l;if(a>0){l=[];for(let e=0;e<a;e++)l[e]={name:o[e].name,data:[]};this.morphTargets.position=l}const c=e.morphNormals,h=c.length;let u;if(h>0){u=[];for(let e=0;e<h;e++)u[e]={name:c[e].name,data:[]};this.morphTargets.normal=u}const d=e.skinIndices,p=e.skinWeights,m=d.length===i.length,f=p.length===i.length;i.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let e=0;e<t.length;e++){const g=t[e];this.vertices.push(i[g.a],i[g.b],i[g.c]);const v=g.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{const e=g.normal;this.normals.push(e,e,e)}const x=g.vertexColors;if(3===x.length)this.colors.push(x[0],x[1],x[2]);else{const e=g.color;this.colors.push(e,e,e)}if(!0===r){const t=n[0][e];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",e),this.uvs.push(new ee,new ee,new ee))}if(!0===s){const t=n[1][e];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",e),this.uvs2.push(new ee,new ee,new ee))}for(let e=0;e<a;e++){const t=o[e].vertices;l[e].data.push(t[g.a],t[g.b],t[g.c])}for(let t=0;t<h;t++){const i=c[t].vertexNormals[e];u[t].data.push(i.a,i.b,i.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),f&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});let Qt=1;const Jt=new be,$t=new Be,ei=new de,ti=new $e,ii=new $e,ni=new de;function ri(){Object.defineProperty(this,"id",{value:Qt+=2}),this.uuid=$.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}ri.prototype=Object.assign(Object.create(Q.prototype),{constructor:ri,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Kt(e)>65535?Xt:Vt)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,i){this.groups.push({start:e,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const t=(new te).getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return Jt.makeRotationX(e),this.applyMatrix4(Jt),this},rotateY:function(e){return Jt.makeRotationY(e),this.applyMatrix4(Jt),this},rotateZ:function(e){return Jt.makeRotationZ(e),this.applyMatrix4(Jt),this},translate:function(e,t,i){return Jt.makeTranslation(e,t,i),this.applyMatrix4(Jt),this},scale:function(e,t,i){return Jt.makeScale(e,t,i),this.applyMatrix4(Jt),this},lookAt:function(e){return $t.lookAt(e),$t.updateMatrix(),this.applyMatrix4($t.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ei).negate(),this.translate(ei.x,ei.y,ei.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new qt(3*t.vertices.length,3),i=new qt(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new qt(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new qt(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new Zt).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new Gt(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new Gt(t,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new Gt(t,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new Gt(t,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new Gt(t,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const t in e.morphTargets){const i=[],n=e.morphTargets[t];for(let e=0,t=n.length;e<t;e++){const t=n[e],r=new qt(3*t.data.length,3);r.name=t.name,i.push(r.copyVector3sArray(t.data))}this.morphAttributes[t]=i}if(e.skinIndices.length>0){const t=new qt(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const t=new qt(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $e);const e=this.attributes.position,t=this.morphAttributes.position;if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];ti.setFromBufferAttribute(i),this.morphTargetsRelative?(ni.addVectors(this.boundingBox.min,ti.min),this.boundingBox.expandByPoint(ni),ni.addVectors(this.boundingBox.max,ti.max),this.boundingBox.expandByPoint(ni)):(this.boundingBox.expandByPoint(ti.min),this.boundingBox.expandByPoint(ti.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new it);const e=this.attributes.position,t=this.morphAttributes.position;if(e){const i=this.boundingSphere.center;if(ti.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];ii.setFromBufferAttribute(i),this.morphTargetsRelative?(ni.addVectors(ti.min,ii.min),ti.expandByPoint(ni),ni.addVectors(ti.max,ii.max),ti.expandByPoint(ni)):(ti.expandByPoint(ii.min),ti.expandByPoint(ii.max))}ti.getCenter(i);let n=0;for(let t=0,r=e.count;t<r;t++)ni.fromBufferAttribute(e,t),n=Math.max(n,i.distanceToSquared(ni));if(t)for(let r=0,s=t.length;r<s;r++){const s=t[r],o=this.morphTargetsRelative;for(let t=0,r=s.count;t<r;t++)ni.fromBufferAttribute(s,t),o&&(ei.fromBufferAttribute(e,t),ni.add(ei)),n=Math.max(n,i.distanceToSquared(ni))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new Gt(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);const n=new de,r=new de,s=new de,o=new de,a=new de,l=new de,c=new de,h=new de;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),m=e.getX(u+2);n.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),o.fromBufferAttribute(i,d),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),o.add(c),a.add(c),l.add(c),i.setXYZ(d,o.x,o.y,o.z),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)n.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),i.setXYZ(e+0,c.x,c.y,c.z),i.setXYZ(e+1,c.x,c.y,c.z),i.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const n in i){if(void 0===e.attributes[n])continue;const r=i[n].array,s=e.attributes[n],o=s.array,a=s.itemSize*t,l=Math.min(o.length,r.length-a);for(let e=0,t=a;e<l;e++,t++)r[t]=o[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ni.fromBufferAttribute(e,t),ni.normalize(),e.setXYZ(t,ni.x,ni.y,ni.z)},toNonIndexed:function(){function e(e,t){const i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n);let o=0,a=0;for(let e=0,r=t.length;e<r;e++){o=t[e]*n;for(let e=0;e<n;e++)s[a++]=i[o++]}return new Gt(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new ri,i=this.index.array,n=this.attributes;for(const r in n){const s=e(n[r],i);t.setAttribute(r,s)}const r=this.morphAttributes;for(const n in r){const s=[],o=r[n];for(let t=0,n=o.length;t<n;t++){const n=e(o[t],i);s.push(n)}t.morphAttributes[n]=s}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,i=s.length;e<i;e++){const i=s[e];t.addGroup(i.start,i.count,i.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const t in i){const n=i[t],r=n.toJSON(e.data);""!==n.name&&(r.name=n.name),e.data.attributes[t]=r}const n={};let r=!1;for(const t in this.morphAttributes){const i=this.morphAttributes[t],s=[];for(let t=0,n=i.length;t<n;t++){const n=i[t],r=n.toJSON(e.data);""!==n.name&&(r.name=n.name),s.push(r)}s.length>0&&(n[t]=s,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return(new ri).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;null!==i&&this.setIndex(i.clone(t));const n=e.attributes;for(const e in n){const i=n[e];this.setAttribute(e,i.clone(t))}const r=e.morphAttributes;for(const e in r){const i=[],n=r[e];for(let e=0,r=n.length;e<r;e++)i.push(n[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=e.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const si=new be,oi=new ht,ai=new it,li=new de,ci=new de,hi=new de,ui=new de,di=new de,mi=new de,fi=new de,gi=new de,vi=new de,xi=new ee,yi=new ee,bi=new ee,wi=new de,_i=new de;function Mi(e,t){Be.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new ri,this.material=void 0!==t?t:new Nt,this.updateMorphTargets()}function Si(e,t,i,n,r,s,o,a){let l;if(l=1===t.side?n.intersectTriangle(o,s,r,!0,a):n.intersectTriangle(r,s,o,2!==t.side,a),null===l)return null;_i.copy(a),_i.applyMatrix4(e.matrixWorld);const c=i.ray.origin.distanceTo(_i);return c<i.near||c>i.far?null:{distance:c,point:_i.clone(),object:e}}function Ci(e,t,i,n,r,s,o,a,l,c,h,u){li.fromBufferAttribute(r,c),ci.fromBufferAttribute(r,h),hi.fromBufferAttribute(r,u);const d=e.morphTargetInfluences;if(t.morphTargets&&s&&d){fi.set(0,0,0),gi.set(0,0,0),vi.set(0,0,0);for(let e=0,t=s.length;e<t;e++){const t=d[e],i=s[e];0!==t&&(ui.fromBufferAttribute(i,c),di.fromBufferAttribute(i,h),mi.fromBufferAttribute(i,u),o?(fi.addScaledVector(ui,t),gi.addScaledVector(di,t),vi.addScaledVector(mi,t)):(fi.addScaledVector(ui.sub(li),t),gi.addScaledVector(di.sub(ci),t),vi.addScaledVector(mi.sub(hi),t)))}li.add(fi),ci.add(gi),hi.add(vi)}e.isSkinnedMesh&&(e.boneTransform(c,li),e.boneTransform(h,ci),e.boneTransform(u,hi));const p=Si(e,t,i,n,li,ci,hi,wi);if(p){a&&(xi.fromBufferAttribute(a,c),yi.fromBufferAttribute(a,h),bi.fromBufferAttribute(a,u),p.uv=Ct.getUV(wi,li,ci,hi,xi,yi,bi,new ee)),l&&(xi.fromBufferAttribute(l,c),yi.fromBufferAttribute(l,h),bi.fromBufferAttribute(l,u),p.uv2=Ct.getUV(wi,li,ci,hi,xi,yi,bi,new ee));const e=new It(c,h,u);Ct.getNormal(li,ci,hi,e.normal),p.face=e}return p}Mi.prototype=Object.assign(Object.create(Be.prototype),{constructor:Mi,isMesh:!0,copy:function(e){return Be.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),ai.copy(i.boundingSphere),ai.applyMatrix4(r),!1===e.ray.intersectsSphere(ai))return;if(si.getInverse(r),oi.copy(e.ray).applyMatrix4(si),null!==i.boundingBox&&!1===oi.intersectsBox(i.boundingBox))return;let s;if(i.isBufferGeometry){const r=i.index,o=i.attributes.position,a=i.morphAttributes.position,l=i.morphTargetsRelative,c=i.attributes.uv,h=i.attributes.uv2,u=i.groups,d=i.drawRange;if(null!==r)if(Array.isArray(n))for(let i=0,p=u.length;i<p;i++){const p=u[i],m=n[p.materialIndex];for(let i=Math.max(p.start,d.start),n=Math.min(p.start+p.count,d.start+d.count);i<n;i+=3){const n=r.getX(i),u=r.getX(i+1),d=r.getX(i+2);s=Ci(this,m,e,oi,o,a,l,c,h,n,u,d),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{for(let i=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);i<u;i+=3){const u=r.getX(i),d=r.getX(i+1),p=r.getX(i+2);s=Ci(this,n,e,oi,o,a,l,c,h,u,d,p),s&&(s.faceIndex=Math.floor(i/3),t.push(s))}}else if(void 0!==o)if(Array.isArray(n))for(let i=0,r=u.length;i<r;i++){const r=u[i],p=n[r.materialIndex];for(let i=Math.max(r.start,d.start),n=Math.min(r.start+r.count,d.start+d.count);i<n;i+=3){s=Ci(this,p,e,oi,o,a,l,c,h,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=r.materialIndex,t.push(s))}}else{for(let i=Math.max(0,d.start),r=Math.min(o.count,d.start+d.count);i<r;i+=3){s=Ci(this,n,e,oi,o,a,l,c,h,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),t.push(s))}}}else if(i.isGeometry){const r=Array.isArray(n),o=i.vertices,a=i.faces;let l;const c=i.faceVertexUvs[0];c.length>0&&(l=c);for(let i=0,c=a.length;i<c;i++){const c=a[i],h=r?n[c.materialIndex]:n;if(void 0===h)continue;const u=o[c.a],d=o[c.b],p=o[c.c];if(s=Si(this,h,e,oi,u,d,p,wi),s){if(l&&l[i]){const e=l[i];xi.copy(e[0]),yi.copy(e[1]),bi.copy(e[2]),s.uv=Ct.getUV(wi,u,d,p,xi,yi,bi,new ee)}s.face=c,s.faceIndex=i,t.push(s)}}}}});let Ti=0;const Ei=new be,Pi=new Be,Ai=new de;function Di(){Object.defineProperty(this,"id",{value:Ti+=2}),this.uuid=$.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Di.prototype=Object.assign(Object.create(Q.prototype),{constructor:Di,isGeometry:!0,applyMatrix4:function(e){const t=(new te).getNormalMatrix(e);for(let t=0,i=this.vertices.length;t<i;t++){this.vertices[t].applyMatrix4(e)}for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e];i.normal.applyMatrix3(t).normalize();for(let e=0,n=i.vertexNormals.length;e<n;e++)i.vertexNormals[e].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return Ei.makeRotationX(e),this.applyMatrix4(Ei),this},rotateY:function(e){return Ei.makeRotationY(e),this.applyMatrix4(Ei),this},rotateZ:function(e){return Ei.makeRotationZ(e),this.applyMatrix4(Ei),this},translate:function(e,t,i){return Ei.makeTranslation(e,t,i),this.applyMatrix4(Ei),this},scale:function(e,t,i){return Ei.makeScale(e,t,i),this.applyMatrix4(Ei),this},lookAt:function(e){return Pi.lookAt(e),Pi.updateMatrix(),this.applyMatrix4(Pi.matrix),this},fromBufferGeometry:function(e){const t=this,i=null!==e.index?e.index:void 0,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=n.position,s=n.normal,o=n.color,a=n.uv,l=n.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let e=0;e<r.count;e++)t.vertices.push((new de).fromBufferAttribute(r,e)),void 0!==o&&t.colors.push((new At).fromBufferAttribute(o,e));function c(e,i,n,r){const c=void 0===o?[]:[t.colors[e].clone(),t.colors[i].clone(),t.colors[n].clone()],h=new It(e,i,n,void 0===s?[]:[(new de).fromBufferAttribute(s,e),(new de).fromBufferAttribute(s,i),(new de).fromBufferAttribute(s,n)],c,r);t.faces.push(h),void 0!==a&&t.faceVertexUvs[0].push([(new ee).fromBufferAttribute(a,e),(new ee).fromBufferAttribute(a,i),(new ee).fromBufferAttribute(a,n)]),void 0!==l&&t.faceVertexUvs[1].push([(new ee).fromBufferAttribute(l,e),(new ee).fromBufferAttribute(l,i),(new ee).fromBufferAttribute(l,n)])}const h=e.groups;if(h.length>0)for(let e=0;e<h.length;e++){const t=h[e],n=t.start;for(let e=n,r=n+t.count;e<r;e+=3)void 0!==i?c(i.getX(e),i.getX(e+1),i.getX(e+2),t.materialIndex):c(e,e+1,e+2,t.materialIndex)}else if(void 0!==i)for(let e=0;e<i.count;e+=3)c(i.getX(e),i.getX(e+1),i.getX(e+2));else for(let e=0;e<r.count;e+=3)c(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ai).negate(),this.translate(Ai.x,Ai.y,Ai.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,i=0===t?1:1/t,n=new be;return n.set(i,0,0,-i*e.x,0,i,0,-i*e.y,0,0,i,-i*e.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const e=new de,t=new de;for(let i=0,n=this.faces.length;i<n;i++){const n=this.faces[i],r=this.vertices[n.a],s=this.vertices[n.b],o=this.vertices[n.c];e.subVectors(o,s),t.subVectors(r,s),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);const t=new Array(this.vertices.length);for(let e=0,i=this.vertices.length;e<i;e++)t[e]=new de;if(e){const e=new de,i=new de;for(let n=0,r=this.faces.length;n<r;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),i.subVectors(s,o),e.cross(i),t[r.a].add(e),t[r.b].add(e),t[r.c].add(e)}}else{this.computeFaceNormals();for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e];t[i.a].add(i.normal),t[i.b].add(i.normal),t[i.c].add(i.normal)}}for(let e=0,i=this.vertices.length;e<i;e++)t[e].normalize();for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e],n=i.vertexNormals;3===n.length?(n[0].copy(t[i.a]),n[1].copy(t[i.b]),n[2].copy(t[i.c])):(n[0]=t[i.a].clone(),n[1]=t[i.b].clone(),n[2]=t[i.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],i=t.vertexNormals;3===i.length?(i[0].copy(t.normal),i[1].copy(t.normal),i[2].copy(t.normal)):(i[0]=t.normal.clone(),i[1]=t.normal.clone(),i[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,i=t.vertexNormals.length;e<i;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new Di;e.faces=this.faces;for(let t=0,i=this.morphTargets.length;t<i;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,i=this.morphNormals[t].vertexNormals;for(let t=0,n=this.faces.length;t<n;t++){const t=new de,n={a:new de,b:new de,c:new de};e.push(t),i.push(n)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=i.faceNormals[e],r=i.vertexNormals[e];n.copy(t.normal),r.a.copy(t.vertexNormals[0]),r.b.copy(t.vertexNormals[1]),r.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $e),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new it),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,i){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let n,r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,l=e.faces,c=this.colors,h=e.colors;void 0===i&&(i=0),void 0!==t&&(n=(new te).getNormalMatrix(t));for(let e=0,i=o.length;e<i;e++){const i=o[e].clone();void 0!==t&&i.applyMatrix4(t),s.push(i)}for(let e=0,t=h.length;e<t;e++)c.push(h[e].clone());for(let e=0,t=l.length;e<t;e++){let t,s,o,c=l[e],h=c.vertexNormals,u=c.vertexColors;t=new It(c.a+r,c.b+r,c.c+r),t.normal.copy(c.normal),void 0!==n&&t.normal.applyMatrix3(n).normalize();for(let e=0,i=h.length;e<i;e++)s=h[e].clone(),void 0!==n&&s.applyMatrix3(n).normalize(),t.vertexNormals.push(s);t.color.copy(c.color);for(let e=0,i=u.length;e<i;e++)o=u[e],t.vertexColors.push(o.clone());t.materialIndex=c.materialIndex+i,a.push(t)}for(let t=0,i=e.faceVertexUvs.length;t<i;t++){const i=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=i.length;e<n;e++){const n=i[e],r=[];for(let e=0,t=n.length;e<t;e++)r.push(n[e].clone());this.faceVertexUvs[t].push(r)}}},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){const e={},t=[],i=[],n=Math.pow(10,4);for(let r=0,s=this.vertices.length;r<s;r++){const s=this.vertices[r],o=Math.round(s.x*n)+"_"+Math.round(s.y*n)+"_"+Math.round(s.z*n);void 0===e[o]?(e[o]=r,t.push(this.vertices[r]),i[r]=t.length-1):i[r]=i[e[o]]}const r=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=i[t.a],t.b=i[t.b],t.c=i[t.c];const n=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(n[t]===n[(t+1)%3]){r.push(e);break}}for(let e=r.length-1;e>=0;e--){const t=r[e];this.faces.splice(t,1);for(let e=0,i=this.faceVertexUvs.length;e<i;e++)this.faceVertexUvs[e].splice(t,1)}const s=this.vertices.length-t.length;return this.vertices=t,s},setFromPoints:function(e){this.vertices=[];for(let t=0,i=e.length;t<i;t++){const i=e[t];this.vertices.push(new de(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let i=0;i<t;i++)e[i]._id=i;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));const i=this.faceVertexUvs[0],n=this.faceVertexUvs[1];let r,s;i&&i.length===t&&(r=[]),n&&n.length===t&&(s=[]);for(let o=0;o<t;o++){const t=e[o]._id;r&&r.push(i[t]),s&&s.push(n[t])}r&&(this.faceVertexUvs[0]=r),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}const t=[];for(let e=0;e<this.vertices.length;e++){const i=this.vertices[e];t.push(i.x,i.y,i.z)}const i=[],n=[],r={},s=[],o={},a=[],l={};for(let e=0;e<this.faces.length;e++){const t=this.faces[e],n=!0,r=!1,s=void 0!==this.faceVertexUvs[0][e],o=t.normal.length()>0,a=t.vertexNormals.length>0,l=1!==t.color.r||1!==t.color.g||1!==t.color.b,p=t.vertexColors.length>0;let m=0;if(m=c(m,0,0),m=c(m,1,n),m=c(m,2,r),m=c(m,3,s),m=c(m,4,o),m=c(m,5,a),m=c(m,6,l),m=c(m,7,p),i.push(m),i.push(t.a,t.b,t.c),i.push(t.materialIndex),s){const t=this.faceVertexUvs[0][e];i.push(d(t[0]),d(t[1]),d(t[2]))}if(o&&i.push(h(t.normal)),a){const e=t.vertexNormals;i.push(h(e[0]),h(e[1]),h(e[2]))}if(l&&i.push(u(t.color)),p){const e=t.vertexColors;i.push(u(e[0]),u(e[1]),u(e[2]))}}function c(e,t,i){return i?e|1<<t:e&~(1<<t)}function h(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==r[t]||(r[t]=n.length/3,n.push(e.x,e.y,e.z)),r[t]}function u(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==o[t]||(o[t]=s.length,s.push(e.getHex())),o[t]}function d(e){const t=e.x.toString()+e.y.toString();return void 0!==l[t]||(l[t]=a.length/2,a.push(e.x,e.y)),l[t]}return e.data={},e.data.vertices=t,e.data.normals=n,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=i,e},clone:function(){return(new Di).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let e=0,i=t.length;e<i;e++)this.vertices.push(t[e].clone());const i=e.colors;for(let e=0,t=i.length;e<t;e++)this.colors.push(i[e].clone());const n=e.faces;for(let e=0,t=n.length;e<t;e++)this.faces.push(n[e].clone());for(let t=0,i=e.faceVertexUvs.length;t<i;t++){const i=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=i.length;e<n;e++){const n=i[e],r=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];r.push(t.clone())}this.faceVertexUvs[t].push(r)}}const r=e.morphTargets;for(let e=0,t=r.length;e<t;e++){const t={};if(t.name=r[e].name,void 0!==r[e].vertices){t.vertices=[];for(let i=0,n=r[e].vertices.length;i<n;i++)t.vertices.push(r[e].vertices[i].clone())}if(void 0!==r[e].normals){t.normals=[];for(let i=0,n=r[e].normals.length;i<n;i++)t.normals.push(r[e].normals[i].clone())}this.morphTargets.push(t)}const s=e.morphNormals;for(let e=0,t=s.length;e<t;e++){const t={};if(void 0!==s[e].vertexNormals){t.vertexNormals=[];for(let i=0,n=s[e].vertexNormals.length;i<n;i++){const n=s[e].vertexNormals[i],r={};r.a=n.a.clone(),r.b=n.b.clone(),r.c=n.c.clone(),t.vertexNormals.push(r)}}if(void 0!==s[e].faceNormals){t.faceNormals=[];for(let i=0,n=s[e].faceNormals.length;i<n;i++)t.faceNormals.push(s[e].faceNormals[i].clone())}this.morphNormals.push(t)}const o=e.skinWeights;for(let e=0,t=o.length;e<t;e++)this.skinWeights.push(o[e].clone());const a=e.skinIndices;for(let e=0,t=a.length;e<t;e++)this.skinIndices.push(a[e].clone());const l=e.lineDistances;for(let e=0,t=l.length;e<t;e++)this.lineDistances.push(l[e]);const c=e.boundingBox;null!==c&&(this.boundingBox=c.clone());const h=e.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Li extends ri{constructor(e,t,i,n,r,s){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const o=this;e=e||1,t=t||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1,s=Math.floor(s)||1;const a=[],l=[],c=[],h=[];let u=0,d=0;function p(e,t,i,n,r,s,p,m,f,g,v){const x=s/f,y=p/g,b=s/2,w=p/2,_=m/2,M=f+1,S=g+1;let C=0,T=0;const E=new de;for(let s=0;s<S;s++){const o=s*y-w;for(let a=0;a<M;a++){const u=a*x-b;E[e]=u*n,E[t]=o*r,E[i]=_,l.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[i]=m>0?1:-1,c.push(E.x,E.y,E.z),h.push(a/f),h.push(1-s/g),C+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const i=u+t+M*e,n=u+t+M*(e+1),r=u+(t+1)+M*(e+1),s=u+(t+1)+M*e;a.push(i,n,s),a.push(n,r,s),T+=6}o.addGroup(d,T,v),d+=T,u+=C}p("z","y","x",-1,-1,i,t,e,s,r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(a),this.setAttribute("position",new qt(l,3)),this.setAttribute("normal",new qt(c,3)),this.setAttribute("uv",new qt(h,2))}}function Ri(e){const t={};for(const i in e){t[i]={};for(const n in e[i]){const r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function Ii(e){const t={};for(let i=0;i<e.length;i++){const n=Ri(e[i]);for(const e in n)t[e]=n[e]}return t}const Oi={clone:Ri,merge:Ii};function Ui(e){Ut.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Ni(){Be.call(this),this.type="Camera",this.matrixWorldInverse=new be,this.projectionMatrix=new be,this.projectionMatrixInverse=new be}function ki(e,t,i,n){Ni.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Ui.prototype=Object.create(Ut.prototype),Ui.prototype.constructor=Ui,Ui.prototype.isShaderMaterial=!0,Ui.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ri(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this},Ui.prototype.toJSON=function(e){const t=Ut.prototype.toJSON.call(this,e);t.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t},Ni.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ni,isCamera:!0,copy:function(e,t){return Be.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new de),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Be.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Be.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ki.prototype=Object.assign(Object.create(Ni.prototype),{constructor:ki,isPerspectiveCamera:!0,copy:function(e,t){return Ni.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*$.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*$.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*$.RAD2DEG*Math.atan(Math.tan(.5*$.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let e=this.near,t=e*Math.tan(.5*$.DEG2RAD*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,o=s.fullHeight;r+=s.offsetX*n/e,t-=s.offsetY*i/o,n*=s.width/e,i*=s.height/o}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Be.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Bi=90;function Gi(e,t,i){if(Be.call(this),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const n=new ki(Bi,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new de(1,0,0)),this.add(n);const r=new ki(Bi,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new de(-1,0,0)),this.add(r);const s=new ki(Bi,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new de(0,1,0)),this.add(s);const o=new ki(Bi,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new de(0,-1,0)),this.add(o);const a=new ki(Bi,1,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new de(0,0,1)),this.add(a);const l=new ki(Bi,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new de(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const c=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const u=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,s),e.setRenderTarget(i,3),e.render(t,o),e.setRenderTarget(i,4),e.render(t,a),i.texture.generateMipmaps=u,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c},this.clear=function(e,t,n,r){const s=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(i,s),e.clear(t,n,r);e.setRenderTarget(s)}}function Fi(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),ae.call(this,e,e,t)}function Hi(e,t,i,n,r,s,o,a,l,c,h,u){se.call(this,null,s,o,a,l,c,n,r,h,u),this.image={data:e||null,width:t||1,height:i||1},this.magFilter=void 0!==l?l:x,this.minFilter=void 0!==c?c:x,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Gi.prototype=Object.create(Be.prototype),Gi.prototype.constructor=Gi,Fi.prototype=Object.create(ae.prototype),Fi.prototype.constructor=Fi,Fi.prototype.isWebGLCubeRenderTarget=!0,Fi.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;const i=new Ge,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV = equirectUv( direction );","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},r=new Ui({name:"CubemapFromEquirect",uniforms:Ri(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const s=new Mi(new Li(5,5,5),r);i.add(s);return new Gi(1,10,this).update(e,i),s.geometry.dispose(),s.material.dispose(),this},Hi.prototype=Object.create(se.prototype),Hi.prototype.constructor=Hi,Hi.prototype.isDataTexture=!0;const ji=new it,zi=new de;function Vi(e,t,i,n,r,s){this.planes=[void 0!==e?e:new mt,void 0!==t?t:new mt,void 0!==i?i:new mt,void 0!==n?n:new mt,void 0!==r?r:new mt,void 0!==s?s:new mt]}Object.assign(Vi.prototype,{set:function(e,t,i,n,r,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(s),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this},setFromProjectionMatrix:function(e){const t=this.planes,i=e.elements,n=i[0],r=i[1],s=i[2],o=i[3],a=i[4],l=i[5],c=i[6],h=i[7],u=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],v=i[14],x=i[15];return t[0].setComponents(o-n,h-a,m-u,x-f).normalize(),t[1].setComponents(o+n,h+a,m+u,x+f).normalize(),t[2].setComponents(o+r,h+l,m+d,x+g).normalize(),t[3].setComponents(o-r,h-l,m-d,x-g).normalize(),t[4].setComponents(o-s,h-c,m-p,x-v).normalize(),t[5].setComponents(o+s,h+c,m+p,x+v).normalize(),this},intersectsObject:function(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),ji.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ji)},intersectsSprite:function(e){return ji.center.set(0,0,0),ji.radius=.7071067811865476,ji.applyMatrix4(e.matrixWorld),this.intersectsSphere(ji)},intersectsSphere:function(e){const t=this.planes,i=e.center,n=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(i)<n)return!1}return!0},intersectsBox:function(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(zi.x=n.normal.x>0?e.max.x:e.min.x,zi.y=n.normal.y>0?e.max.y:e.min.y,zi.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(zi)<0)return!1}return!0},containsPoint:function(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}});const Wi={common:{diffuse:{value:new At(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new te},uv2Transform:{value:new te},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new At(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new At(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new te}},sprite:{diffuse:{value:new At(15658734)},opacity:{value:1},center:{value:new ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new te}}};function Xi(){let e=null,t=!1,i=null,n=null;function r(t,s){i(t,s),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function qi(e,t){const i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const i=n.get(t);i&&(e.deleteBuffer(i.buffer),n.delete(t))},update:function(t,r){t.isInterleavedBufferAttribute&&(t=t.data);const s=n.get(t);void 0===s?n.set(t,function(t,i){const n=t.array,r=t.usage,s=e.createBuffer();e.bindBuffer(i,s),e.bufferData(i,n,r),t.onUploadCallback();let o=5126;return n instanceof Float32Array?o=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=5123:n instanceof Int16Array?o=5122:n instanceof Uint32Array?o=5125:n instanceof Int32Array?o=5124:n instanceof Int8Array?o=5120:n instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,r)):s.version<t.version&&(!function(t,n,r){const s=n.array,o=n.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,s):(i?e.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):e.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1)}(s.buffer,t,r),s.version=t.version)}}}function Yi(e,t,i,n){Di.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new Zi(e,t,i,n)),this.mergeVertices()}function Zi(e,t,i,n){ri.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=(e=e||1)/2,s=(t=t||1)/2,o=Math.floor(i)||1,a=Math.floor(n)||1,l=o+1,c=a+1,h=e/o,u=t/a,d=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*u-s;for(let i=0;i<l;i++){const n=i*h-r;p.push(n,-t,0),m.push(0,0,1),f.push(i/o),f.push(1-e/a)}}for(let e=0;e<a;e++)for(let t=0;t<o;t++){const i=t+l*e,n=t+l*(e+1),r=t+1+l*(e+1),s=t+1+l*e;d.push(i,n,s),d.push(n,r,s)}this.setIndex(d),this.setAttribute("position",new qt(p,3)),this.setAttribute("normal",new qt(m,3)),this.setAttribute("uv",new qt(f,2))}Yi.prototype=Object.create(Di.prototype),Yi.prototype.constructor=Yi,Zi.prototype=Object.create(ri.prototype),Zi.prototype.constructor=Zi;const Ki={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Qi={basic:{uniforms:Ii([Wi.common,Wi.specularmap,Wi.envmap,Wi.aomap,Wi.lightmap,Wi.fog]),vertexShader:Ki.meshbasic_vert,fragmentShader:Ki.meshbasic_frag},lambert:{uniforms:Ii([Wi.common,Wi.specularmap,Wi.envmap,Wi.aomap,Wi.lightmap,Wi.emissivemap,Wi.fog,Wi.lights,{emissive:{value:new At(0)}}]),vertexShader:Ki.meshlambert_vert,fragmentShader:Ki.meshlambert_frag},phong:{uniforms:Ii([Wi.common,Wi.specularmap,Wi.envmap,Wi.aomap,Wi.lightmap,Wi.emissivemap,Wi.bumpmap,Wi.normalmap,Wi.displacementmap,Wi.fog,Wi.lights,{emissive:{value:new At(0)},specular:{value:new At(1118481)},shininess:{value:30}}]),vertexShader:Ki.meshphong_vert,fragmentShader:Ki.meshphong_frag},standard:{uniforms:Ii([Wi.common,Wi.envmap,Wi.aomap,Wi.lightmap,Wi.emissivemap,Wi.bumpmap,Wi.normalmap,Wi.displacementmap,Wi.roughnessmap,Wi.metalnessmap,Wi.fog,Wi.lights,{emissive:{value:new At(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ki.meshphysical_vert,fragmentShader:Ki.meshphysical_frag},toon:{uniforms:Ii([Wi.common,Wi.aomap,Wi.lightmap,Wi.emissivemap,Wi.bumpmap,Wi.normalmap,Wi.displacementmap,Wi.gradientmap,Wi.fog,Wi.lights,{emissive:{value:new At(0)}}]),vertexShader:Ki.meshtoon_vert,fragmentShader:Ki.meshtoon_frag},matcap:{uniforms:Ii([Wi.common,Wi.bumpmap,Wi.normalmap,Wi.displacementmap,Wi.fog,{matcap:{value:null}}]),vertexShader:Ki.meshmatcap_vert,fragmentShader:Ki.meshmatcap_frag},points:{uniforms:Ii([Wi.points,Wi.fog]),vertexShader:Ki.points_vert,fragmentShader:Ki.points_frag},dashed:{uniforms:Ii([Wi.common,Wi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ki.linedashed_vert,fragmentShader:Ki.linedashed_frag},depth:{uniforms:Ii([Wi.common,Wi.displacementmap]),vertexShader:Ki.depth_vert,fragmentShader:Ki.depth_frag},normal:{uniforms:Ii([Wi.common,Wi.bumpmap,Wi.normalmap,Wi.displacementmap,{opacity:{value:1}}]),vertexShader:Ki.normal_vert,fragmentShader:Ki.normal_frag},sprite:{uniforms:Ii([Wi.sprite,Wi.fog]),vertexShader:Ki.sprite_vert,fragmentShader:Ki.sprite_frag},background:{uniforms:{uvTransform:{value:new te},t2D:{value:null}},vertexShader:Ki.background_vert,fragmentShader:Ki.background_frag},cube:{uniforms:Ii([Wi.envmap,{opacity:{value:1}}]),vertexShader:Ki.cube_vert,fragmentShader:Ki.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ki.equirect_vert,fragmentShader:Ki.equirect_frag},distanceRGBA:{uniforms:Ii([Wi.common,Wi.displacementmap,{referencePosition:{value:new de},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ki.distanceRGBA_vert,fragmentShader:Ki.distanceRGBA_frag},shadow:{uniforms:Ii([Wi.lights,Wi.fog,{color:{value:new At(0)},opacity:{value:1}}]),vertexShader:Ki.shadow_vert,fragmentShader:Ki.shadow_frag}};function Ji(e,t,i,n){const r=new At(0);let s,o,a=0,l=null,c=0,h=null;function u(e,i){t.buffers.color.setClear(e.r,e.g,e.b,i,n)}return{getClearColor:function(){return r},setClearColor:function(e,t){r.set(e),a=void 0!==t?t:1,u(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(e){a=e,u(r,a)},render:function(t,n,d,p){let f=!0===n.isScene?n.background:null;const g=e.xr,v=g.getSession&&g.getSession();if(v&&"additive"===v.environmentBlendMode&&(f=null),null===f?u(r,a):f&&f.isColor&&(u(f,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.isWebGLCubeRenderTarget||f.mapping===m)){void 0===o&&(o=new Mi(new Li(1,1,1),new Ui({name:"BackgroundCubeMaterial",uniforms:Ri(Qi.cube.uniforms),vertexShader:Qi.cube.vertexShader,fragmentShader:Qi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o));const n=f.isWebGLCubeRenderTarget?f.texture:f;o.material.uniforms.envMap.value=n,o.material.uniforms.flipEnvMap.value=n.isCubeTexture?-1:1,l===f&&c===n.version&&h===e.toneMapping||(o.material.needsUpdate=!0,l=f,c=n.version,h=e.toneMapping),t.unshift(o,o.geometry,o.material,0,0,null)}else f&&f.isTexture&&(void 0===s&&(s=new Mi(new Zi(2,2),new Ui({name:"BackgroundMaterial",uniforms:Ri(Qi.background.uniforms),vertexShader:Qi.background.vertexShader,fragmentShader:Qi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),s.material.uniforms.uvTransform.value.copy(f.matrix),l===f&&c===f.version&&h===e.toneMapping||(s.material.needsUpdate=!0,l=f,c=f.version,h=e.toneMapping),t.unshift(s,s.geometry,s.material,0,0,null))}}}function $i(e,t,i,n){const r=e.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||null!==s,a={},l=d(null);let c=l;function h(t){return n.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function u(t){return n.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function d(e){const t=[],i=[],n=[];for(let e=0;e<r;e++)t[e]=0,i[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{}}}function p(){const e=c.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){f(e,0)}function f(i,r){const s=c.newAttributes,o=c.enabledAttributes,a=c.attributeDivisors;if(s[i]=1,0===o[i]&&(e.enableVertexAttribArray(i),o[i]=1),a[i]!==r){(n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),a[i]=r}}function g(){const t=c.newAttributes,i=c.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function v(t,i,r,s,o,a){!0!==n.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,i,r,s,o,a):e.vertexAttribIPointer(t,i,r,s,o,a)}function x(){y(),c!==l&&(c=l,h(c.object))}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,x,y){let b=!1;if(o){const t=function(t,i,r){const o=!0===r.wireframe;let l=a[t.id];void 0===l&&(l={},a[t.id]=l);let c=l[i.id];void 0===c&&(c={},l[i.id]=c);let h=c[o];void 0===h&&(h=d(n.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),c[o]=h);return h}(x,u,l);c!==t&&(c=t,h(c.object)),b=function(e){const t=c.attributes,i=e.attributes;if(Object.keys(t).length!==Object.keys(i).length)return!0;for(const e in i){const n=t[e],r=i[e];if(n.attribute!==r)return!0;if(n.data!==r.data)return!0}return!1}(x),b&&function(e){const t={},i=e.attributes;for(const e in i){const n=i[e],r={};r.attribute=n,n.data&&(r.data=n.data),t[e]=r}c.attributes=t}(x)}else{const e=!0===l.wireframe;c.geometry===x.id&&c.program===u.id&&c.wireframe===e||(c.geometry=x.id,c.program=u.id,c.wireframe=e,b=!0)}!0===r.isInstancedMesh&&(b=!0),null!==y&&i.update(y,34963),b&&(!function(r,s,o,a){if(!1===n.isWebGL2&&(r.isInstancedMesh||a.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=a.attributes,c=o.getAttributes(),h=s.defaultAttributeValues;for(const t in c){const n=c[t];if(n>=0){const s=l[t];if(void 0!==s){const t=s.normalized,r=s.itemSize,o=i.get(s);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(s.isInterleavedBufferAttribute){const i=s.data,o=i.stride,u=s.offset;i&&i.isInstancedInterleavedBuffer?(f(n,i.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=i.meshPerAttribute*i.count)):m(n),e.bindBuffer(34962,l),v(n,r,c,t,o*h,u*h)}else s.isInstancedBufferAttribute?(f(n,s.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=s.meshPerAttribute*s.count)):m(n),e.bindBuffer(34962,l),v(n,r,c,t,0,0)}else if("instanceMatrix"===t){const t=i.get(r.instanceMatrix);if(void 0===t)continue;const s=t.buffer,o=t.type;f(n+0,1),f(n+1,1),f(n+2,1),f(n+3,1),e.bindBuffer(34962,s),e.vertexAttribPointer(n+0,4,o,!1,64,0),e.vertexAttribPointer(n+1,4,o,!1,64,16),e.vertexAttribPointer(n+2,4,o,!1,64,32),e.vertexAttribPointer(n+3,4,o,!1,64,48)}else if(void 0!==h){const i=h[t];if(void 0!==i)switch(i.length){case 2:e.vertexAttrib2fv(n,i);break;case 3:e.vertexAttrib3fv(n,i);break;case 4:e.vertexAttrib4fv(n,i);break;default:e.vertexAttrib1fv(n,i)}}}}g()}(r,l,u,x),null!==y&&e.bindBuffer(34963,i.get(y).buffer))},reset:x,resetDefaultState:y,dispose:function(){x();for(const e in a){const t=a[e];for(const e in t){const i=t[e];for(const e in i)u(i[e].object),delete i[e];delete t[e]}delete a[e]}},releaseStatesOfGeometry:function(e){if(void 0===a[e.id])return;const t=a[e.id];for(const e in t){const i=t[e];for(const e in i)u(i[e].object),delete i[e];delete t[e]}delete a[e.id]},releaseStatesOfProgram:function(e){for(const t in a){const i=a[t];if(void 0===i[e.id])continue;const n=i[e.id];for(const e in n)u(n[e].object),delete n[e];delete i[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function en(e,t,i,n){const r=n.isWebGL2;let s;this.setMode=function(e){s=e},this.render=function(t,n){e.drawArrays(s,t,n),i.update(n,s)},this.renderInstances=function(n,o,a,l){if(0===l)return;let c,h;if(r)c=e,h="drawArraysInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,o,a,l),i.update(a,s,l)}}function tn(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==i.precision?i.precision:"highp";const a=r(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const l=!0===i.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),f=e.getParameter(36348),g=e.getParameter(36349),v=h>0,x=s||!!t.get("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==n)return n;const i=t.get("EXT_texture_filter_anisotropic");return n=null!==i?e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,n},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:v&&x,maxSamples:s?e.getParameter(36183):0}}function nn(){const e=this;let t=null,i=0,n=!1,r=!1;const s=new mt,o=new te,a={value:null,needsUpdate:!1};function l(){a.value!==t&&(a.value=t,a.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function c(t,i,n,r){let l=null!==t?t.length:0,c=null;if(0!==l){if(c=a.value,!0!==r||null===c){const e=n+4*l,r=i.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,i=n;e!==l;++e,i+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(c,i),c[i+3]=s.constant}a.value=c,a.needsUpdate=!0}return e.numPlanes=l,e.numIntersection=0,c}this.uniform=a,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,s){const o=0!==e.length||r||0!==i||n;return n=r,t=c(e,s,0),i=e.length,o},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(e,s,o,h,u,d){if(!n||null===e||0===e.length||r&&!o)r?c(null):l();else{const n=r?0:i,o=4*n;let l=u.clippingState||null;a.value=l,l=c(e,h,o,d);for(let e=0;e!==o;++e)l[e]=t[e];u.clippingState=l,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=n}}}function rn(e){const t={};return{get:function(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),t[i]=n,n}}}function sn(e,t,i,n){const r=new WeakMap,s=new WeakMap;function o(e){const a=e.target,l=r.get(a);null!==l.index&&t.remove(l.index);for(const e in l.attributes)t.remove(l.attributes[e]);a.removeEventListener("dispose",o),r.delete(a);const c=s.get(l);c&&(t.remove(c),s.delete(l)),n.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,i.memory.geometries--}function a(e){const i=[],n=e.index,r=e.attributes.position;let o=0;if(null!==n){const e=n.array;o=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],r=e[t+1],s=e[t+2];i.push(n,r,r,s,s,n)}}else{const e=r.array;o=r.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,r=t+2;i.push(e,n,n,r,r,e)}}const a=new(Kt(i)>65535?Xt:Vt)(i,1);a.version=o;const l=s.get(e);l&&t.remove(l),s.set(e,a)}return{get:function(e,t){let n=r.get(t);return n||(t.addEventListener("dispose",o),t.isBufferGeometry?n=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new ri).setFromObject(e)),n=t._bufferGeometry),r.set(t,n),i.memory.geometries++,n)},update:function(e){const i=e.attributes;for(const e in i)t.update(i[e],34962);const n=e.morphAttributes;for(const e in n){const i=n[e];for(let e=0,n=i.length;e<n;e++)t.update(i[e],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const i=e.index;null!==i&&t.version<i.version&&a(e)}else a(e);return s.get(e)}}}function on(e,t,i,n){const r=n.isWebGL2;let s,o,a;this.setMode=function(e){s=e},this.setIndex=function(e){o=e.type,a=e.bytesPerElement},this.render=function(t,n){e.drawElements(s,n,o,t*a),i.update(n,s)},this.renderInstances=function(n,l,c,h){if(0===h)return;let u,d;if(r)u=e,d="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[d](s,c,o,l*a,h),i.update(c,s,h)}}function an(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,n){switch(n=n||1,t.calls++,i){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function ln(e,t){return e[0]-t[0]}function cn(e,t){return Math.abs(t[1])-Math.abs(e[1])}function hn(e){const t={},i=new Float32Array(8),n=[];for(let e=0;e<8;e++)n[e]=[e,0];return{update:function(r,s,o,a){const l=r.morphTargetInfluences,c=void 0===l?0:l.length;let h=t[s.id];if(void 0===h){h=[];for(let e=0;e<c;e++)h[e]=[e,0];t[s.id]=h}for(let e=0;e<c;e++){const t=h[e];t[0]=e,t[1]=l[e]}h.sort(cn);for(let e=0;e<8;e++)e<c&&h[e][1]?(n[e][0]=h[e][0],n[e][1]=h[e][1]):(n[e][0]=Number.MAX_SAFE_INTEGER,n[e][1]=0);n.sort(ln);const u=o.morphTargets&&s.morphAttributes.position,d=o.morphNormals&&s.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=n[e],r=t[0],o=t[1];r!==Number.MAX_SAFE_INTEGER&&o?(u&&s.getAttribute("morphTarget"+e)!==u[r]&&s.setAttribute("morphTarget"+e,u[r]),d&&s.getAttribute("morphNormal"+e)!==d[r]&&s.setAttribute("morphNormal"+e,d[r]),i[e]=o,p+=o):(u&&void 0!==s.getAttribute("morphTarget"+e)&&s.deleteAttribute("morphTarget"+e),d&&void 0!==s.getAttribute("morphNormal"+e)&&s.deleteAttribute("morphNormal"+e),i[e]=0)}const m=s.morphTargetsRelative?1:1-p;a.getUniforms().setValue(e,"morphTargetBaseInfluence",m),a.getUniforms().setValue(e,"morphTargetInfluences",i)}}}function un(e,t,i,n){let r=new WeakMap;return{update:function(e){const s=n.render.frame,o=e.geometry,a=t.get(e,o);return r.get(a)!==s&&(o.isGeometry&&a.updateFromObject(e),t.update(a),r.set(a,s)),e.isInstancedMesh&&i.update(e.instanceMatrix,34962),a},dispose:function(){r=new WeakMap}}}function dn(e,t,i,n,r,s,o,a,l,c){e=void 0!==e?e:[],t=void 0!==t?t:301,o=void 0!==o?o:D,se.call(this,e,t,i,n,r,s,o,a,l,c),this.flipY=!1}function pn(e,t,i,n){se.call(this,null),this.image={data:e||null,width:t||1,height:i||1,depth:n||1},this.magFilter=x,this.minFilter=x,this.wrapR=g,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function mn(e,t,i,n){se.call(this,null),this.image={data:e||null,width:t||1,height:i||1,depth:n||1},this.magFilter=x,this.minFilter=x,this.wrapR=g,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Qi.physical={uniforms:Ii([Qi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ee(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new At(0)},transparency:{value:0}}]),vertexShader:Ki.meshphysical_vert,fragmentShader:Ki.meshphysical_frag},dn.prototype=Object.create(se.prototype),dn.prototype.constructor=dn,dn.prototype.isCubeTexture=!0,Object.defineProperty(dn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),pn.prototype=Object.create(se.prototype),pn.prototype.constructor=pn,pn.prototype.isDataTexture2DArray=!0,mn.prototype=Object.create(se.prototype),mn.prototype.constructor=mn,mn.prototype.isDataTexture3D=!0;const fn=new se,gn=new pn,vn=new mn,xn=new dn,yn=[],bn=[],wn=new Float32Array(16),_n=new Float32Array(9),Mn=new Float32Array(4);function Sn(e,t,i){const n=e[0];if(n<=0||n>0)return e;let r=t*i,s=yn[r];if(void 0===s&&(s=new Float32Array(r),yn[r]=s),0!==t){n.toArray(s,0);for(let n=1,r=0;n!==t;++n)r+=i,e[n].toArray(s,r)}return s}function Cn(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function Tn(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function En(e,t){let i=bn[t];void 0===i&&(i=new Int32Array(t),bn[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function Pn(e,t){const i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function An(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(Cn(i,t))return;e.uniform2fv(this.addr,t),Tn(i,t)}}function Dn(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)i[0]===t.r&&i[1]===t.g&&i[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(Cn(i,t))return;e.uniform3fv(this.addr,t),Tn(i,t)}}function Ln(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(Cn(i,t))return;e.uniform4fv(this.addr,t),Tn(i,t)}}function Rn(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Cn(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),Tn(i,t)}else{if(Cn(i,n))return;Mn.set(n),e.uniformMatrix2fv(this.addr,!1,Mn),Tn(i,n)}}function In(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Cn(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),Tn(i,t)}else{if(Cn(i,n))return;_n.set(n),e.uniformMatrix3fv(this.addr,!1,_n),Tn(i,n)}}function On(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(Cn(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),Tn(i,t)}else{if(Cn(i,n))return;wn.set(n),e.uniformMatrix4fv(this.addr,!1,wn),Tn(i,n)}}function Un(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(t||fn,r)}function Nn(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||gn,r)}function kn(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||vn,r)}function Bn(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(t||xn,r)}function Gn(e,t){const i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function Fn(e,t){const i=this.cache;Cn(i,t)||(e.uniform2iv(this.addr,t),Tn(i,t))}function Hn(e,t){const i=this.cache;Cn(i,t)||(e.uniform3iv(this.addr,t),Tn(i,t))}function jn(e,t){const i=this.cache;Cn(i,t)||(e.uniform4iv(this.addr,t),Tn(i,t))}function zn(e,t){const i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function Vn(e,t){e.uniform1fv(this.addr,t)}function Wn(e,t){e.uniform1iv(this.addr,t)}function Xn(e,t){e.uniform2iv(this.addr,t)}function qn(e,t){e.uniform3iv(this.addr,t)}function Yn(e,t){e.uniform4iv(this.addr,t)}function Zn(e,t){const i=Sn(t,this.size,2);e.uniform2fv(this.addr,i)}function Kn(e,t){const i=Sn(t,this.size,3);e.uniform3fv(this.addr,i)}function Qn(e,t){const i=Sn(t,this.size,4);e.uniform4fv(this.addr,i)}function Jn(e,t){const i=Sn(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function $n(e,t){const i=Sn(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function er(e,t){const i=Sn(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function tr(e,t,i){const n=t.length,r=En(i,n);e.uniform1iv(this.addr,r);for(let e=0;e!==n;++e)i.safeSetTexture2D(t[e]||fn,r[e])}function ir(e,t,i){const n=t.length,r=En(i,n);e.uniform1iv(this.addr,r);for(let e=0;e!==n;++e)i.safeSetTextureCube(t[e]||xn,r[e])}function nr(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Pn;case 35664:return An;case 35665:return Dn;case 35666:return Ln;case 35674:return Rn;case 35675:return In;case 35676:return On;case 5124:case 35670:return Gn;case 35667:case 35671:return Fn;case 35668:case 35672:return Hn;case 35669:case 35673:return jn;case 5125:return zn;case 35678:case 36198:case 36298:case 36306:case 35682:return Un;case 35679:case 36299:case 36307:return kn;case 35680:case 36300:case 36308:case 36293:return Bn;case 36289:case 36303:case 36311:case 36292:return Nn}}(t.type)}function rr(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Vn;case 35664:return Zn;case 35665:return Kn;case 35666:return Qn;case 35674:return Jn;case 35675:return $n;case 35676:return er;case 5124:case 35670:return Wn;case 35667:case 35671:return Xn;case 35668:case 35672:return qn;case 35669:case 35673:return Yn;case 35678:case 36198:case 36298:case 36306:case 35682:return tr;case 35680:case 36300:case 36308:case 36293:return ir}}(t.type)}function sr(e){this.id=e,this.seq=[],this.map={}}rr.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Tn(t,e)},sr.prototype.setValue=function(e,t,i){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const s=n[r];s.setValue(e,t[s.id],i)}};const or=/([\w\d_]+)(\])?(\[|\.)?/g;function ar(e,t){e.seq.push(t),e.map[t.id]=t}function lr(e,t,i){const n=e.name,r=n.length;for(or.lastIndex=0;;){const s=or.exec(n),o=or.lastIndex;let a=s[1],l="]"===s[2],c=s[3];if(l&&(a|=0),void 0===c||"["===c&&o+2===r){ar(i,void 0===c?new nr(a,e,t):new rr(a,e,t));break}{let e=i.map[a];void 0===e&&(e=new sr(a),ar(i,e)),i=e}}}function cr(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){const i=e.getActiveUniform(t,n);lr(i,e.getUniformLocation(t,i.name),this)}}function hr(e,t,i){const n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}cr.prototype.setValue=function(e,t,i,n){const r=this.map[t];void 0!==r&&r.setValue(e,i,n)},cr.prototype.setOptional=function(e,t,i){const n=t[i];void 0!==n&&this.setValue(e,i,n)},cr.upload=function(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){const s=t[r],o=i[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,n)}},cr.seqWithValue=function(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const r=e[n];r.id in t&&i.push(r)}return i};let ur=0;function dr(e){switch(e){case H:return["Linear","( value )"];case j:return["sRGB","( value )"];case V:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case z:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function pr(e,t,i){const n=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+r+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function mr(e,t){const i=dr(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function fr(e,t){const i=dr(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function gr(e,t){let i;switch(t){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function vr(e){return""!==e}function xr(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function yr(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const br=/^[ \t]*#include +<([\w\d./]+)>/gm;function wr(e){return e.replace(br,_r)}function _r(e,t){const i=Ki[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return wr(i)}const Mr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Sr=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function Cr(e){return e.replace(Sr,Er).replace(Mr,Tr)}function Tr(e,t,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Er(e,t,i,n)}function Er(e,t,i,n){let r="";for(let e=parseInt(t);e<parseInt(i);e++)r+=n.replace(/\[ i \]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function Pr(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ar(e,t,i,n){const r=e.getContext(),s=i.defines;let o=i.vertexShader,a=i.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(i),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case m:case 307:t="ENVMAP_TYPE_CUBE_UV";break;case 303:case 304:t="ENVMAP_TYPE_EQUIREC"}return t}(i),h=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 304:t="ENVMAP_MODE_REFRACTION"}return t}(i),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(i),d=e.gammaFactor>0?e.gammaFactor:1,p=i.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(vr).join("\n")}(i),f=function(e){const t=[];for(const i in e){const n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(s),g=r.createProgram();let v,x;if(i.isRawShaderMaterial?(v=[f].filter(vr).join("\n"),v.length>0&&(v+="\n"),x=[p,f].filter(vr).join("\n"),x.length>0&&(x+="\n")):(v=[Pr(i),"#define SHADER_NAME "+i.shaderName,f,i.instancing?"#define USE_INSTANCING":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(vr).join("\n"),x=[p,Pr(i),"#define SHADER_NAME "+i.shaderName,f,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",i.envMap?"#define "+u:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?Ki.tonemapping_pars_fragment:"",0!==i.toneMapping?gr("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",Ki.encodings_pars_fragment,i.map?mr("mapTexelToLinear",i.mapEncoding):"",i.matcap?mr("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?mr("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?mr("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?mr("lightMapTexelToLinear",i.lightMapEncoding):"",fr("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(vr).join("\n")),o=wr(o),o=xr(o,i),o=yr(o,i),a=wr(a),a=xr(a,i),a=yr(a,i),o=Cr(o),a=Cr(a),i.isWebGL2&&!i.isRawShaderMaterial){let e=!1;const t=/^\s*#version\s+300\s+es\s*\n/;i.isShaderMaterial&&null!==o.match(t)&&null!==a.match(t)&&(e=!0,o=o.replace(t,""),a=a.replace(t,"")),v=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,x=["#version 300 es\n","#define varying in",e?"":"out highp vec4 pc_fragColor;",e?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x}const y=x+a,b=hr(r,35633,v+o),w=hr(r,35632,y);if(r.attachShader(g,b),r.attachShader(g,w),void 0!==i.index0AttributeName?r.bindAttribLocation(g,0,i.index0AttributeName):!0===i.morphTargets&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),e.debug.checkShaderErrors){const e=r.getProgramInfoLog(g).trim(),t=r.getShaderInfoLog(b).trim(),i=r.getShaderInfoLog(w).trim();let n=!0,s=!0;if(!1===r.getProgramParameter(g,35714)){n=!1;const t=pr(r,b,"vertex"),i=pr(r,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(g,35715),"gl.getProgramInfoLog",e,t,i)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==i||(s=!1);s&&(this.diagnostics={runnable:n,programLog:e,vertexShader:{log:t,prefix:v},fragmentShader:{log:i,prefix:x}})}let _,M;return r.deleteShader(b),r.deleteShader(w),this.getUniforms=function(){return void 0===_&&(_=new cr(r,g)),_},this.getAttributes=function(){return void 0===M&&(M=function(e,t){const i={},n=e.getProgramParameter(t,35721);for(let r=0;r<n;r++){const n=e.getActiveAttrib(t,r).name;i[n]=e.getAttribLocation(t,n)}return i}(r,g)),M},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.name=i.shaderName,this.id=ur++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=w,this}function Dr(e,t,i,n){const r=[],s=i.isWebGL2,o=i.logarithmicDepthBuffer,a=i.floatVertexTextures,l=i.maxVertexUniforms,c=i.vertexTextures;let h=i.precision;const u={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},d=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function p(e){let t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=H,t}return{getParameters:function(n,r,d,f,g,v,x){const y=f.fog,b=n.isMeshStandardMaterial?f.environment:null,w=n.envMap||b,_=u[n.type],M=x.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(a)return 1024;{const e=l,i=Math.floor((e-20)/4),n=Math.min(i,t.length);return n<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+n+"."),0):n}}(x):0;null!==n.precision&&(h=i.getMaxPrecision(n.precision),h!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",h,"instead."));const S=function(e,t){let i;if(t){const n=Qi[t];i={name:e.name||e.type,uniforms:Oi.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else i={name:e.name||e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return i}(n,_);n.onBeforeCompile(S,e);const C=e.getRenderTarget();return{isWebGL2:s,shaderID:_,shaderName:S.name,uniforms:S.uniforms,vertexShader:S.vertexShader,fragmentShader:S.fragmentShader,defines:n.defines,isRawShaderMaterial:n.isRawShaderMaterial,isShaderMaterial:n.isShaderMaterial,precision:h,instancing:!0===x.isInstancedMesh,supportsVertexTextures:c,outputEncoding:null!==C?p(C.texture):e.outputEncoding,map:!!n.map,mapEncoding:p(n.map),matcap:!!n.matcap,matcapEncoding:p(n.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:p(w),envMapCubeUV:!!w&&(w.mapping===m||307===w.mapping),lightMap:!!n.lightMap,lightMapEncoding:p(n.lightMap),aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:p(n.emissiveMap),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,objectSpaceNormalMap:1===n.normalMapType,tangentSpaceNormalMap:0===n.normalMapType,clearcoatMap:!!n.clearcoatMap,clearcoatRoughnessMap:!!n.clearcoatRoughnessMap,clearcoatNormalMap:!!n.clearcoatNormalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,gradientMap:!!n.gradientMap,sheen:!!n.sheen,combine:n.combine,vertexTangents:n.normalMap&&n.vertexTangents,vertexColors:n.vertexColors,vertexUvs:!!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatMap||n.clearcoatRoughnessMap||n.clearcoatNormalMap||n.displacementMap),uvsVertexOnly:!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatNormalMap||!n.displacementMap),fog:!!y,useFog:n.fog,fogExp2:y&&y.isFogExp2,flatShading:n.flatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:o,skinning:n.skinning&&M>0,maxBones:M,useVertexTexture:a,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numDirLightShadows:r.directionalShadowMap.length,numPointLightShadows:r.pointShadowMap.length,numSpotLightShadows:r.spotShadowMap.length,numClippingPlanes:g,numClipIntersection:v,dithering:n.dithering,shadowMapEnabled:e.shadowMap.enabled&&d.length>0,shadowMapType:e.shadowMap.type,toneMapping:n.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:2===n.side,flipSided:1===n.side,depthPacking:void 0!==n.depthPacking&&n.depthPacking,index0AttributeName:n.index0AttributeName,extensionDerivatives:n.extensions&&n.extensions.derivatives,extensionFragDepth:n.extensions&&n.extensions.fragDepth,extensionDrawBuffers:n.extensions&&n.extensions.drawBuffers,extensionShaderTextureLOD:n.extensions&&n.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:s||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||null!==t.get("EXT_shader_texture_lod"),customProgramCacheKey:n.customProgramCacheKey()}},getProgramCacheKey:function(t){const i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.fragmentShader),i.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)i.push(e),i.push(t.defines[e]);if(void 0===t.isRawShaderMaterial){for(let e=0;e<d.length;e++)i.push(t[d[e]]);i.push(e.outputEncoding),i.push(e.gammaFactor)}return i.push(t.customProgramCacheKey),i.join()},acquireProgram:function(t,i){let s;for(let e=0,t=r.length;e<t;e++){const t=r[e];if(t.cacheKey===i){s=t,++s.usedTimes;break}}return void 0===s&&(s=new Ar(e,i,t,n),r.push(s)),s},releaseProgram:function(e){if(0==--e.usedTimes){const t=r.indexOf(e);r[t]=r[r.length-1],r.pop(),e.destroy()}},programs:r}}function Lr(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function Rr(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ir(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Or(){const e=[];let t=0;const i=[],n=[],r={id:-1};function s(i,n,s,o,a,l){let c=e[t];return void 0===c?(c={id:i.id,object:i,geometry:n,material:s,program:s.program||r,groupOrder:o,renderOrder:i.renderOrder,z:a,group:l},e[t]=c):(c.id=i.id,c.object=i,c.geometry=n,c.material=s,c.program=s.program||r,c.groupOrder=o,c.renderOrder=i.renderOrder,c.z=a,c.group=l),t++,c}return{opaque:i,transparent:n,init:function(){t=0,i.length=0,n.length=0},push:function(e,t,r,o,a,l){const c=s(e,t,r,o,a,l);(!0===r.transparent?n:i).push(c)},unshift:function(e,t,r,o,a,l){const c=s(e,t,r,o,a,l);(!0===r.transparent?n:i).unshift(c)},finish:function(){for(let i=t,n=e.length;i<n;i++){const t=e[i];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}},sort:function(e,t){i.length>1&&i.sort(e||Rr),n.length>1&&n.sort(t||Ir)}}}function Ur(){let e=new WeakMap;function t(i){const n=i.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(i,n){const r=e.get(i);let s;return void 0===r?(s=new Or,e.set(i,new WeakMap),e.get(i).set(n,s),i.addEventListener("dispose",t)):(s=r.get(n),void 0===s&&(s=new Or,r.set(n,s))),s},dispose:function(){e=new WeakMap}}}function Nr(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new de,color:new At};break;case"SpotLight":i={position:new de,direction:new de,color:new At,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new de,color:new At,distance:0,decay:0};break;case"HemisphereLight":i={direction:new de,skyColor:new At,groundColor:new At};break;case"RectAreaLight":i={color:new At,position:new de,halfWidth:new de,halfHeight:new de}}return e[t.id]=i,i}}}let kr=0;function Br(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Gr(){const e=new Nr,t=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new de);const n=new de,r=new be,s=new be;return{setup:function(o,a,l){let c=0,h=0,u=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let d=0,p=0,m=0,f=0,g=0,v=0,x=0,y=0;const b=l.matrixWorldInverse;o.sort(Br);for(let a=0,l=o.length;a<l;a++){const l=o[a],w=l.color,_=l.intensity,M=l.distance,S=l.shadow&&l.shadow.map?l.shadow.map.texture:null;if(l.isAmbientLight)c+=w.r*_,h+=w.g*_,u+=w.b*_;else if(l.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(l.sh.coefficients[e],_);else if(l.isDirectionalLight){const r=e.get(l);if(r.color.copy(l.color).multiplyScalar(l.intensity),r.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(n),r.direction.transformDirection(b),l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[d]=n,i.directionalShadowMap[d]=S,i.directionalShadowMatrix[d]=l.shadow.matrix,v++}i.directional[d]=r,d++}else if(l.isSpotLight){const r=e.get(l);if(r.position.setFromMatrixPosition(l.matrixWorld),r.position.applyMatrix4(b),r.color.copy(w).multiplyScalar(_),r.distance=M,r.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(n),r.direction.transformDirection(b),r.coneCos=Math.cos(l.angle),r.penumbraCos=Math.cos(l.angle*(1-l.penumbra)),r.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.spotShadow[m]=n,i.spotShadowMap[m]=S,i.spotShadowMatrix[m]=l.shadow.matrix,y++}i.spot[m]=r,m++}else if(l.isRectAreaLight){const t=e.get(l);t.color.copy(w).multiplyScalar(_),t.position.setFromMatrixPosition(l.matrixWorld),t.position.applyMatrix4(b),s.identity(),r.copy(l.matrixWorld),r.premultiply(b),s.extractRotation(r),t.halfWidth.set(.5*l.width,0,0),t.halfHeight.set(0,.5*l.height,0),t.halfWidth.applyMatrix4(s),t.halfHeight.applyMatrix4(s),i.rectArea[f]=t,f++}else if(l.isPointLight){const n=e.get(l);if(n.position.setFromMatrixPosition(l.matrixWorld),n.position.applyMatrix4(b),n.color.copy(l.color).multiplyScalar(l.intensity),n.distance=l.distance,n.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[p]=n,i.pointShadowMap[p]=S,i.pointShadowMatrix[p]=l.shadow.matrix,x++}i.point[p]=n,p++}else if(l.isHemisphereLight){const t=e.get(l);t.direction.setFromMatrixPosition(l.matrixWorld),t.direction.transformDirection(b),t.direction.normalize(),t.skyColor.copy(l.color).multiplyScalar(_),t.groundColor.copy(l.groundColor).multiplyScalar(_),i.hemi[g]=t,g++}}i.ambient[0]=c,i.ambient[1]=h,i.ambient[2]=u;const w=i.hash;w.directionalLength===d&&w.pointLength===p&&w.spotLength===m&&w.rectAreaLength===f&&w.hemiLength===g&&w.numDirectionalShadows===v&&w.numPointShadows===x&&w.numSpotShadows===y||(i.directional.length=d,i.spot.length=m,i.rectArea.length=f,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=x,i.spotShadowMatrix.length=y,w.directionalLength=d,w.pointLength=p,w.spotLength=m,w.rectAreaLength=f,w.hemiLength=g,w.numDirectionalShadows=v,w.numPointShadows=x,w.numSpotShadows=y,i.version=kr++)},state:i}}function Fr(){const e=new Gr,t=[],i=[];return{init:function(){t.length=0,i.length=0},state:{lightsArray:t,shadowsArray:i,lights:e},setupLights:function(n){e.setup(t,i,n)},pushLight:function(e){t.push(e)},pushShadow:function(e){i.push(e)}}}function Hr(){let e=new WeakMap;function t(i){const n=i.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(i,n){let r;return!1===e.has(i)?(r=new Fr,e.set(i,new WeakMap),e.get(i).set(n,r),i.addEventListener("dispose",t)):!1===e.get(i).has(n)?(r=new Fr,e.get(i).set(n,r)):r=e.get(i).get(n),r},dispose:function(){e=new WeakMap}}}function jr(e){Ut.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function zr(e){Ut.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new de,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}jr.prototype=Object.create(Ut.prototype),jr.prototype.constructor=jr,jr.prototype.isMeshDepthMaterial=!0,jr.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},zr.prototype=Object.create(Ut.prototype),zr.prototype.constructor=zr,zr.prototype.isMeshDistanceMaterial=!0,zr.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};function Vr(e,t,i){let n=new Vi;const r=new ee,s=new ee,o=new oe,a=[],l=[],c={},h={0:1,1:0,2:2},u=new Ui({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new ee},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=u.clone();d.defines.HORIZONAL_PASS=1;const p=new ri;p.setAttribute("position",new Gt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Mi(p,u),f=this;function g(i,n){const r=t.update(m);u.uniforms.shadow_pass.value=i.map.texture,u.uniforms.resolution.value=i.mapSize,u.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,r,u,m,null),d.uniforms.shadow_pass.value=i.mapPass.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,r,d,m,null)}function v(e,t,i){const n=e|t<<1|i<<2;let r=a[n];return void 0===r&&(r=new jr({depthPacking:3201,morphTargets:e,skinning:t}),a[n]=r),r}function y(e,t,i){const n=e|t<<1|i<<2;let r=l[n];return void 0===r&&(r=new zr({morphTargets:e,skinning:t}),l[n]=r),r}function b(t,i,n,r,s,o,a){let l=null,u=v,d=t.customDepthMaterial;if(!0===r.isPointLight&&(u=y,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===n.morphTargets&&(e=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0);let r=!1;!0===t.isSkinnedMesh&&(!0===n.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=u(e,r,!0===t.isInstancedMesh)}else l=d;if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const e=l.uuid,t=n.uuid;let i=c[e];void 0===i&&(i={},c[e]=i);let r=i[t];void 0===r&&(r=l.clone(),i[t]=r),l=r}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=3===a?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=s,l.farDistance=o),l}function _(i,r,s,o,a){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===a)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const n=t.update(i),r=i.material;if(Array.isArray(r)){const t=n.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],h=r[c.materialIndex];if(h&&h.visible){const t=b(i,n,h,o,s.near,s.far,a);e.renderBufferDirect(s,null,n,t,i,c)}}}else if(r.visible){const t=b(i,n,r,o,s.near,s.far,a);e.renderBufferDirect(s,null,n,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)_(l[e],r,s,o,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,a,l){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===t.length)return;const c=e.getRenderTarget(),h=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let c=0,h=t.length;c<h;c++){const h=t[c],u=h.shadow;if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),s.copy(u.mapSize),(r.x>i||r.y>i)&&(r.x>i&&(s.x=Math.floor(i/p.x),r.x=s.x*p.x,u.mapSize.x=s.x),r.y>i&&(s.y=Math.floor(i/p.y),r.y=s.y*p.y,u.mapSize.y=s.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const e={minFilter:w,magFilter:w,format:L};u.map=new ae(r.x,r.y,e),u.map.texture.name=h.name+".shadowMap",u.mapPass=new ae(r.x,r.y,e),u.camera.updateProjectionMatrix()}if(null===u.map){const e={minFilter:x,magFilter:x,format:L};u.map=new ae(r.x,r.y,e),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const m=u.getViewportCount();for(let e=0;e<m;e++){const t=u.getViewport(e);o.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),d.viewport(o),u.updateMatrices(h,e),n=u.getFrustum(),_(a,l,u.camera,h,this.type)}u.isPointLightShadow||3!==this.type||g(u,l),u.needsUpdate=!1}f.needsUpdate=!1,e.setRenderTarget(c,h,u)}}function Wr(m,f,g){const v=g.isWebGL2;const x=new function(){let e=!1;const t=new oe;let i=null;const n=new oe(0,0,0,0);return{setMask:function(t){i===t||e||(m.colorMask(t,t,t,t),i=t)},setLocked:function(t){e=t},setClear:function(e,i,r,s,o){!0===o&&(e*=s,i*=s,r*=s),t.set(e,i,r,s),!1===n.equals(t)&&(m.clearColor(e,i,r,s),n.copy(t))},reset:function(){e=!1,i=null,n.set(-1,0,0,0)}}},y=new function(){let e=!1,t=null,i=null,n=null;return{setTest:function(e){e?q(2929):Y(2929)},setMask:function(i){t===i||e||(m.depthMask(i),t=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case 0:m.depthFunc(512);break;case 1:m.depthFunc(519);break;case 2:m.depthFunc(513);break;case 3:default:m.depthFunc(515);break;case 4:m.depthFunc(514);break;case 5:m.depthFunc(518);break;case 6:m.depthFunc(516);break;case 7:m.depthFunc(517)}else m.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){n!==e&&(m.clearDepth(e),n=e)},reset:function(){e=!1,t=null,i=null,n=null}}},b=new function(){let e=!1,t=null,i=null,n=null,r=null,s=null,o=null,a=null,l=null;return{setTest:function(t){e||(t?q(2960):Y(2960))},setMask:function(i){t===i||e||(m.stencilMask(i),t=i)},setFunc:function(e,t,s){i===e&&n===t&&r===s||(m.stencilFunc(e,t,s),i=e,n=t,r=s)},setOp:function(e,t,i){s===e&&o===t&&a===i||(m.stencilOp(e,t,i),s=e,o=t,a=i)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(m.clearStencil(e),l=e)},reset:function(){e=!1,t=null,i=null,n=null,r=null,s=null,o=null,a=null,l=null}}};let w={},_=null,M=null,S=null,C=null,T=null,E=null,P=null,A=null,D=null,L=!1,R=null,I=null,O=null,U=null,N=null;const k=m.getParameter(35661);let B=!1,G=0;const F=m.getParameter(7938);-1!==F.indexOf("WebGL")?(G=parseFloat(/^WebGL\ ([0-9])/.exec(F)[1]),B=G>=1):-1!==F.indexOf("OpenGL ES")&&(G=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(F)[1]),B=G>=2);let H=null,j={};const z=new oe,V=new oe;function W(e,t,i){const n=new Uint8Array(4),r=m.createTexture();m.bindTexture(e,r),m.texParameteri(e,10241,9728),m.texParameteri(e,10240,9728);for(let e=0;e<i;e++)m.texImage2D(t+e,0,6408,1,1,0,6408,5121,n);return r}const X={};function q(e){!0!==w[e]&&(m.enable(e),w[e]=!0)}function Y(e){!1!==w[e]&&(m.disable(e),w[e]=!1)}X[3553]=W(3553,3553,1),X[34067]=W(34067,34069,6),x.setClear(0,0,0,1),y.setClear(1),b.setClear(0),q(2929),y.setFunc(3),J(!1),$(1),q(2884),Q(0);const Z={[e]:32774,[t]:32778,[i]:32779};if(v)Z[103]=32775,Z[104]=32776;else{const e=f.get("EXT_blend_minmax");null!==e&&(Z[103]=e.MIN_EXT,Z[104]=e.MAX_EXT)}const K={[n]:0,[r]:1,[s]:768,[a]:770,[p]:776,[u]:774,[c]:772,[o]:769,[l]:771,[d]:775,[h]:773};function Q(t,i,n,r,s,o,a,l){if(0!==t){if(M||(q(3042),M=!0),5===t)s=s||i,o=o||n,a=a||r,i===C&&s===P||(m.blendEquationSeparate(Z[i],Z[s]),C=i,P=s),n===T&&r===E&&o===A&&a===D||(m.blendFuncSeparate(K[n],K[r],K[o],K[a]),T=n,E=r,A=o,D=a),S=t,L=null;else if(t!==S||l!==L){if(C===e&&P===e||(m.blendEquation(32774),C=e,P=e),l)switch(t){case 1:m.blendFuncSeparate(1,771,1,771);break;case 2:m.blendFunc(1,1);break;case 3:m.blendFuncSeparate(0,0,769,771);break;case 4:m.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:m.blendFuncSeparate(770,771,1,771);break;case 2:m.blendFunc(770,1);break;case 3:m.blendFunc(0,769);break;case 4:m.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}T=null,E=null,A=null,D=null,S=t,L=l}}else M&&(Y(3042),M=!1)}function J(e){R!==e&&(e?m.frontFace(2304):m.frontFace(2305),R=e)}function $(e){0!==e?(q(2884),e!==I&&(1===e?m.cullFace(1029):2===e?m.cullFace(1028):m.cullFace(1032))):Y(2884),I=e}function ee(e,t,i){e?(q(32823),U===t&&N===i||(m.polygonOffset(t,i),U=t,N=i)):Y(32823)}function te(e){void 0===e&&(e=33984+k-1),H!==e&&(m.activeTexture(e),H=e)}return{buffers:{color:x,depth:y,stencil:b},enable:q,disable:Y,useProgram:function(e){return _!==e&&(m.useProgram(e),_=e,!0)},setBlending:Q,setMaterial:function(e,t){2===e.side?Y(2884):q(2884);let i=1===e.side;t&&(i=!i),J(i),1===e.blending&&!1===e.transparent?Q(0):Q(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),y.setFunc(e.depthFunc),y.setTest(e.depthTest),y.setMask(e.depthWrite),x.setMask(e.colorWrite);const n=e.stencilWrite;b.setTest(n),n&&(b.setMask(e.stencilWriteMask),b.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),b.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),ee(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:J,setCullFace:$,setLineWidth:function(e){e!==O&&(B&&m.lineWidth(e),O=e)},setPolygonOffset:ee,setScissorTest:function(e){e?q(3089):Y(3089)},activeTexture:te,bindTexture:function(e,t){null===H&&te();let i=j[H];void 0===i&&(i={type:void 0,texture:void 0},j[H]=i),i.type===e&&i.texture===t||(m.bindTexture(e,t||X[e]),i.type=e,i.texture=t)},unbindTexture:function(){const e=j[H];void 0!==e&&void 0!==e.type&&(m.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{m.compressedTexImage2D.apply(m,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{m.texImage2D.apply(m,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{m.texImage3D.apply(m,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===z.equals(e)&&(m.scissor(e.x,e.y,e.z,e.w),z.copy(e))},viewport:function(e){!1===V.equals(e)&&(m.viewport(e.x,e.y,e.z,e.w),V.copy(e))},reset:function(){w={},H=null,j={},_=null,S=null,R=null,I=null,x.reset(),y.reset(),b.reset()}}}function Xr(e,t,i,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function S(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function O(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=t?$.floorPowerOfTwo:Math.floor,s=n(r*e.width),o=n(r*e.height);void 0===p&&(p=S(s,o));const a=i?S(s,o):p;a.width=s,a.height=o;return a.getContext("2d").drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),a}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function U(e){return $.isPowerOfTwo(e.width)&&$.isPowerOfTwo(e.height)}function N(e,t){return e.generateMipmaps&&t&&e.minFilter!==x&&e.minFilter!==w}function k(t,i,r,s){e.generateMipmap(t);n.get(i).__maxMipLevel=Math.log(Math.max(r,s))*Math.LOG2E}function B(i,n,r){if(!1===a)return n;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let s=n;return 6403===n&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),6407===n&&(5126===r&&(s=34837),5131===r&&(s=34843),5121===r&&(s=32849)),6408===n&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||t.get("EXT_color_buffer_float"),s}function G(e){return e===x||e===y||e===b?9728:9729}function F(t){const i=t.target;i.removeEventListener("dispose",F),function(t){const i=n.get(t);if(void 0===i.__webglInit)return;e.deleteTexture(i.__webglTexture),n.remove(t)}(i),i.isVideoTexture&&d.delete(i),o.memory.textures--}function H(t){const i=t.target;i.removeEventListener("dispose",H),function(t){const i=n.get(t),r=n.get(t.texture);if(!t)return;void 0!==r.__webglTexture&&e.deleteTexture(r.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&e.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer);n.remove(t.texture),n.remove(t)}(i),o.memory.textures--}let j=0;function z(e,t){const r=n.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){const i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void K(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+t),i.bindTexture(3553,r.__webglTexture)}function V(t,r){if(6!==t.image.length)return;const o=n.get(t);if(t.version>0&&o.__version!==t.version){Z(o,t),i.activeTexture(33984+r),i.bindTexture(34067,o.__webglTexture),e.pixelStorei(37440,t.flipY);const n=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),l=t.image[0]&&t.image[0].isDataTexture,h=[];for(let e=0;e<6;e++)h[e]=n||l?l?t.image[e].image:t.image[e]:O(t.image[e],!1,!0,c);const u=h[0],d=U(u)||a,p=s.convert(t.format),m=s.convert(t.type),f=B(t.internalFormat,p,m);let g;if(Y(34067,t,d),n){for(let e=0;e<6;e++){g=h[e].mipmaps;for(let n=0;n<g.length;n++){const r=g[n];t.format!==L&&t.format!==D?null!==p?i.compressedTexImage2D(34069+e,n,f,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+e,n,f,r.width,r.height,0,p,m,r.data)}}o.__maxMipLevel=g.length-1}else{g=t.mipmaps;for(let e=0;e<6;e++)if(l){i.texImage2D(34069+e,0,f,h[e].width,h[e].height,0,p,m,h[e].data);for(let t=0;t<g.length;t++){const n=g[t].image[e].image;i.texImage2D(34069+e,t+1,f,n.width,n.height,0,p,m,n.data)}}else{i.texImage2D(34069+e,0,f,p,m,h[e]);for(let t=0;t<g.length;t++){const n=g[t];i.texImage2D(34069+e,t+1,f,p,m,n.image[e])}}o.__maxMipLevel=g.length}N(t,d)&&k(34067,t,u.width,u.height),o.__version=t.version,t.onUpdate&&t.onUpdate(t)}else i.activeTexture(33984+r),i.bindTexture(34067,o.__webglTexture)}function W(e,t){i.activeTexture(33984+t),i.bindTexture(34067,n.get(e).__webglTexture)}const X={[f]:10497,[g]:33071,[v]:33648},q={[x]:9728,[y]:9984,[b]:9986,[w]:9729,[_]:9985,[M]:9987};function Y(i,s,o){o?(e.texParameteri(i,10242,X[s.wrapS]),e.texParameteri(i,10243,X[s.wrapT]),32879!==i&&35866!==i||e.texParameteri(i,32882,X[s.wrapR]),e.texParameteri(i,10240,q[s.magFilter]),e.texParameteri(i,10241,q[s.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),32879!==i&&35866!==i||e.texParameteri(i,32882,33071),s.wrapS===g&&s.wrapT===g||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,G(s.magFilter)),e.texParameteri(i,10241,G(s.minFilter)),s.minFilter!==x&&s.minFilter!==w&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=t.get("EXT_texture_filter_anisotropic");if(l){if(s.type===E&&null===t.get("OES_texture_float_linear"))return;if(s.type===P&&null===(a||t.get("OES_texture_half_float_linear")))return;(s.anisotropy>1||n.get(s).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy)}}function Z(t,i){void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",F),t.__webglTexture=e.createTexture(),o.memory.textures++)}function K(t,n,r){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),Z(t,n),i.activeTexture(33984+r),i.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment);const l=function(e){return!a&&(e.wrapS!==g||e.wrapT!==g||e.minFilter!==x&&e.minFilter!==w)}(n)&&!1===U(n.image),c=O(n.image,l,!1,h),u=U(c)||a,d=s.convert(n.format);let p,m=s.convert(n.type),f=B(n.internalFormat,d,m);Y(o,n,u);const v=n.mipmaps;if(n.isDepthTexture)f=6402,a?f=n.type===E?36012:n.type===T?33190:n.type===A?35056:33189:n.type===E&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===R&&6402===f&&n.type!==C&&n.type!==T&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=C,m=s.convert(n.type)),n.format===I&&6402===f&&(f=34041,n.type!==A&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=A,m=s.convert(n.type))),i.texImage2D(3553,0,f,c.width,c.height,0,d,m,null);else if(n.isDataTexture)if(v.length>0&&u){for(let e=0,t=v.length;e<t;e++)p=v[e],i.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);n.generateMipmaps=!1,t.__maxMipLevel=v.length-1}else i.texImage2D(3553,0,f,c.width,c.height,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=v.length;e<t;e++)p=v[e],n.format!==L&&n.format!==D?null!==d?i.compressedTexImage2D(3553,e,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);t.__maxMipLevel=v.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(v.length>0&&u){for(let e=0,t=v.length;e<t;e++)p=v[e],i.texImage2D(3553,e,f,d,m,p);n.generateMipmaps=!1,t.__maxMipLevel=v.length-1}else i.texImage2D(3553,0,f,d,m,c),t.__maxMipLevel=0;N(n,u)&&k(o,n,c.width,c.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function Q(t,r,o,a){const l=s.convert(r.texture.format),c=s.convert(r.texture.type),h=B(r.texture.internalFormat,l,c);i.texImage2D(a,0,h,r.width,r.height,0,l,c,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,a,n.get(r.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function J(t,i,n){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n){const t=i.depthTexture;t&&t.isDepthTexture&&(t.type===E?r=36012:t.type===T&&(r=33190));const n=te(i);e.renderbufferStorageMultisample(36161,n,r,i.width,i.height)}else e.renderbufferStorage(36161,r,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){if(n){const t=te(i);e.renderbufferStorageMultisample(36161,t,35056,i.width,i.height)}else e.renderbufferStorage(36161,34041,i.width,i.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=s.convert(i.texture.format),r=s.convert(i.texture.type),o=B(i.texture.internalFormat,t,r);if(n){const t=te(i);e.renderbufferStorageMultisample(36161,t,o,i.width,i.height)}else e.renderbufferStorage(36161,o,i.width,i.height)}e.bindRenderbuffer(36161,null)}function ee(t){const i=n.get(t),r=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),z(i.depthTexture,0);const r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===R)e.framebufferTexture2D(36160,36096,3553,r,0);else{if(i.depthTexture.format!==I)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,r,0)}}(i.__webglFramebuffer,t)}else if(r){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)e.bindFramebuffer(36160,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=e.createRenderbuffer(),J(i.__webglDepthbuffer[n],t,!1)}else e.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),J(i.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function te(e){return a&&e.isWebGLMultisampleRenderTarget?Math.min(u,e.samples):0}let ie=!1,ne=!1;this.allocateTextureUnit=function(){const e=j;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),j+=1,e},this.resetTextureUnits=function(){j=0},this.setTexture2D=z,this.setTexture2DArray=function(e,t){const r=n.get(e);e.version>0&&r.__version!==e.version?K(r,e,t):(i.activeTexture(33984+t),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){const r=n.get(e);e.version>0&&r.__version!==e.version?K(r,e,t):(i.activeTexture(33984+t),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=V,this.setTextureCubeDynamic=W,this.setupRenderTarget=function(t){const r=n.get(t),l=n.get(t.texture);t.addEventListener("dispose",H),l.__webglTexture=e.createTexture(),o.memory.textures++;const c=!0===t.isWebGLCubeRenderTarget,h=!0===t.isWebGLMultisampleRenderTarget,u=U(t)||a;if(!a||t.texture.format!==D||t.texture.type!==E&&t.texture.type!==P||(t.texture.format=L,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){r.__webglFramebuffer=[];for(let t=0;t<6;t++)r.__webglFramebuffer[t]=e.createFramebuffer()}else if(r.__webglFramebuffer=e.createFramebuffer(),h)if(a){r.__webglMultisampledFramebuffer=e.createFramebuffer(),r.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const i=s.convert(t.texture.format),n=s.convert(t.texture.type),o=B(t.texture.internalFormat,i,n),a=te(t);e.renderbufferStorageMultisample(36161,a,o,t.width,t.height),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(r.__webglDepthRenderbuffer=e.createRenderbuffer(),J(r.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){i.bindTexture(34067,l.__webglTexture),Y(34067,t.texture,u);for(let e=0;e<6;e++)Q(r.__webglFramebuffer[e],t,36064,34069+e);N(t.texture,u)&&k(34067,t.texture,t.width,t.height),i.bindTexture(34067,null)}else i.bindTexture(3553,l.__webglTexture),Y(3553,t.texture,u),Q(r.__webglFramebuffer,t,36064,3553),N(t.texture,u)&&k(3553,t.texture,t.width,t.height),i.bindTexture(3553,null);t.depthBuffer&&ee(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(N(t,U(e)||a)){const r=e.isWebGLCubeRenderTarget?34067:3553,s=n.get(t).__webglTexture;i.bindTexture(r,s),k(r,t,e.width,e.height),i.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(a){const i=n.get(t);e.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,i.__webglFramebuffer);const r=t.width,s=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,r,s,0,0,r,s,o,9728),e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===ie&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),ie=!0),e=e.texture),z(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===ne&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ne=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?V(e,t):W(e,t)}}function qr(e,t,i){const n=i.isWebGL2;return{convert:function(e){let i;if(e===S)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(e===C)return 5123;if(1013===e)return 5124;if(e===T)return 5125;if(e===E)return 5126;if(e===P)return n?5131:(i=t.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(e===D)return 6407;if(e===L)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(e===R)return 6402;if(e===I)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(i=t.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(33776===e)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(i=t.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(35840===e)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return i=t.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(i=t.get("WEBGL_compressed_texture_etc"),null!==i)){if(37492===e)return i.COMPRESSED_RGB8_ETC2;if(37496===e)return i.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(i=t.get("WEBGL_compressed_texture_astc"),null!==i?e:null):36492===e?(i=t.get("EXT_texture_compression_bptc"),null!==i?e:null):e===A?n?34042:(i=t.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function Yr(e){ki.call(this),this.cameras=e||[]}function Zr(){Be.call(this),this.type="Group"}function Kr(){this._targetRay=null,this._grip=null}function Qr(e,t){const i=this;let n=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,h=new ki;h.layers.enable(1),h.viewport=new oe;const u=new ki;u.layers.enable(2),u.viewport=new oe;const d=[h,u],p=new Yr;p.layers.enable(1),p.layers.enable(2);let m=null,f=null;function g(e){const t=c.get(e.inputSource);t&&t.dispatchEvent({type:e.type})}function v(){c.forEach((function(e,t){e.disconnect(t)})),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),S.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function x(e){s=e,S.setContext(n),S.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}function y(e){const t=n.inputSources;for(let e=0;e<l.length;e++)c.set(t[e],l[e]);for(let t=0;t<e.removed.length;t++){const i=e.removed[t],n=c.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),c.delete(i))}for(let t=0;t<e.added.length;t++){const i=e.added[t],n=c.get(i);n&&n.dispatchEvent({type:"connected",data:i})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=l[e];return void 0===t&&(t=new Kr,l[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=l[e];return void 0===t&&(t=new Kr,l[e]=t),t.getGripSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return n},this.setSession=function(e){if(n=e,null!==n){n.addEventListener("select",g),n.addEventListener("selectstart",g),n.addEventListener("selectend",g),n.addEventListener("squeeze",g),n.addEventListener("squeezestart",g),n.addEventListener("squeezeend",g),n.addEventListener("end",v);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const i={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:r},s=new XRWebGLLayer(n,t,i);n.updateRenderState({baseLayer:s}),n.requestReferenceSpace(o).then(x),n.addEventListener("inputsourceschange",y)}};const b=new de,w=new de;function _(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}this.getCamera=function(e){p.near=u.near=h.near=e.near,p.far=u.far=h.far=e.far,m===p.near&&f===p.far||(n.updateRenderState({depthNear:p.near,depthFar:p.far}),m=p.near,f=p.far);const t=e.parent,i=p.cameras;_(p,t);for(let e=0;e<i.length;e++)_(i[e],t);e.matrixWorld.copy(p.matrixWorld);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);return 2===i.length?function(e,t,i){b.setFromMatrixPosition(t.matrixWorld),w.setFromMatrixPosition(i.matrixWorld);const n=b.distanceTo(w),r=t.projectionMatrix.elements,s=i.projectionMatrix.elements,o=r[14]/(r[10]-1),a=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=o*h,p=o*u,m=n/(-h+u),f=m*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);const g=o+m,v=a+m,x=d-f,y=p+(n-f),_=l*a/v*g,M=c*a/v*g;e.projectionMatrix.makePerspective(x,y,_,M,g,v)}(p,h,u):p.projectionMatrix.copy(h.projectionMatrix),p};let M=null;const S=new Xi;S.setAnimationLoop((function(t,i){if(a=i.getViewerPose(s),null!==a){const t=a.views,i=n.renderState.baseLayer;e.setFramebuffer(i.framebuffer);let r=!1;t.length!==p.cameras.length&&(p.cameras.length=0,r=!0);for(let e=0;e<t.length;e++){const n=t[e],s=i.getViewport(n),o=d[e];o.matrix.fromArray(n.transform.matrix),o.projectionMatrix.fromArray(n.projectionMatrix),o.viewport.set(s.x,s.y,s.width,s.height),0===e&&p.matrix.copy(o.matrix),!0===r&&p.cameras.push(o)}}const r=n.inputSources;for(let e=0;e<l.length;e++){const t=l[e],n=r[e];t.update(n,i,s)}M&&M(t,i)})),this.setAnimationLoop=function(e){M=e},this.dispose=function(){}}function Jr(e){function t(t,i,n){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map),i.alphaMap&&(t.alphaMap.value=i.alphaMap),i.specularMap&&(t.specularMap.value=i.specularMap);const r=i.envMap||n;let s,o;r&&(t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture?-1:1,t.reflectivity.value=i.reflectivity,t.refractionRatio.value=i.refractionRatio,t.maxMipLevel.value=e.get(r).__maxMipLevel),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity),i.map?s=i.map:i.specularMap?s=i.specularMap:i.displacementMap?s=i.displacementMap:i.normalMap?s=i.normalMap:i.bumpMap?s=i.bumpMap:i.roughnessMap?s=i.roughnessMap:i.metalnessMap?s=i.metalnessMap:i.alphaMap?s=i.alphaMap:i.emissiveMap&&(s=i.emissiveMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uvTransform.value.copy(s.matrix)),i.aoMap?o=i.aoMap:i.lightMap&&(o=i.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uv2Transform.value.copy(o.matrix))}function i(e,t,i){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||i)&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,r,s,o){n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,n)):n.isMeshToonMaterial?(t(e,n),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshPhongMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshStandardMaterial?(t(e,n,r),n.isMeshPhysicalMaterial?function(e,t,n){i(e,t,n),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transparency.value=t.transparency}(e,n,r):i(e,n,r)):n.isMeshMatcapMaterial?(t(e,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDepthMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDistanceMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,n)):n.isMeshNormalMaterial?(t(e,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,n)):n.isPointsMaterial?function(e,t,i,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,n,s,o):n.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,n):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function $r(e){const t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),i=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,s=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let u=null,d=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=H,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let m=!1,f=null,g=0,v=0,x=null,y=null,b=-1,w=null,_=null;const M=new oe,C=new oe;let T=null,A=t.width,D=t.height,R=1,I=null,O=null;const U=new oe(0,0,A,D),N=new oe(0,0,A,D);let k=!1;const B=new Vi,G=new nn;let F=!1,j=!1;const z=new be,V=new de,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===x?R:1}let q,Y,Z,K,Q,J,te,ie,ne,re,se,ae,le,ce,he,ue,pe,me,fe,ge=i;function ve(e,i){for(let n=0;n<e.length;n++){const r=e[n],s=t.getContext(r,i);if(null!==s)return s}return null}try{const e={alpha:n,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",_e,!1),t.addEventListener("webglcontextrestored",Me,!1),null===ge){const t=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&t.shift(),ge=ve(t,e),null===ge)throw ve(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ge.getShaderPrecisionFormat&&(ge.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function xe(){q=new rn(ge),Y=new tn(ge,q,e),!1===Y.isWebGL2&&(q.get("WEBGL_depth_texture"),q.get("OES_texture_float"),q.get("OES_texture_half_float"),q.get("OES_texture_half_float_linear"),q.get("OES_standard_derivatives"),q.get("OES_element_index_uint"),q.get("OES_vertex_array_object"),q.get("ANGLE_instanced_arrays")),q.get("OES_texture_float_linear"),me=new qr(ge,q,Y),Z=new Wr(ge,q,Y),Z.scissor(C.copy(N).multiplyScalar(R).floor()),Z.viewport(M.copy(U).multiplyScalar(R).floor()),K=new an,Q=new Lr,J=new Xr(ge,q,Z,Q,Y,me,K),te=new qi(ge,Y),fe=new $i(ge,q,te,Y),ie=new sn(ge,te,K,fe),ne=new un(ge,ie,te,K),he=new hn(ge),re=new Dr(p,q,Y,fe),se=new Jr(Q),ae=new Ur,le=new Hr,ce=new Ji(p,Z,ne,a),ue=new en(ge,q,K,Y),pe=new on(ge,q,K,Y),K.programs=re.programs,p.capabilities=Y,p.extensions=q,p.properties=Q,p.renderLists=ae,p.state=Z,p.info=K}xe();const ye=new Qr(p,ge);this.xr=ye;const we=new Vr(p,ne,Y.maxTextureSize);function _e(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Me(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,xe()}function Se(e){const t=e.target;t.removeEventListener("dispose",Se),function(e){Ce(e),Q.remove(e)}(t)}function Ce(e){const t=Q.get(e).program;e.program=void 0,void 0!==t&&re.releaseProgram(t)}this.shadowMap=we,this.getContext=function(){return ge},this.getContextAttributes=function(){return ge.getContextAttributes()},this.forceContextLoss=function(){const e=q.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=q.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(e){void 0!==e&&(R=e,this.setSize(A,D,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new ee),e.set(A,D)},this.setSize=function(e,i,n){ye.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(A=e,D=i,t.width=Math.floor(e*R),t.height=Math.floor(i*R),!1!==n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new ee),e.set(A*R,D*R).floor()},this.setDrawingBufferSize=function(e,i,n){A=e,D=i,R=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new oe),e.copy(M)},this.getViewport=function(e){return e.copy(U)},this.setViewport=function(e,t,i,n){e.isVector4?U.set(e.x,e.y,e.z,e.w):U.set(e,t,i,n),Z.viewport(M.copy(U).multiplyScalar(R).floor())},this.getScissor=function(e){return e.copy(N)},this.setScissor=function(e,t,i,n){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,i,n),Z.scissor(C.copy(N).multiplyScalar(R).floor())},this.getScissorTest=function(){return k},this.setScissorTest=function(e){Z.setScissorTest(k=e)},this.setOpaqueSort=function(e){I=e},this.setTransparentSort=function(e){O=e},this.getClearColor=function(){return ce.getClearColor()},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(e,t,i){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===i||i)&&(n|=1024),ge.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",_e,!1),t.removeEventListener("webglcontextrestored",Me,!1),ae.dispose(),le.dispose(),Q.dispose(),ne.dispose(),fe.dispose(),ye.dispose(),Ee.stop()},this.renderBufferImmediate=function(e,t){fe.initAttributes();const i=Q.get(e);e.hasPositions&&!i.position&&(i.position=ge.createBuffer()),e.hasNormals&&!i.normal&&(i.normal=ge.createBuffer()),e.hasUvs&&!i.uv&&(i.uv=ge.createBuffer()),e.hasColors&&!i.color&&(i.color=ge.createBuffer());const n=t.getAttributes();e.hasPositions&&(ge.bindBuffer(34962,i.position),ge.bufferData(34962,e.positionArray,35048),fe.enableAttribute(n.position),ge.vertexAttribPointer(n.position,3,5126,!1,0,0)),e.hasNormals&&(ge.bindBuffer(34962,i.normal),ge.bufferData(34962,e.normalArray,35048),fe.enableAttribute(n.normal),ge.vertexAttribPointer(n.normal,3,5126,!1,0,0)),e.hasUvs&&(ge.bindBuffer(34962,i.uv),ge.bufferData(34962,e.uvArray,35048),fe.enableAttribute(n.uv),ge.vertexAttribPointer(n.uv,2,5126,!1,0,0)),e.hasColors&&(ge.bindBuffer(34962,i.color),ge.bufferData(34962,e.colorArray,35048),fe.enableAttribute(n.color),ge.vertexAttribPointer(n.color,3,5126,!1,0,0)),fe.disableUnusedAttributes(),ge.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,n,r,s){null===t&&(t=W);const o=r.isMesh&&r.matrixWorld.determinant()<0,a=Re(e,t,n,r);Z.setMaterial(n,o);let l=i.index;const c=i.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===n.wireframe&&(l=ie.getWireframeAttribute(i),u=2),(n.morphTargets||n.morphNormals)&&he.update(r,i,n,a),fe.setup(r,n,a,i,l);let d=ue;null!==l&&(h=te.get(l),d=pe,d.setIndex(h));const p=null!==l?l.count:c.count,m=i.drawRange.start*u,f=i.drawRange.count*u,g=null!==s?s.start*u:0,v=null!==s?s.count*u:1/0,x=Math.max(m,g),y=Math.min(p,m+f,g+v)-1,b=Math.max(0,y-x+1);if(0!==b){if(r.isMesh)!0===n.wireframe?(Z.setLineWidth(n.wireframeLinewidth*X()),d.setMode(1)):d.setMode(4);else if(r.isLine){let e=n.linewidth;void 0===e&&(e=1),Z.setLineWidth(e*X()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(i,x,b,r.count);else if(i.isInstancedBufferGeometry){const e=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(i,x,b,e)}else d.render(x,b)}},this.compile=function(e,t){d=le.get(e,t),d.init(),e.traverse((function(e){e.isLight&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(t);const i=new WeakMap;e.traverse((function(t){let n=t.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){let s=n[r];!1===i.has(s)&&(Le(s,e,t),i.set(s))}else!1===i.has(n)&&(Le(n,e,t),i.set(n))}))};let Te=null;const Ee=new Xi;function Pe(e,t,i,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)i=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||B.intersectsSprite(e)){n&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z);const t=ne.update(e),r=e.material;r.visible&&u.push(e,t,r,i,V.z,null)}}else if(e.isImmediateRenderObject)n&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z),u.push(e,null,e.material,i,V.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==K.render.frame&&(e.skeleton.update(),e.skeleton.frame=K.render.frame),!e.frustumCulled||B.intersectsObject(e))){n&&V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(z);const t=ne.update(e),r=e.material;if(Array.isArray(r)){const n=t.groups;for(let s=0,o=n.length;s<o;s++){const o=n[s],a=r[o.materialIndex];a&&a.visible&&u.push(e,t,a,i,V.z,o)}}else r.visible&&u.push(e,t,r,i,V.z,null)}const r=e.children;for(let e=0,s=r.length;e<s;e++)Pe(r[e],t,i,n)}function Ae(e,t,i){const n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){const s=e[r],o=s.object,a=s.geometry,l=null===n?s.material:n,c=s.group;if(i.isArrayCamera){_=i;const e=i.cameras;for(let i=0,n=e.length;i<n;i++){const n=e[i];o.layers.test(n.layers)&&(Z.viewport(M.copy(n.viewport)),d.setupLights(n),De(o,t,n,a,l,c))}}else _=null,De(o,t,i,a,l,c)}}function De(e,t,i,n,r,s){if(e.onBeforeRender(p,t,i,n,r,s),d=le.get(t,_||i),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const n=Re(i,t,r,e);Z.setMaterial(r),fe.reset(),function(e,t){e.render((function(e){p.renderBufferImmediate(e,t)}))}(e,n)}else p.renderBufferDirect(i,t,n,r,e,s);e.onAfterRender(p,t,i,n,r,s),d=le.get(t,_||i)}function Le(e,t,i){!0!==t.isScene&&(t=W);const n=Q.get(e),r=d.state.lights,s=d.state.shadowsArray,o=r.state.version,a=re.getParameters(e,r.state,s,t,G.numPlanes,G.numIntersection,i),l=re.getProgramCacheKey(a);let c=n.program,h=!0;if(void 0===c)e.addEventListener("dispose",Se);else if(c.cacheKey!==l)Ce(e);else if(n.lightsStateVersion!==o)n.lightsStateVersion=o,h=!1;else{if(void 0!==a.shaderID)return;h=!1}h&&(c=re.acquireProgram(a,l),n.program=c,n.uniforms=a.uniforms,n.outputEncoding=a.outputEncoding,e.program=c);const u=c.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(let t=0;t<p.maxMorphTargets;t++)u["morphTarget"+t]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(let t=0;t<p.maxMorphNormals;t++)u["morphNormal"+t]>=0&&e.numSupportedMorphNormals++}const m=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=G.numPlanes,n.numIntersection=G.numIntersection,m.clippingPlanes=G.uniform),n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=o,n.needsLights&&(m.ambientLightColor.value=r.state.ambient,m.lightProbe.value=r.state.probe,m.directionalLights.value=r.state.directional,m.directionalLightShadows.value=r.state.directionalShadow,m.spotLights.value=r.state.spot,m.spotLightShadows.value=r.state.spotShadow,m.rectAreaLights.value=r.state.rectArea,m.pointLights.value=r.state.point,m.pointLightShadows.value=r.state.pointShadow,m.hemisphereLights.value=r.state.hemi,m.directionalShadowMap.value=r.state.directionalShadowMap,m.directionalShadowMatrix.value=r.state.directionalShadowMatrix,m.spotShadowMap.value=r.state.spotShadowMap,m.spotShadowMatrix.value=r.state.spotShadowMatrix,m.pointShadowMap.value=r.state.pointShadowMap,m.pointShadowMatrix.value=r.state.pointShadowMatrix);const f=n.program.getUniforms(),g=cr.seqWithValue(f.seq,m);n.uniformsList=g}function Re(e,t,i,n){!0!==t.isScene&&(t=W),J.resetTextureUnits();const r=t.fog,s=i.isMeshStandardMaterial?t.environment:null,o=null===x?p.outputEncoding:x.texture.encoding,a=Q.get(i),l=d.state.lights;if(!0===F&&(!0===j||e!==w)){const t=e===w&&i.id===b;G.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,e,a,t)}i.version===a.__version?void 0===a.program||i.fog&&a.fog!==r||a.environment!==s||a.needsLights&&a.lightsStateVersion!==l.state.version?Le(i,t,n):void 0===a.numClippingPlanes||a.numClippingPlanes===G.numPlanes&&a.numIntersection===G.numIntersection?a.outputEncoding!==o&&Le(i,t,n):Le(i,t,n):(Le(i,t,n),a.__version=i.version);let c=!1,h=!1,u=!1;const m=a.program,f=m.getUniforms(),g=a.uniforms;if(Z.useProgram(m.program)&&(c=!0,h=!0,u=!0),i.id!==b&&(b=i.id,h=!0),c||w!==e){if(f.setValue(ge,"projectionMatrix",e.projectionMatrix),Y.logarithmicDepthBuffer&&f.setValue(ge,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),w!==e&&(w=e,h=!0,u=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=f.map.cameraPosition;void 0!==t&&t.setValue(ge,V.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&f.setValue(ge,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||i.skinning)&&f.setValue(ge,"viewMatrix",e.matrixWorldInverse)}if(i.skinning){f.setOptional(ge,n,"bindMatrix"),f.setOptional(ge,n,"bindMatrixInverse");const e=n.skeleton;if(e){const t=e.bones;if(Y.floatVertexTextures){if(void 0===e.boneTexture){let i=Math.sqrt(4*t.length);i=$.ceilPowerOfTwo(i),i=Math.max(i,4);const n=new Float32Array(i*i*4);n.set(e.boneMatrices);const r=new Hi(n,i,i,L,E);e.boneMatrices=n,e.boneTexture=r,e.boneTextureSize=i}f.setValue(ge,"boneTexture",e.boneTexture,J),f.setValue(ge,"boneTextureSize",e.boneTextureSize)}else f.setOptional(ge,e,"boneMatrices")}}var v,y;return(h||a.receiveShadow!==n.receiveShadow)&&(a.receiveShadow=n.receiveShadow,f.setValue(ge,"receiveShadow",n.receiveShadow)),h&&(f.setValue(ge,"toneMappingExposure",p.toneMappingExposure),a.needsLights&&(y=u,(v=g).ambientLightColor.needsUpdate=y,v.lightProbe.needsUpdate=y,v.directionalLights.needsUpdate=y,v.directionalLightShadows.needsUpdate=y,v.pointLights.needsUpdate=y,v.pointLightShadows.needsUpdate=y,v.spotLights.needsUpdate=y,v.spotLightShadows.needsUpdate=y,v.rectAreaLights.needsUpdate=y,v.hemisphereLights.needsUpdate=y),r&&i.fog&&se.refreshFogUniforms(g,r),se.refreshMaterialUniforms(g,i,s,R,D),void 0!==g.ltc_1&&(g.ltc_1.value=Wi.LTC_1),void 0!==g.ltc_2&&(g.ltc_2.value=Wi.LTC_2),cr.upload(ge,a.uniformsList,g,J)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(cr.upload(ge,a.uniformsList,g,J),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&f.setValue(ge,"center",n.center),f.setValue(ge,"modelViewMatrix",n.modelViewMatrix),f.setValue(ge,"normalMatrix",n.normalMatrix),f.setValue(ge,"modelMatrix",n.matrixWorld),m}Ee.setAnimationLoop((function(e){ye.isPresenting||Te&&Te(e)})),"undefined"!=typeof window&&Ee.setContext(window),this.setAnimationLoop=function(e){Te=e,ye.setAnimationLoop(e),null===e?Ee.stop():Ee.start()},this.render=function(e,t){let i,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;fe.resetDefaultState(),b=-1,w=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ye.enabled&&!0===ye.isPresenting&&(t=ye.getCamera(t)),!0===e.isScene&&e.onBeforeRender(p,e,t,i||x),d=le.get(e,t),d.init(),z.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),B.setFromProjectionMatrix(z),j=this.localClippingEnabled,F=G.init(this.clippingPlanes,j,t),u=ae.get(e,t),u.init(),Pe(e,t,0,p.sortObjects),u.finish(),!0===p.sortObjects&&u.sort(I,O),!0===F&&G.beginShadows();const r=d.state.shadowsArray;we.render(r,e,t),d.setupLights(t),!0===F&&G.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),ce.render(u,e,t,n);const s=u.opaque,o=u.transparent;s.length>0&&Ae(s,e,t),o.length>0&&Ae(o,e,t),!0===e.isScene&&e.onAfterRender(p,e,t),null!==x&&(J.updateRenderTargetMipmap(x),J.updateMultisampleRenderTarget(x)),Z.buffers.depth.setTest(!0),Z.buffers.depth.setMask(!0),Z.buffers.color.setMask(!0),Z.setPolygonOffset(!1),u=null,d=null},this.setFramebuffer=function(e){f!==e&&null===x&&ge.bindFramebuffer(36160,e),f=e},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return x},this.setRenderTarget=function(e,t,i){x=e,g=t,v=i,e&&void 0===Q.get(e).__webglFramebuffer&&J.setupRenderTarget(e);let n=f,r=!1;if(e){const i=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=i[t||0],r=!0):n=e.isWebGLMultisampleRenderTarget?Q.get(e).__webglMultisampledFramebuffer:i,M.copy(e.viewport),C.copy(e.scissor),T=e.scissorTest}else M.copy(U).multiplyScalar(R).floor(),C.copy(N).multiplyScalar(R).floor(),T=k;if(y!==n&&(ge.bindFramebuffer(36160,n),y=n),Z.viewport(M),Z.scissor(C),Z.setScissorTest(T),r){const n=Q.get(e.texture);ge.framebufferTexture2D(36160,36064,34069+(t||0),n.__webglTexture,i||0)}},this.readRenderTargetPixels=function(e,t,i,n,r,s,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){let o=!1;a!==y&&(ge.bindFramebuffer(36160,a),o=!0);try{const o=e.texture,a=o.format,l=o.type;if(a!==L&&me.convert(a)!==ge.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===S||me.convert(l)===ge.getParameter(35738)||l===E&&(Y.isWebGL2||q.get("OES_texture_float")||q.get("WEBGL_color_buffer_float"))||l===P&&(Y.isWebGL2?q.get("EXT_color_buffer_float"):q.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ge.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&ge.readPixels(t,i,n,r,me.convert(a),me.convert(l),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&ge.bindFramebuffer(36160,y)}}},this.copyFramebufferToTexture=function(e,t,i){void 0===i&&(i=0);const n=Math.pow(2,-i),r=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n),o=me.convert(t.format);J.setTexture2D(t,0),ge.copyTexImage2D(3553,i,o,e.x,e.y,r,s,0),Z.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n){void 0===n&&(n=0);const r=t.image.width,s=t.image.height,o=me.convert(i.format),a=me.convert(i.type);J.setTexture2D(i,0),ge.pixelStorei(37440,i.flipY),ge.pixelStorei(37441,i.premultiplyAlpha),ge.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?ge.texSubImage2D(3553,n,e.x,e.y,r,s,o,a,t.image.data):t.isCompressedTexture?ge.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ge.texSubImage2D(3553,n,e.x,e.y,o,a,t.image),0===n&&i.generateMipmaps&&ge.generateMipmap(3553),Z.unbindTexture()},this.initTexture=function(e){J.setTexture2D(e,0),Z.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function es(e){$r.call(this,e)}function ts(e,t){this.name="",this.color=new At(e),this.density=void 0!==t?t:25e-5}function is(e,t,i){this.name="",this.color=new At(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3}function ns(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Z,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=$.generateUUID()}Yr.prototype=Object.assign(Object.create(ki.prototype),{constructor:Yr,isArrayCamera:!0}),Zr.prototype=Object.assign(Object.create(Be.prototype),{constructor:Zr,isGroup:!0}),Object.assign(Kr.prototype,{constructor:Kr,getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Zr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Zr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),this},update:function(e,t,i){let n=null,r=null;const s=this._targetRay,o=this._grip;return e&&(null!==s&&(n=t.getPose(e.targetRaySpace,i),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)))),null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==r),this}}),Object.assign(Qr.prototype,Q.prototype),es.prototype=Object.assign(Object.create($r.prototype),{constructor:es,isWebGL1Renderer:!0}),Object.assign(ts.prototype,{isFogExp2:!0,clone:function(){return new ts(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(is.prototype,{isFog:!0,clone:function(){return new is(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(ns.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(ns.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=$.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new ns(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=$.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const rs=new de;function ss(e,t,i,n){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===n}function os(e){Ut.call(this),this.type="SpriteMaterial",this.color=new At(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let as;Object.defineProperties(ss.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(ss.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,i=this.data.count;t<i;t++)rs.x=this.getX(t),rs.y=this.getY(t),rs.z=this.getZ(t),rs.applyMatrix4(e),this.setXYZ(t,rs.x,rs.y,rs.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this},setXYZ:function(e,t,i,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this},setXYZW:function(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new Gt(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ss(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),os.prototype=Object.create(Ut.prototype),os.prototype.constructor=os,os.prototype.isSpriteMaterial=!0,os.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const ls=new de,cs=new de,hs=new de,us=new ee,ds=new ee,ps=new be,ms=new de,fs=new de,gs=new de,vs=new ee,xs=new ee,ys=new ee;function bs(e){if(Be.call(this),this.type="Sprite",void 0===as){as=new ri;const e=new ns(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);as.setIndex([0,1,2,0,2,3]),as.setAttribute("position",new ss(e,3,0,!1)),as.setAttribute("uv",new ss(e,2,3,!1))}this.geometry=as,this.material=void 0!==e?e:new os,this.center=new ee(.5,.5)}function ws(e,t,i,n,r,s){us.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(ds.x=s*us.x-r*us.y,ds.y=r*us.x+s*us.y):ds.copy(us),e.copy(t),e.x+=ds.x,e.y+=ds.y,e.applyMatrix4(ps)}bs.prototype=Object.assign(Object.create(Be.prototype),{constructor:bs,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),cs.setFromMatrixScale(this.matrixWorld),ps.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),hs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&cs.multiplyScalar(-hs.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const s=this.center;ws(ms.set(-.5,-.5,0),hs,s,cs,n,r),ws(fs.set(.5,-.5,0),hs,s,cs,n,r),ws(gs.set(.5,.5,0),hs,s,cs,n,r),vs.set(0,0),xs.set(1,0),ys.set(1,1);let o=e.ray.intersectTriangle(ms,fs,gs,!1,ls);if(null===o&&(ws(fs.set(-.5,.5,0),hs,s,cs,n,r),xs.set(0,1),o=e.ray.intersectTriangle(ms,gs,fs,!1,ls),null===o))return;const a=e.ray.origin.distanceTo(ls);a<e.near||a>e.far||t.push({distance:a,point:ls.clone(),uv:Ct.getUV(ls,ms,fs,gs,vs,xs,ys,new ee),face:null,object:this})},copy:function(e){return Be.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const _s=new de,Ms=new de;function Ss(){Be.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function Cs(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mi.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new be,this.bindMatrixInverse=new be}Ss.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ss,isLOD:!0,copy:function(e){Be.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,i=t.length;e<i;e++){const i=t[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);const i=this.levels;let n;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n&&!(e<t[i].distance);i++);return t[i-1].object}return null},raycast:function(e,t){if(this.levels.length>0){_s.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(_s);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){_s.setFromMatrixPosition(e.matrixWorld),Ms.setFromMatrixPosition(this.matrixWorld);const i=_s.distanceTo(Ms)/e.zoom;let n,r;for(t[0].object.visible=!0,n=1,r=t.length;n<r&&i>=t[n].distance;n++)t[n-1].object.visible=!1,t[n].object.visible=!0;for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}},toJSON:function(e){const t=Be.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let e=0,n=i.length;e<n;e++){const n=i[e];t.object.levels.push({object:n.object.uuid,distance:n.distance})}return t}}),Cs.prototype=Object.assign(Object.create(Mi.prototype),{constructor:Cs,isSkinnedMesh:!0,copy:function(e){return Mi.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new oe,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Mi.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new de,t=new oe,i=new oe,n=new de,r=new be;return function(s,o){const a=this.skeleton,l=this.geometry;t.fromBufferAttribute(l.attributes.skinIndex,s),i.fromBufferAttribute(l.attributes.skinWeight,s),e.fromBufferAttribute(l.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let s=0;s<4;s++){const l=i.getComponent(s);if(0!==l){const i=t.getComponent(s);r.multiplyMatrices(a.bones[i].matrixWorld,a.boneInverses[i]),o.addScaledVector(n.copy(e).applyMatrix4(r),l)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const Ts=new be,Es=new be;function Ps(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new be)}}function As(){Be.call(this),this.type="Bone"}Object.assign(Ps.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const t=new be;this.bones[e]&&t.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=e.length;n<r;n++){const r=e[n]?e[n].matrixWorld:Es;Ts.multiplyMatrices(r,t[n]),Ts.toArray(i,16*n)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new Ps(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,i=this.bones.length;t<i;t++){const i=this.bones[t];if(i.name===e)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),As.prototype=Object.assign(Object.create(Be.prototype),{constructor:As,isBone:!0});const Ds=new be,Ls=new be,Rs=[],Is=new Mi;function Os(e,t,i){Mi.call(this,e,t),this.instanceMatrix=new Gt(new Float32Array(16*i),16),this.count=i,this.frustumCulled=!1}function Us(e){Ut.call(this),this.type="LineBasicMaterial",this.color=new At(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}Os.prototype=Object.assign(Object.create(Mi.prototype),{constructor:Os,isInstancedMesh:!0,copy:function(e){return Mi.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const i=this.matrixWorld,n=this.count;if(Is.geometry=this.geometry,Is.material=this.material,void 0!==Is.material)for(let r=0;r<n;r++){this.getMatrixAt(r,Ds),Ls.multiplyMatrices(i,Ds),Is.matrixWorld=Ls,Is.raycast(e,Rs);for(let e=0,i=Rs.length;e<i;e++){const i=Rs[e];i.instanceId=r,i.object=this,t.push(i)}Rs.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}}),Us.prototype=Object.create(Ut.prototype),Us.prototype.constructor=Us,Us.prototype.isLineBasicMaterial=!0,Us.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const Ns=new de,ks=new de,Bs=new be,Gs=new ht,Fs=new it;function Hs(e,t,i){1===i&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Be.call(this),this.type="Line",this.geometry=void 0!==e?e:new ri,this.material=void 0!==t?t:new Us,this.updateMorphTargets()}Hs.prototype=Object.assign(Object.create(Be.prototype),{constructor:Hs,isLine:!0,copy:function(e){return Be.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[0];for(let e=1,n=t.count;e<n;e++)Ns.fromBufferAttribute(t,e-1),ks.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=Ns.distanceTo(ks);e.setAttribute("lineDistance",new qt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,i=e.lineDistances;i[0]=0;for(let e=1,n=t.length;e<n;e++)i[e]=i[e-1],i[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),Fs.copy(i.boundingSphere),Fs.applyMatrix4(n),Fs.radius+=r,!1===e.ray.intersectsSphere(Fs))return;Bs.getInverse(n),Gs.copy(e.ray).applyMatrix4(Bs);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new de,l=new de,c=new de,h=new de,u=this&&this.isLineSegments?2:1;if(i.isBufferGeometry){const n=i.index,r=i.attributes.position.array;if(null!==n){const i=n.array;for(let n=0,s=i.length-1;n<s;n+=u){const s=i[n],u=i[n+1];a.fromArray(r,3*s),l.fromArray(r,3*u);if(Gs.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(h);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else for(let i=0,n=r.length/3-1;i<n;i+=u){a.fromArray(r,3*i),l.fromArray(r,3*i+3);if(Gs.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(h);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else if(i.isGeometry){const n=i.vertices,r=n.length;for(let i=0;i<r-1;i+=u){if(Gs.distanceSqToSegment(n[i],n[i+1],h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(h);r<e.near||r>e.far||t.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const js=new de,zs=new de;function Vs(e,t){Hs.call(this,e,t),this.type="LineSegments"}function Ws(e,t){Hs.call(this,e,t),this.type="LineLoop"}function Xs(e){Ut.call(this),this.type="PointsMaterial",this.color=new At(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}Vs.prototype=Object.assign(Object.create(Hs.prototype),{constructor:Vs,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[];for(let e=0,n=t.count;e<n;e+=2)js.fromBufferAttribute(t,e),zs.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+js.distanceTo(zs);e.setAttribute("lineDistance",new qt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,i=e.lineDistances;for(let e=0,n=t.length;e<n;e+=2)js.copy(t[e]),zs.copy(t[e+1]),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+js.distanceTo(zs)}return this}}),Ws.prototype=Object.assign(Object.create(Hs.prototype),{constructor:Ws,isLineLoop:!0}),Xs.prototype=Object.create(Ut.prototype),Xs.prototype.constructor=Xs,Xs.prototype.isPointsMaterial=!0,Xs.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const qs=new be,Ys=new ht,Zs=new it,Ks=new de;function Qs(e,t){Be.call(this),this.type="Points",this.geometry=void 0!==e?e:new ri,this.material=void 0!==t?t:new Xs,this.updateMorphTargets()}function Js(e,t,i,n,r,s,o){const a=Ys.distanceSqToPoint(e);if(a<i){const i=new de;Ys.closestPointToPoint(e,i),i.applyMatrix4(n);const l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:i,index:t,face:null,object:o})}}function $s(e,t,i,n,r,s,o,a,l){se.call(this,e,t,i,n,r,s,o,a,l),this.format=void 0!==o?o:D,this.minFilter=void 0!==s?s:w,this.magFilter=void 0!==r?r:w,this.generateMipmaps=!1}function eo(e,t,i,n,r,s,o,a,l,c,h,u){se.call(this,null,s,o,a,l,c,n,r,h,u),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function to(e,t,i,n,r,s,o,a,l){se.call(this,e,t,i,n,r,s,o,a,l),this.needsUpdate=!0}function io(e,t,i,n,r,s,o,a,l,c){if((c=void 0!==c?c:R)!==R&&c!==I)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&c===R&&(i=C),void 0===i&&c===I&&(i=A),se.call(this,null,n,r,s,o,a,c,i,l),this.image={width:e,height:t},this.magFilter=void 0!==o?o:x,this.minFilter=void 0!==a?a:x,this.flipY=!1,this.generateMipmaps=!1}function no(e){ri.call(this),this.type="WireframeGeometry";const t=[],i=[0,0],n={},r=["a","b","c"];if(e&&e.isGeometry){const s=e.faces;for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0;e<3;e++){const s=t[r[e]],o=t[r[(e+1)%3]];i[0]=Math.min(s,o),i[1]=Math.max(s,o);const a=i[0]+","+i[1];void 0===n[a]&&(n[a]={index1:i[0],index2:i[1]})}}for(const i in n){const r=n[i];let s=e.vertices[r.index1];t.push(s.x,s.y,s.z),s=e.vertices[r.index2],t.push(s.x,s.y,s.z)}}else if(e&&e.isBufferGeometry){let r=new de;if(null!==e.index){const s=e.attributes.position,o=e.index;let a=e.groups;0===a.length&&(a=[{start:0,count:o.count,materialIndex:0}]);for(let e=0,t=a.length;e<t;++e){const t=a[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)for(let t=0;t<3;t++){const r=o.getX(e+t),s=o.getX(e+(t+1)%3);i[0]=Math.min(r,s),i[1]=Math.max(r,s);const a=i[0]+","+i[1];void 0===n[a]&&(n[a]={index1:i[0],index2:i[1]})}}for(const e in n){const i=n[e];r.fromBufferAttribute(s,i.index1),t.push(r.x,r.y,r.z),r.fromBufferAttribute(s,i.index2),t.push(r.x,r.y,r.z)}}else{const i=e.attributes.position;for(let e=0,n=i.count/3;e<n;e++)for(let n=0;n<3;n++){const s=3*e+n;r.fromBufferAttribute(i,s),t.push(r.x,r.y,r.z);const o=3*e+(n+1)%3;r.fromBufferAttribute(i,o),t.push(r.x,r.y,r.z)}}}this.setAttribute("position",new qt(t,3))}function ro(e,t,i){Di.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:i},this.fromBufferGeometry(new so(e,t,i)),this.mergeVertices()}function so(e,t,i){ri.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:i};const n=[],r=[],s=[],o=[],a=1e-5,l=new de,c=new de,h=new de,u=new de,d=new de;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let n=0;n<=i;n++){const p=n/i;for(let i=0;i<=t;i++){const n=i/t;e(n,p,c),r.push(c.x,c.y,c.z),n-a>=0?(e(n-a,p,h),u.subVectors(c,h)):(e(n+a,p,h),u.subVectors(h,c)),p-a>=0?(e(n,p-a,h),d.subVectors(c,h)):(e(n,p+a,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(n,p)}}for(let e=0;e<i;e++)for(let i=0;i<t;i++){const t=e*p+i,r=e*p+i+1,s=(e+1)*p+i+1,o=(e+1)*p+i;n.push(t,r,o),n.push(r,s,o)}this.setIndex(n),this.setAttribute("position",new qt(r,3)),this.setAttribute("normal",new qt(s,3)),this.setAttribute("uv",new qt(o,2))}function oo(e,t,i,n){Di.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n},this.fromBufferGeometry(new ao(e,t,i,n)),this.mergeVertices()}function ao(e,t,i,n){ri.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n},i=i||1;const r=[],s=[];function o(e,t,i,n){const r=Math.pow(2,n),s=[];for(let n=0;n<=r;n++){s[n]=[];const o=e.clone().lerp(i,n/r),a=t.clone().lerp(i,n/r),l=r-n;for(let e=0;e<=l;e++)s[n][e]=0===e&&n===r?o:o.clone().lerp(a,e/l)}for(let e=0;e<r;e++)for(let t=0;t<2*(r-e)-1;t++){const i=Math.floor(t/2);t%2==0?(a(s[e][i+1]),a(s[e+1][i]),a(s[e][i])):(a(s[e][i+1]),a(s[e+1][i+1]),a(s[e+1][i]))}}function a(e){r.push(e.x,e.y,e.z)}function l(t,i){const n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function c(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}!function(e){const i=new de,n=new de,r=new de;for(let s=0;s<t.length;s+=3)l(t[s+0],i),l(t[s+1],n),l(t[s+2],r),o(i,n,r,e)}(n=n||0),function(e){const t=new de;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){const e=new de;for(let i=0;i<r.length;i+=3){e.x=r[i+0],e.y=r[i+1],e.z=r[i+2];const n=h(e)/2/Math.PI+.5,o=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);s.push(n,1-o)}var t;(function(){const e=new de,t=new de,i=new de,n=new de,o=new ee,a=new ee,l=new ee;for(let u=0,d=0;u<r.length;u+=9,d+=6){e.set(r[u+0],r[u+1],r[u+2]),t.set(r[u+3],r[u+4],r[u+5]),i.set(r[u+6],r[u+7],r[u+8]),o.set(s[d+0],s[d+1]),a.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),n.copy(e).add(t).add(i).divideScalar(3);const p=h(n);c(o,d+0,e,p),c(a,d+2,t,p),c(l,d+4,i,p)}})(),function(){for(let e=0;e<s.length;e+=6){const t=s[e+0],i=s[e+2],n=s[e+4],r=Math.max(t,i,n),o=Math.min(t,i,n);r>.9&&o<.1&&(t<.2&&(s[e+0]+=1),i<.2&&(s[e+2]+=1),n<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new qt(r,3)),this.setAttribute("normal",new qt(r.slice(),3)),this.setAttribute("uv",new qt(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function lo(e,t){Di.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new co(e,t)),this.mergeVertices()}function co(e,t){ao.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function ho(e,t){Di.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new uo(e,t)),this.mergeVertices()}function uo(e,t){ao.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function po(e,t){Di.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new mo(e,t)),this.mergeVertices()}function mo(e,t){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];ao.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function fo(e,t){Di.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new go(e,t)),this.mergeVertices()}function go(e,t){const i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n];ao.call(this,r,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function vo(e,t,i,n,r,s){Di.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r},void 0!==s&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new xo(e,t,i,n,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function xo(e,t,i,n,r){ri.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r},t=t||64,i=i||1,n=n||8,r=r||!1;const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new de,a=new de,l=new ee;let c=new de;const h=[],u=[],d=[],p=[];function m(r){c=e.getPointAt(r/t,c);const l=s.normals[r],d=s.binormals[r];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,r=Math.sin(t),s=-Math.cos(t);a.x=s*l.x+r*d.x,a.y=s*l.y+r*d.y,a.z=s*l.z+r*d.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=c.x+i*a.x,o.y=c.y+i*a.y,o.z=c.z+i*a.z,h.push(o.x,o.y,o.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,o=(n+1)*(e-1)+t;p.push(i,r,o),p.push(r,s,o)}}()}(),this.setIndex(p),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(u,3)),this.setAttribute("uv",new qt(d,2))}function yo(e,t,i,n,r,s,o){Di.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new bo(e,t,i,n,r,s)),this.mergeVertices()}function bo(e,t,i,n,r,s){ri.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},e=e||1,t=t||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,s=s||3;const o=[],a=[],l=[],c=[],h=new de,u=new de,d=new de,p=new de,m=new de,f=new de,g=new de;for(let o=0;o<=i;++o){const x=o/i*r*Math.PI*2;v(x,r,s,e,d),v(x+.01,r,s,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=n;++e){const r=e/n*Math.PI*2,s=-t*Math.cos(r),p=t*Math.sin(r);h.x=d.x+(s*g.x+p*m.x),h.y=d.y+(s*g.y+p*m.y),h.z=d.z+(s*g.z+p*m.z),a.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(o/i),c.push(e/n)}}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){const i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,a=(n+1)*(e-1)+t;o.push(i,r,a),o.push(r,s,a)}function v(e,t,i,n,r){const s=Math.cos(e),o=Math.sin(e),a=i/t*e,l=Math.cos(a);r.x=n*(2+l)*.5*s,r.y=n*(2+l)*o*.5,r.z=n*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new qt(a,3)),this.setAttribute("normal",new qt(l,3)),this.setAttribute("uv",new qt(c,2))}function wo(e,t,i,n,r){Di.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new _o(e,t,i,n,r)),this.mergeVertices()}function _o(e,t,i,n,r){ri.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},e=e||1,t=t||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;const s=[],o=[],a=[],l=[],c=new de,h=new de,u=new de;for(let s=0;s<=i;s++)for(let d=0;d<=n;d++){const p=d/n*r,m=s/i*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(p),h.y=(e+t*Math.cos(m))*Math.sin(p),h.z=t*Math.sin(m),o.push(h.x,h.y,h.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),u.subVectors(h,c).normalize(),a.push(u.x,u.y,u.z),l.push(d/n),l.push(s/i)}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){const i=(n+1)*e+t-1,r=(n+1)*(e-1)+t-1,o=(n+1)*(e-1)+t,a=(n+1)*e+t;s.push(i,r,a),s.push(r,o,a)}this.setIndex(s),this.setAttribute("position",new qt(o,3)),this.setAttribute("normal",new qt(a,3)),this.setAttribute("uv",new qt(l,2))}Qs.prototype=Object.assign(Object.create(Be.prototype),{constructor:Qs,isPoints:!0,copy:function(e){return Be.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),Zs.copy(i.boundingSphere),Zs.applyMatrix4(n),Zs.radius+=r,!1===e.ray.intersectsSphere(Zs))return;qs.getInverse(n),Ys.copy(e.ray).applyMatrix4(qs);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(i.isBufferGeometry){const r=i.index,s=i.attributes.position.array;if(null!==r){const i=r.array;for(let r=0,a=i.length;r<a;r++){const a=i[r];Ks.fromArray(s,3*a),Js(Ks,a,o,n,e,t,this)}}else for(let i=0,r=s.length/3;i<r;i++)Ks.fromArray(s,3*i),Js(Ks,i,o,n,e,t,this)}else{const r=i.vertices;for(let i=0,s=r.length;i<s;i++)Js(r[i],i,o,n,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),$s.prototype=Object.assign(Object.create(se.prototype),{constructor:$s,isVideoTexture:!0,update:function(){const e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),eo.prototype=Object.create(se.prototype),eo.prototype.constructor=eo,eo.prototype.isCompressedTexture=!0,to.prototype=Object.create(se.prototype),to.prototype.constructor=to,to.prototype.isCanvasTexture=!0,io.prototype=Object.create(se.prototype),io.prototype.constructor=io,io.prototype.isDepthTexture=!0,no.prototype=Object.create(ri.prototype),no.prototype.constructor=no,ro.prototype=Object.create(Di.prototype),ro.prototype.constructor=ro,so.prototype=Object.create(ri.prototype),so.prototype.constructor=so,oo.prototype=Object.create(Di.prototype),oo.prototype.constructor=oo,ao.prototype=Object.create(ri.prototype),ao.prototype.constructor=ao,lo.prototype=Object.create(Di.prototype),lo.prototype.constructor=lo,co.prototype=Object.create(ao.prototype),co.prototype.constructor=co,ho.prototype=Object.create(Di.prototype),ho.prototype.constructor=ho,uo.prototype=Object.create(ao.prototype),uo.prototype.constructor=uo,po.prototype=Object.create(Di.prototype),po.prototype.constructor=po,mo.prototype=Object.create(ao.prototype),mo.prototype.constructor=mo,fo.prototype=Object.create(Di.prototype),fo.prototype.constructor=fo,go.prototype=Object.create(ao.prototype),go.prototype.constructor=go,vo.prototype=Object.create(Di.prototype),vo.prototype.constructor=vo,xo.prototype=Object.create(ri.prototype),xo.prototype.constructor=xo,xo.prototype.toJSON=function(){const e=ri.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e},yo.prototype=Object.create(Di.prototype),yo.prototype.constructor=yo,bo.prototype=Object.create(ri.prototype),bo.prototype.constructor=bo,wo.prototype=Object.create(Di.prototype),wo.prototype.constructor=wo,_o.prototype=Object.create(ri.prototype),_o.prototype.constructor=_o;const Mo=function(e,t,i){i=i||2;let n,r,s,o,a,l,c,h=t&&t.length,u=h?t[0]*i:e.length,d=So(e,0,u,i,!0),p=[];if(!d||d.next===d.prev)return p;if(h&&(d=function(e,t,i,n){let r,s,o,a,l,c=[];for(r=0,s=t.length;r<s;r++)o=t[r]*n,a=r<s-1?t[r+1]*n:e.length,l=So(e,o,a,n,!1),l===l.next&&(l.steiner=!0),c.push(Uo(l));for(c.sort(Lo),r=0;r<c.length;r++)Ro(c[r],i),i=Co(i,i.next);return i}(e,t,d,i)),e.length>80*i){n=s=e[0],r=o=e[1];for(let t=i;t<u;t+=i)a=e[t],l=e[t+1],a<n&&(n=a),l<r&&(r=l),a>s&&(s=a),l>o&&(o=l);c=Math.max(s-n,o-r),c=0!==c?1/c:0}return To(d,p,i,n,r,c),p};function So(e,t,i,n,r){let s,o;if(r===function(e,t,i,n){let r=0;for(let s=t,o=i-n;s<i;s+=n)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}(e,t,i,n)>0)for(s=t;s<i;s+=n)o=Wo(s,e[s],e[s+1],o);else for(s=i-n;s>=t;s-=n)o=Wo(s,e[s],e[s+1],o);return o&&Go(o,o.next)&&(Xo(o),o=o.next),o}function Co(e,t){if(!e)return e;t||(t=e);let i,n=e;do{if(i=!1,n.steiner||!Go(n,n.next)&&0!==Bo(n.prev,n,n.next))n=n.next;else{if(Xo(n),n=t=n.prev,n===n.next)break;i=!0}}while(i||n!==t);return t}function To(e,t,i,n,r,s,o){if(!e)return;!o&&s&&function(e,t,i,n){let r=e;do{null===r.z&&(r.z=Oo(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,s,o,a,l,c=1;do{for(i=e,e=null,s=null,o=0;i;){for(o++,n=i,a=0,t=0;t<c&&(a++,n=n.nextZ,n);t++);for(l=c;a>0||l>0&&n;)0!==a&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,a--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;i=n}s.nextZ=null,c*=2}while(o>1)}(r)}(e,n,r,s);let a,l,c=e;for(;e.prev!==e.next;)if(a=e.prev,l=e.next,s?Po(e,n,r,s):Eo(e))t.push(a.i/i),t.push(e.i/i),t.push(l.i/i),Xo(e),e=l.next,c=l.next;else if((e=l)===c){o?1===o?To(e=Ao(Co(e),t,i),t,i,n,r,s,2):2===o&&Do(e,t,i,n,r,s):To(Co(e),t,i,n,r,s,1);break}}function Eo(e){let t=e.prev,i=e,n=e.next;if(Bo(t,i,n)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(No(t.x,t.y,i.x,i.y,n.x,n.y,r.x,r.y)&&Bo(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Po(e,t,i,n){let r=e.prev,s=e,o=e.next;if(Bo(r,s,o)>=0)return!1;let a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=Oo(a,l,t,i,n),d=Oo(c,h,t,i,n),p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&No(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Bo(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&No(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Bo(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&No(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Bo(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&No(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Bo(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Ao(e,t,i){let n=e;do{let r=n.prev,s=n.next.next;!Go(r,s)&&Fo(r,n,n.next,s)&&zo(r,s)&&zo(s,r)&&(t.push(r.i/i),t.push(n.i/i),t.push(s.i/i),Xo(n),Xo(n.next),n=e=s),n=n.next}while(n!==e);return Co(n)}function Do(e,t,i,n,r,s){let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&ko(o,e)){let a=Vo(o,e);return o=Co(o,o.next),a=Co(a,a.next),To(o,t,i,n,r,s),void To(a,t,i,n,r,s)}e=e.next}o=o.next}while(o!==e)}function Lo(e,t){return e.x-t.x}function Ro(e,t){if(t=function(e,t){let i,n=t,r=e.x,s=e.y,o=-1/0;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){let e=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=r&&e>o){if(o=e,e===r){if(s===n.y)return n;if(s===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!i)return null;if(r===o)return i;let a,l=i,c=i.x,h=i.y,u=1/0;n=i;do{r>=n.x&&n.x>=c&&r!==n.x&&No(s<h?r:o,s,c,h,s<h?o:r,s,n.x,n.y)&&(a=Math.abs(s-n.y)/(r-n.x),zo(n,e)&&(a<u||a===u&&(n.x>i.x||n.x===i.x&&Io(i,n)))&&(i=n,u=a)),n=n.next}while(n!==l);return i}(e,t),t){const i=Vo(t,e);Co(t,t.next),Co(i,i.next)}}function Io(e,t){return Bo(e.prev,e,t.prev)<0&&Bo(t.next,e,e.next)<0}function Oo(e,t,i,n,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Uo(e){let t=e,i=e;do{(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next}while(t!==e);return i}function No(e,t,i,n,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(n-a)-(i-o)*(t-a)>=0&&(i-o)*(s-a)-(r-o)*(n-a)>=0}function ko(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&Fo(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(zo(e,t)&&zo(t,e)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==e);return n}(e,t)&&(Bo(e.prev,e,t.prev)||Bo(e,t.prev,t))||Go(e,t)&&Bo(e.prev,e,e.next)>0&&Bo(t.prev,t,t.next)>0)}function Bo(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function Go(e,t){return e.x===t.x&&e.y===t.y}function Fo(e,t,i,n){const r=jo(Bo(e,t,i)),s=jo(Bo(e,t,n)),o=jo(Bo(i,n,e)),a=jo(Bo(i,n,t));return r!==s&&o!==a||(!(0!==r||!Ho(e,i,t))||(!(0!==s||!Ho(e,n,t))||(!(0!==o||!Ho(i,e,n))||!(0!==a||!Ho(i,t,n)))))}function Ho(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function jo(e){return e>0?1:e<0?-1:0}function zo(e,t){return Bo(e.prev,e,e.next)<0?Bo(e,t,e.next)>=0&&Bo(e,e.prev,t)>=0:Bo(e,t,e.prev)<0||Bo(e,e.next,t)<0}function Vo(e,t){let i=new qo(e.i,e.x,e.y),n=new qo(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function Wo(e,t,i,n){const r=new qo(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function Xo(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function qo(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Yo={area:function(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return.5*i},isClockWise:function(e){return Yo.area(e)<0},triangulateShape:function(e,t){const i=[],n=[],r=[];Zo(e),Ko(i,e);let s=e.length;t.forEach(Zo);for(let e=0;e<t.length;e++)n.push(s),s+=t[e].length,Ko(i,t[e]);const o=Mo(i,n);for(let e=0;e<o.length;e+=3)r.push(o.slice(e,e+3));return r}};function Zo(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Ko(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}function Qo(e,t){Di.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Jo(e,t)),this.mergeVertices()}function Jo(e,t){ri.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let t=0,i=e.length;t<i;t++){s(e[t])}function s(e){const s=[],o=void 0!==t.curveSegments?t.curveSegments:12,a=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,c=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:6,u=void 0!==t.bevelSize?t.bevelSize:h-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:$o;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,v,x,y,b,w=!1;m&&(g=m.getSpacedPoints(a),w=!0,c=!1,v=m.computeFrenetFrames(a,!1),x=new de,y=new de,b=new de),c||(p=0,h=0,u=0,d=0);const _=e.extractPoints(o);let M=_.shape;const S=_.holes;if(!Yo.isClockWise(M)){M=M.reverse();for(let e=0,t=S.length;e<t;e++){const t=S[e];Yo.isClockWise(t)&&(S[e]=t.reverse())}}const C=Yo.triangulateShape(M,S),T=M;for(let e=0,t=S.length;e<t;e++){const t=S[e];M=M.concat(t)}function E(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}const P=M.length,A=C.length;function D(e,t,i){let n,r,s;const o=e.x-t.x,a=e.y-t.y,l=i.x-e.x,c=i.y-e.y,h=o*o+a*a,u=o*c-a*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-a/u,m=t.y+o/u,f=((i.x-c/d-p)*c-(i.y+l/d-m)*l)/(o*c-a*l);n=p+o*f-e.x,r=m+a*f-e.y;const g=n*n+r*r;if(g<=2)return new ee(n,r);s=Math.sqrt(g/2)}else{let e=!1;o>Number.EPSILON?l>Number.EPSILON&&(e=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(a)===Math.sign(c)&&(e=!0),e?(n=-a,r=o,s=Math.sqrt(h)):(n=o,r=a,s=Math.sqrt(h/2))}return new ee(n/s,r/s)}const L=[];for(let e=0,t=T.length,i=t-1,n=e+1;e<t;e++,i++,n++)i===t&&(i=0),n===t&&(n=0),L[e]=D(T[e],T[i],T[n]);const R=[];let I,O=L.concat();for(let e=0,t=S.length;e<t;e++){const t=S[e];I=[];for(let e=0,i=t.length,n=i-1,r=e+1;e<i;e++,n++,r++)n===i&&(n=0),r===i&&(r=0),I[e]=D(t[e],t[n],t[r]);R.push(I),O=O.concat(I)}for(let e=0;e<p;e++){const t=e/p,i=h*Math.cos(t*Math.PI/2),n=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=T.length;e<t;e++){const t=E(T[e],L[e],n);k(t.x,t.y,-i)}for(let e=0,t=S.length;e<t;e++){const t=S[e];I=R[e];for(let e=0,r=t.length;e<r;e++){const r=E(t[e],I[e],n);k(r.x,r.y,-i)}}}const U=u+d;for(let e=0;e<P;e++){const t=c?E(M[e],O[e],U):M[e];w?(y.copy(v.normals[0]).multiplyScalar(t.x),x.copy(v.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(y).add(x),k(b.x,b.y,b.z)):k(t.x,t.y,0)}for(let e=1;e<=a;e++)for(let t=0;t<P;t++){const i=c?E(M[t],O[t],U):M[t];w?(y.copy(v.normals[e]).multiplyScalar(i.x),x.copy(v.binormals[e]).multiplyScalar(i.y),b.copy(g[e]).add(y).add(x),k(b.x,b.y,b.z)):k(i.x,i.y,l/a*e)}for(let e=p-1;e>=0;e--){const t=e/p,i=h*Math.cos(t*Math.PI/2),n=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=T.length;e<t;e++){const t=E(T[e],L[e],n);k(t.x,t.y,l+i)}for(let e=0,t=S.length;e<t;e++){const t=S[e];I=R[e];for(let e=0,r=t.length;e<r;e++){const r=E(t[e],I[e],n);w?k(r.x,r.y+g[a-1].y,g[a-1].x+i):k(r.x,r.y,l+i)}}}function N(e,t){let i=e.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=e.length-1);for(let e=0,i=a+2*p;e<i;e++){const i=P*e,s=P*(e+1);G(t+n+i,t+r+i,t+r+s,t+n+s)}}}function k(e,t,i){s.push(e),s.push(t),s.push(i)}function B(e,t,r){F(e),F(t),F(r);const s=n.length/3,o=f.generateTopUV(i,n,s-3,s-2,s-1);H(o[0]),H(o[1]),H(o[2])}function G(e,t,r,s){F(e),F(t),F(s),F(t),F(r),F(s);const o=n.length/3,a=f.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);H(a[0]),H(a[1]),H(a[3]),H(a[1]),H(a[2]),H(a[3])}function F(e){n.push(s[3*e+0]),n.push(s[3*e+1]),n.push(s[3*e+2])}function H(e){r.push(e.x),r.push(e.y)}!function(){const e=n.length/3;if(c){let e=0,t=P*e;for(let e=0;e<A;e++){const i=C[e];B(i[2]+t,i[1]+t,i[0]+t)}e=a+2*p,t=P*e;for(let e=0;e<A;e++){const i=C[e];B(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<A;e++){const t=C[e];B(t[2],t[1],t[0])}for(let e=0;e<A;e++){const t=C[e];B(t[0]+P*a,t[1]+P*a,t[2]+P*a)}}i.addGroup(e,n.length/3-e,0)}(),function(){const e=n.length/3;let t=0;N(T,t),t+=T.length;for(let e=0,i=S.length;e<i;e++){const i=S[e];N(i,t),t+=i.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new qt(n,3)),this.setAttribute("uv",new qt(r,2)),this.computeVertexNormals()}Qo.prototype=Object.create(Di.prototype),Qo.prototype.constructor=Qo,Qo.prototype.toJSON=function(){const e=Di.prototype.toJSON.call(this);return ea(this.parameters.shapes,this.parameters.options,e)},Jo.prototype=Object.create(ri.prototype),Jo.prototype.constructor=Jo,Jo.prototype.toJSON=function(){const e=ri.prototype.toJSON.call(this);return ea(this.parameters.shapes,this.parameters.options,e)};const $o={generateTopUV:function(e,t,i,n,r){const s=t[3*i],o=t[3*i+1],a=t[3*n],l=t[3*n+1],c=t[3*r],h=t[3*r+1];return[new ee(s,o),new ee(a,l),new ee(c,h)]},generateSideWallUV:function(e,t,i,n,r,s){const o=t[3*i],a=t[3*i+1],l=t[3*i+2],c=t[3*n],h=t[3*n+1],u=t[3*n+2],d=t[3*r],p=t[3*r+1],m=t[3*r+2],f=t[3*s],g=t[3*s+1],v=t[3*s+2];return Math.abs(a-h)<.01?[new ee(o,1-l),new ee(c,1-u),new ee(d,1-m),new ee(f,1-v)]:[new ee(a,1-l),new ee(h,1-u),new ee(p,1-m),new ee(g,1-v)]}};function ea(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];i.shapes.push(n.uuid)}else i.shapes.push(e.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}function ta(e,t){Di.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new ia(e,t)),this.mergeVertices()}function ia(e,t){const i=(t=t||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Di;const n=i.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),Jo.call(this,n,t),this.type="TextBufferGeometry"}function na(e,t,i,n,r,s,o){Di.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new ra(e,t,i,n,r,s,o)),this.mergeVertices()}function ra(e,t,i,n,r,s,o){ri.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,s=void 0!==s?s:0,o=void 0!==o?o:Math.PI;const a=Math.min(s+o,Math.PI);let l=0;const c=[],h=new de,u=new de,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],v=d/i;let x=0;0==d&&0==s?x=.5/t:d==i&&a==Math.PI&&(x=-.5/t);for(let i=0;i<=t;i++){const a=i/t;h.x=-e*Math.cos(n+a*r)*Math.sin(s+v*o),h.y=e*Math.cos(s+v*o),h.z=e*Math.sin(n+a*r)*Math.sin(s+v*o),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(a+x,1-v),g.push(l++)}c.push(g)}for(let e=0;e<i;e++)for(let n=0;n<t;n++){const t=c[e][n+1],r=c[e][n],o=c[e+1][n],l=c[e+1][n+1];(0!==e||s>0)&&d.push(t,r,l),(e!==i-1||a<Math.PI)&&d.push(r,o,l)}this.setIndex(d),this.setAttribute("position",new qt(p,3)),this.setAttribute("normal",new qt(m,3)),this.setAttribute("uv",new qt(f,2))}function sa(e,t,i,n,r,s){Di.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},this.fromBufferGeometry(new oa(e,t,i,n,r,s)),this.mergeVertices()}function oa(e,t,i,n,r,s){ri.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},e=e||.5,t=t||1,r=void 0!==r?r:0,s=void 0!==s?s:2*Math.PI,i=void 0!==i?Math.max(3,i):8;const o=[],a=[],l=[],c=[];let h=e;const u=(t-e)/(n=void 0!==n?Math.max(1,n):1),d=new de,p=new ee;for(let e=0;e<=n;e++){for(let e=0;e<=i;e++){const n=r+e/i*s;d.x=h*Math.cos(n),d.y=h*Math.sin(n),a.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<n;e++){const t=e*(i+1);for(let e=0;e<i;e++){const n=e+t,r=n,s=n+i+1,a=n+i+2,l=n+1;o.push(r,s,l),o.push(s,a,l)}}this.setIndex(o),this.setAttribute("position",new qt(a,3)),this.setAttribute("normal",new qt(l,3)),this.setAttribute("uv",new qt(c,2))}function aa(e,t,i,n){Di.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},this.fromBufferGeometry(new la(e,t,i,n)),this.mergeVertices()}function la(e,t,i,n){ri.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t)||12,i=i||0,n=n||2*Math.PI,n=$.clamp(n,0,2*Math.PI);const r=[],s=[],o=[],a=1/t,l=new de,c=new ee;for(let r=0;r<=t;r++){const h=i+r*a*n,u=Math.sin(h),d=Math.cos(h);for(let i=0;i<=e.length-1;i++)l.x=e[i].x*u,l.y=e[i].y,l.z=e[i].x*d,s.push(l.x,l.y,l.z),c.x=r/t,c.y=i/(e.length-1),o.push(c.x,c.y)}for(let i=0;i<t;i++)for(let t=0;t<e.length-1;t++){const n=t+i*e.length,s=n,o=n+e.length,a=n+e.length+1,l=n+1;r.push(s,o,l),r.push(o,a,l)}if(this.setIndex(r),this.setAttribute("position",new qt(s,3)),this.setAttribute("uv",new qt(o,2)),this.computeVertexNormals(),n===2*Math.PI){const i=this.attributes.normal.array,n=new de,r=new de,s=new de,o=t*e.length*3;for(let t=0,a=0;t<e.length;t++,a+=3)n.x=i[a+0],n.y=i[a+1],n.z=i[a+2],r.x=i[o+a+0],r.y=i[o+a+1],r.z=i[o+a+2],s.addVectors(n,r).normalize(),i[a+0]=i[o+a+0]=s.x,i[a+1]=i[o+a+1]=s.y,i[a+2]=i[o+a+2]=s.z}}function ca(e,t){Di.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ha(e,t)),this.mergeVertices()}function ha(e,t){ri.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const i=[],n=[],r=[],s=[];let o=0,a=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(o,a,t),o+=a,a=0;function l(e){const o=n.length/3,l=e.extractPoints(t);let c=l.shape;const h=l.holes;!1===Yo.isClockWise(c)&&(c=c.reverse());for(let e=0,t=h.length;e<t;e++){const t=h[e];!0===Yo.isClockWise(t)&&(h[e]=t.reverse())}const u=Yo.triangulateShape(c,h);for(let e=0,t=h.length;e<t;e++){const t=h[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];n.push(t.x,t.y,0),r.push(0,0,1),s.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){const t=u[e],n=t[0]+o,r=t[1]+o,s=t[2]+o;i.push(n,r,s),a+=3}}this.setIndex(i),this.setAttribute("position",new qt(n,3)),this.setAttribute("normal",new qt(r,3)),this.setAttribute("uv",new qt(s,2))}function ua(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){const n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}function da(e,t){ri.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;const i=[],n=Math.cos($.DEG2RAD*t),r=[0,0],s={};let o,a,l;const c=["a","b","c"];let h;e.isBufferGeometry?(h=new Di,h.fromBufferGeometry(e)):h=e.clone(),h.mergeVertices(),h.computeFaceNormals();const u=h.vertices,d=h.faces;for(let e=0,t=d.length;e<t;e++){const t=d[e];for(let i=0;i<3;i++)o=t[c[i]],a=t[c[(i+1)%3]],r[0]=Math.min(o,a),r[1]=Math.max(o,a),l=r[0]+","+r[1],void 0===s[l]?s[l]={index1:r[0],index2:r[1],face1:e,face2:void 0}:s[l].face2=e}for(l in s){const e=s[l];if(void 0===e.face2||d[e.face1].normal.dot(d[e.face2].normal)<=n){let t=u[e.index1];i.push(t.x,t.y,t.z),t=u[e.index2],i.push(t.x,t.y,t.z)}}this.setAttribute("position",new qt(i,3))}function pa(e,t,i,n,r,s,o,a){Di.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new ma(e,t,i,n,r,s,o,a)),this.mergeVertices()}function ma(e,t,i,n,r,s,o,a){ri.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a};const l=this;e=void 0!==e?e:1,t=void 0!==t?t:1,i=i||1,n=Math.floor(n)||8,r=Math.floor(r)||1,s=void 0!==s&&s,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI;const c=[],h=[],u=[],d=[];let p=0;const m=[],f=i/2;let g=0;function v(i){let r,s;const m=new ee,v=new de;let x=0;const y=!0===i?e:t,b=!0===i?1:-1;r=p;for(let e=1;e<=n;e++)h.push(0,f*b,0),u.push(0,b,0),d.push(.5,.5),p++;s=p;for(let e=0;e<=n;e++){const t=e/n*a+o,i=Math.cos(t),r=Math.sin(t);v.x=y*r,v.y=f*b,v.z=y*i,h.push(v.x,v.y,v.z),u.push(0,b,0),m.x=.5*i+.5,m.y=.5*r*b+.5,d.push(m.x,m.y),p++}for(let e=0;e<n;e++){const t=r+e,n=s+e;!0===i?c.push(n,n+1,t):c.push(n+1,n,t),x+=3}l.addGroup(g,x,!0===i?1:2),g+=x}!function(){const s=new de,v=new de;let x=0;const y=(t-e)/i;for(let l=0;l<=r;l++){const c=[],g=l/r,x=g*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,r=t*a+o,l=Math.sin(r),m=Math.cos(r);v.x=x*l,v.y=-g*i+f,v.z=x*m,h.push(v.x,v.y,v.z),s.set(l,y,m).normalize(),u.push(s.x,s.y,s.z),d.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<n;e++)for(let t=0;t<r;t++){const i=m[t][e],n=m[t+1][e],r=m[t+1][e+1],s=m[t][e+1];c.push(i,n,s),c.push(n,r,s),x+=6}l.addGroup(g,x,0),g+=x}(),!1===s&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new qt(h,3)),this.setAttribute("normal",new qt(u,3)),this.setAttribute("uv",new qt(d,2))}function fa(e,t,i,n,r,s,o){pa.call(this,0,e,t,i,n,r,s,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:o}}function ga(e,t,i,n,r,s,o){ma.call(this,0,e,t,i,n,r,s,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:o}}function va(e,t,i,n){Di.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new xa(e,t,i,n)),this.mergeVertices()}function xa(e,t,i,n){ri.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},e=e||1,t=void 0!==t?Math.max(3,t):8,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;const r=[],s=[],o=[],a=[],l=new de,c=new ee;s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let r=0,h=3;r<=t;r++,h+=3){const u=i+r/t*n;l.x=e*Math.cos(u),l.y=e*Math.sin(u),s.push(l.x,l.y,l.z),o.push(0,0,1),c.x=(s[h]/e+1)/2,c.y=(s[h+1]/e+1)/2,a.push(c.x,c.y)}for(let e=1;e<=t;e++)r.push(e,e+1,0);this.setIndex(r),this.setAttribute("position",new qt(s,3)),this.setAttribute("normal",new qt(o,3)),this.setAttribute("uv",new qt(a,2))}ta.prototype=Object.create(Di.prototype),ta.prototype.constructor=ta,ia.prototype=Object.create(Jo.prototype),ia.prototype.constructor=ia,na.prototype=Object.create(Di.prototype),na.prototype.constructor=na,ra.prototype=Object.create(ri.prototype),ra.prototype.constructor=ra,sa.prototype=Object.create(Di.prototype),sa.prototype.constructor=sa,oa.prototype=Object.create(ri.prototype),oa.prototype.constructor=oa,aa.prototype=Object.create(Di.prototype),aa.prototype.constructor=aa,la.prototype=Object.create(ri.prototype),la.prototype.constructor=la,ca.prototype=Object.create(Di.prototype),ca.prototype.constructor=ca,ca.prototype.toJSON=function(){const e=Di.prototype.toJSON.call(this);return ua(this.parameters.shapes,e)},ha.prototype=Object.create(ri.prototype),ha.prototype.constructor=ha,ha.prototype.toJSON=function(){const e=ri.prototype.toJSON.call(this);return ua(this.parameters.shapes,e)},da.prototype=Object.create(ri.prototype),da.prototype.constructor=da,pa.prototype=Object.create(Di.prototype),pa.prototype.constructor=pa,ma.prototype=Object.create(ri.prototype),ma.prototype.constructor=ma,fa.prototype=Object.create(pa.prototype),fa.prototype.constructor=fa,ga.prototype=Object.create(ma.prototype),ga.prototype.constructor=ga,va.prototype=Object.create(Di.prototype),va.prototype.constructor=va,xa.prototype=Object.create(ri.prototype),xa.prototype.constructor=xa;var ya=Object.freeze({__proto__:null,WireframeGeometry:no,ParametricGeometry:ro,ParametricBufferGeometry:so,TetrahedronGeometry:lo,TetrahedronBufferGeometry:co,OctahedronGeometry:ho,OctahedronBufferGeometry:uo,IcosahedronGeometry:po,IcosahedronBufferGeometry:mo,DodecahedronGeometry:fo,DodecahedronBufferGeometry:go,PolyhedronGeometry:oo,PolyhedronBufferGeometry:ao,TubeGeometry:vo,TubeBufferGeometry:xo,TorusKnotGeometry:yo,TorusKnotBufferGeometry:bo,TorusGeometry:wo,TorusBufferGeometry:_o,TextGeometry:ta,TextBufferGeometry:ia,SphereGeometry:na,SphereBufferGeometry:ra,RingGeometry:sa,RingBufferGeometry:oa,PlaneGeometry:Yi,PlaneBufferGeometry:Zi,LatheGeometry:aa,LatheBufferGeometry:la,ShapeGeometry:ca,ShapeBufferGeometry:ha,ExtrudeGeometry:Qo,ExtrudeBufferGeometry:Jo,EdgesGeometry:da,ConeGeometry:fa,ConeBufferGeometry:ga,CylinderGeometry:pa,CylinderBufferGeometry:ma,CircleGeometry:va,CircleBufferGeometry:xa,BoxGeometry:class extends Di{constructor(e,t,i,n,r,s){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s},this.fromBufferGeometry(new Li(e,t,i,n,r,s)),this.mergeVertices()}},BoxBufferGeometry:Li});function ba(e){Ut.call(this),this.type="ShadowMaterial",this.color=new At(0),this.transparent=!0,this.setValues(e)}function wa(e){Ui.call(this,e),this.type="RawShaderMaterial"}function _a(e){Ut.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new At(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function Ma(e){_a.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ee(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}function Sa(e){Ut.call(this),this.type="MeshPhongMaterial",this.color=new At(16777215),this.specular=new At(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ca(e){Ut.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new At(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ta(e){Ut.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Ea(e){Ut.call(this),this.type="MeshLambertMaterial",this.color=new At(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Pa(e){Ut.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new At(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function Aa(e){Us.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}ba.prototype=Object.create(Ut.prototype),ba.prototype.constructor=ba,ba.prototype.isShadowMaterial=!0,ba.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this},wa.prototype=Object.create(Ui.prototype),wa.prototype.constructor=wa,wa.prototype.isRawShaderMaterial=!0,_a.prototype=Object.create(Ut.prototype),_a.prototype.constructor=_a,_a.prototype.isMeshStandardMaterial=!0,_a.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},Ma.prototype=Object.create(_a.prototype),Ma.prototype.constructor=Ma,Ma.prototype.isMeshPhysicalMaterial=!0,Ma.prototype.copy=function(e){return _a.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new At).copy(e.sheen):this.sheen=null,this.transparency=e.transparency,this},Sa.prototype=Object.create(Ut.prototype),Sa.prototype.constructor=Sa,Sa.prototype.isMeshPhongMaterial=!0,Sa.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ca.prototype=Object.create(Ut.prototype),Ca.prototype.constructor=Ca,Ca.prototype.isMeshToonMaterial=!0,Ca.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ta.prototype=Object.create(Ut.prototype),Ta.prototype.constructor=Ta,Ta.prototype.isMeshNormalMaterial=!0,Ta.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Ea.prototype=Object.create(Ut.prototype),Ea.prototype.constructor=Ea,Ea.prototype.isMeshLambertMaterial=!0,Ea.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Pa.prototype=Object.create(Ut.prototype),Pa.prototype.constructor=Pa,Pa.prototype.isMeshMatcapMaterial=!0,Pa.prototype.copy=function(e){return Ut.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},Aa.prototype=Object.create(Us.prototype),Aa.prototype.constructor=Aa,Aa.prototype.isLineDashedMaterial=!0,Aa.prototype.copy=function(e){return Us.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Da=Object.freeze({__proto__:null,ShadowMaterial:ba,SpriteMaterial:os,RawShaderMaterial:wa,ShaderMaterial:Ui,PointsMaterial:Xs,MeshPhysicalMaterial:Ma,MeshStandardMaterial:_a,MeshPhongMaterial:Sa,MeshToonMaterial:Ca,MeshNormalMaterial:Ta,MeshLambertMaterial:Ea,MeshDepthMaterial:jr,MeshDistanceMaterial:zr,MeshBasicMaterial:Nt,MeshMatcapMaterial:Pa,LineDashedMaterial:Aa,LineBasicMaterial:Us,Material:Ut});const La={arraySlice:function(e,t,i){return La.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return!e||!i&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort((function(t,i){return e[t]-e[i]})),i},sortedArray:function(e,t,i){const n=e.length,r=new e.constructor(n);for(let s=0,o=0;o!==n;++s){const n=i[s]*t;for(let i=0;i!==t;++i)r[o++]=e[n+i]}return r},flattenJSON:function(e,t,i,n){let r=1,s=e[0];for(;void 0!==s&&void 0===s[n];)s=e[r++];if(void 0===s)return;let o=s[n];if(void 0!==o)if(Array.isArray(o))do{o=s[n],void 0!==o&&(t.push(s.time),i.push.apply(i,o)),s=e[r++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[n],void 0!==o&&(t.push(s.time),o.toArray(i,i.length)),s=e[r++]}while(void 0!==s);else do{o=s[n],void 0!==o&&(t.push(s.time),i.push(o)),s=e[r++]}while(void 0!==s)},subclip:function(e,t,i,n,r){r=r||30;const s=e.clone();s.name=t;const o=[];for(let e=0;e<s.tracks.length;++e){const t=s.tracks[e],a=t.getValueSize(),l=[],c=[];for(let e=0;e<t.times.length;++e){const s=t.times[e]*r;if(!(s<i||s>=n)){l.push(t.times[e]);for(let i=0;i<a;++i)c.push(t.values[e*a+i])}}0!==l.length&&(t.times=La.convertArray(l,t.times.constructor),t.values=La.convertArray(c,t.values.constructor),o.push(t))}s.tracks=o;let a=1/0;for(let e=0;e<s.tracks.length;++e)a>s.tracks[e].times[0]&&(a=s.tracks[e].times[0]);for(let e=0;e<s.tracks.length;++e)s.tracks[e].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t,i,n){void 0===t&&(t=0),void 0===i&&(i=e),(void 0===n||n<=0)&&(n=30);const r=e.tracks.length,s=t/n;for(let t=0;t<r;++t){const n=i.tracks[t],r=n.ValueTypeName;if("bool"===r||"string"===r)continue;const o=e.tracks.find((function(e){return e.name===n.name&&e.ValueTypeName===r}));if(void 0===o)continue;const a=n.getValueSize(),l=n.times.length-1;let c;if(s<=n.times[0])c=La.arraySlice(n.values,0,n.valueSize);else if(s>=n.times[l]){const e=l*a;c=La.arraySlice(n.values,e)}else{const e=n.createInterpolant();e.evaluate(s),c=e.resultBuffer}if("quaternion"===r){new ce(c[0],c[1],c[2],c[3]).normalize().conjugate().toArray(c)}const h=o.times.length;for(let e=0;e<h;++e){const t=e*a;if("quaternion"===r)ce.multiplyQuaternionsFlat(o.values,t,c,0,o.values,t);else for(let e=0;e<a;++e)o.values[t+e]-=c[e]}}return e.blendMode=2501,e}};function Ra(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i}function Ia(e,t,i,n){Ra.call(this,e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Oa(e,t,i,n){Ra.call(this,e,t,i,n)}function Ua(e,t,i,n){Ra.call(this,e,t,i,n)}function Na(e,t,i,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=La.convertArray(t,this.TimeBufferType),this.values=La.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function ka(e,t,i){Na.call(this,e,t,i)}function Ba(e,t,i,n){Na.call(this,e,t,i,n)}function Ga(e,t,i,n){Na.call(this,e,t,i,n)}function Fa(e,t,i,n){Ra.call(this,e,t,i,n)}function Ha(e,t,i,n){Na.call(this,e,t,i,n)}function ja(e,t,i,n){Na.call(this,e,t,i,n)}function za(e,t,i,n){Na.call(this,e,t,i,n)}function Va(e,t,i,n){this.name=e,this.tracks=i,this.duration=void 0!==t?t:-1,this.blendMode=void 0!==n?n:F,this.uuid=$.generateUUID(),this.duration<0&&this.resetDuration()}function Wa(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ga;case"vector":case"vector2":case"vector3":case"vector4":return za;case"color":return Ba;case"quaternion":return Ha;case"bool":case"boolean":return ka;case"string":return ja}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],i=[];La.flattenJSON(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Ra.prototype,{evaluate:function(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let s;i:{n:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break n;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,r)}if(i===s)break;if(r=n,n=t[++i],e<n)break t}s=t.length;break i}if(e>=r)break e;{const o=t[1];e<o&&(i=2,r=o);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(i===s)break;if(n=r,r=t[--i-1],e>=r)break t}s=i,i=0}}for(;i<s;){const n=i+s>>>1;e<t[n]?s=n:i=n+1}if(n=t[i],r=t[i-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,r,e)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let e=0;e!==n;++e)t[e]=i[r+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Ra.prototype,{beforeStart_:Ra.prototype.copySampleValue_,afterEnd_:Ra.prototype.copySampleValue_}),Ia.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Ia,DefaultSettings_:{endingStart:k,endingEnd:k},intervalChanged_:function(e,t,i){let n=this.parameterPositions,r=e-2,s=e+1,o=n[r],a=n[s];if(void 0===o)switch(this.getSettings_().endingStart){case B:r=e,o=2*t-i;break;case G:r=n.length-2,o=t+n[r]-n[r+1];break;default:r=e,o=i}if(void 0===a)switch(this.getSettings_().endingEnd){case B:s=e,a=2*i-t;break;case G:s=1,a=i+n[1]-n[0];break;default:s=e-1,a=t}const l=.5*(i-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(a-i),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,x=(-1-d)*f+(1.5+d)*m+.5*p,y=d*f-d*m;for(let e=0;e!==o;++e)r[e]=g*s[c+e]+v*s[l+e]+x*s[a+e]+y*s[h+e];return r}}),Oa.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Oa,interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=(i-t)/(n-t),h=1-c;for(let e=0;e!==o;++e)r[e]=s[l+e]*h+s[a+e]*c;return r}}),Ua.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Ua,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(Na,{toJSON:function(e){const t=e.constructor;let i;if(void 0!==t.toJSON)i=t.toJSON(e);else{i={name:e.name,times:La.convertArray(e.times,Array),values:La.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(i.interpolation=t)}return i.type=e.ValueTypeName,i}}),Object.assign(Na.prototype,{constructor:Na,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:U,InterpolantFactoryMethodDiscrete:function(e){return new Ua(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Oa(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Ia(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case O:t=this.InterpolantFactoryMethodDiscrete;break;case U:t=this.InterpolantFactoryMethodLinear;break;case N:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return O;case this.InterpolantFactoryMethodLinear:return U;case this.InterpolantFactoryMethodSmooth:return N}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this},trim:function(e,t){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const e=this.getValueSize();this.times=La.arraySlice(i,r,s),this.values=La.arraySlice(this.values,r*e,s*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let t=0;t!==r;t++){const n=i[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,s),e=!1;break}s=n}if(void 0!==n&&La.isTypedArray(n))for(let t=0,i=n.length;t!==i;++t){const i=n[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e},optimize:function(){const e=La.arraySlice(this.times),t=La.arraySlice(this.values),i=this.getValueSize(),n=this.getInterpolation()===N,r=e.length-1;let s=1;for(let o=1;o<r;++o){let r=!1;const a=e[o];if(a!==e[o+1]&&(1!==o||a!==a[0]))if(n)r=!0;else{const e=o*i,n=e-i,s=e+i;for(let o=0;o!==i;++o){const i=t[e+o];if(i!==t[n+o]||i!==t[s+o]){r=!0;break}}}if(r){if(o!==s){e[s]=e[o];const n=o*i,r=s*i;for(let e=0;e!==i;++e)t[r+e]=t[n+e]}++s}}if(r>0){e[s]=e[r];for(let e=r*i,n=s*i,o=0;o!==i;++o)t[n+o]=t[e+o];++s}return s!==e.length?(this.times=La.arraySlice(e,0,s),this.values=La.arraySlice(t,0,s*i)):(this.times=e,this.values=t),this},clone:function(){const e=La.arraySlice(this.times,0),t=La.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}),ka.prototype=Object.assign(Object.create(Na.prototype),{constructor:ka,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:O,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Ba.prototype=Object.assign(Object.create(Na.prototype),{constructor:Ba,ValueTypeName:"color"}),Ga.prototype=Object.assign(Object.create(Na.prototype),{constructor:Ga,ValueTypeName:"number"}),Fa.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Fa,interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(i-t)/(n-t);let l=e*o;for(let e=l+o;l!==e;l+=4)ce.slerpFlat(r,0,s,l-o,s,l,a);return r}}),Ha.prototype=Object.assign(Object.create(Na.prototype),{constructor:Ha,ValueTypeName:"quaternion",DefaultInterpolation:U,InterpolantFactoryMethodLinear:function(e){return new Fa(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),ja.prototype=Object.assign(Object.create(Na.prototype),{constructor:ja,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:O,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),za.prototype=Object.assign(Object.create(Na.prototype),{constructor:za,ValueTypeName:"vector"}),Object.assign(Va,{parse:function(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let e=0,r=i.length;e!==r;++e)t.push(Wa(i[e]).scale(n));return new Va(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,n=i.length;e!==n;++e)t.push(Na.toJSON(i[e]));return n},CreateFromMorphTargetSequence:function(e,t,i,n){const r=t.length,s=[];for(let e=0;e<r;e++){let o=[],a=[];o.push((e+r-1)%r,e,(e+1)%r),a.push(0,1,0);const l=La.getKeyframeOrder(o);o=La.sortedArray(o,1,l),a=La.sortedArray(a,1,l),n||0!==o[0]||(o.push(r),a.push(a[0])),s.push(new Ga(".morphTargetInfluences["+t[e].name+"]",o,a).scale(1/i))}return new Va(e,-1,s)},findByName:function(e,t){let i=e;if(!Array.isArray(e)){const t=e;i=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<i.length;e++)if(i[e].name===t)return i[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let t=0,i=e.length;t<i;t++){const i=e[t],s=i.name.match(r);if(s&&s.length>1){const e=s[1];let t=n[e];t||(n[e]=t=[]),t.push(i)}}const s=[];for(const e in n)s.push(Va.CreateFromMorphTargetSequence(e,n[e],t,i));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(e,t,i,n,r){if(0!==i.length){const s=[],o=[];La.flattenJSON(i,s,o,n),0!==s.length&&r.push(new e(t,s,o))}},n=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const r=l[e].keys;if(r&&0!==r.length)if(r[0].morphTargets){const e={};let t;for(t=0;t<r.length;t++)if(r[t].morphTargets)for(let i=0;i<r[t].morphTargets.length;i++)e[r[t].morphTargets[i]]=-1;for(const i in e){const e=[],s=[];for(let n=0;n!==r[t].morphTargets.length;++n){const n=r[t];e.push(n.time),s.push(n.morphTarget===i?1:0)}n.push(new Ga(".morphTargetInfluence["+i+"]",e,s))}a=e.length*(s||1)}else{const s=".bones["+t[e].name+"]";i(za,s+".position",r,"pos",n),i(Ha,s+".quaternion",r,"rot",n),i(za,s+".scale",r,"scl",n)}}if(0===n.length)return null;return new Va(r,a,n,o)}}),Object.assign(Va.prototype,{resetDuration:function(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){const i=this.tracks[t];e=Math.max(e,i.times[i.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Va(this.name,this.duration,e,this.blendMode)}});const Xa={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function qa(e,t,i){const n=this;let r,s=!1,o=0,a=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){a++,!1===s&&void 0!==n.onStart&&n.onStart(e,o,a),s=!0},this.itemEnd=function(e){o++,void 0!==n.onProgress&&n.onProgress(e,o,a),o===a&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){const i=l[t],n=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return n}return null}}const Ya=new qa;function Za(e){this.manager=void 0!==e?e:Ya,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Za.prototype,{load:function(){},loadAsync:function(e,t){const i=this;return new Promise((function(n,r){i.load(e,n,t,r)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const Ka={};function Qa(e){Za.call(this,e)}function Ja(e){Za.call(this,e)}function $a(e){Za.call(this,e)}function el(e){Za.call(this,e)}function tl(e){Za.call(this,e)}function il(e){Za.call(this,e)}function nl(e){Za.call(this,e)}function rl(){this.type="Curve",this.arcLengthDivisions=200}function sl(e,t,i,n,r,s,o,a){rl.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}function ol(e,t,i,n,r,s){sl.call(this,e,t,i,i,n,r,s),this.type="ArcCurve"}function al(){let e=0,t=0,i=0,n=0;function r(r,s,o,a){e=r,t=o,i=-3*r+3*s-2*o-a,n=2*r-2*s+o+a}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,o,a){let l=(t-e)/s-(i-e)/(s+o)+(i-t)/o,c=(i-t)/o-(n-t)/(o+a)+(n-i)/a;l*=o,c*=o,r(t,i,l,c)},calc:function(r){const s=r*r;return e+t*r+i*s+n*(s*r)}}}Qa.prototype=Object.assign(Object.create(Za.prototype),{constructor:Qa,load:function(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Xa.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;if(void 0!==Ka[e])return void Ka[e].push({onLoad:t,onProgress:i,onError:n});const o=e.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(o){const i=o[1],s=!!o[2];let a=o[3];a=decodeURIComponent(a),s&&(a=atob(a));try{let n;const s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":const e=new Uint8Array(a.length);for(let t=0;t<a.length;t++)e[t]=a.charCodeAt(t);n="blob"===s?new Blob([e.buffer],{type:i}):e.buffer;break;case"document":const t=new DOMParser;n=t.parseFromString(a,i);break;case"json":n=JSON.parse(a);break;default:n=a}setTimeout((function(){t&&t(n),r.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),0)}}else{Ka[e]=[],Ka[e].push({onLoad:t,onProgress:i,onError:n}),a=new XMLHttpRequest,a.open("GET",e,!0),a.addEventListener("load",(function(t){const i=this.response,n=Ka[e];if(delete Ka[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Xa.add(e,i);for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onLoad&&t.onLoad(i)}r.manager.itemEnd(e)}else{for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}}),!1),a.addEventListener("progress",(function(t){const i=Ka[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onProgress&&n.onProgress(t)}}),!1),a.addEventListener("error",(function(t){const i=Ka[e];delete Ka[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),a.addEventListener("abort",(function(t){const i=Ka[e];delete Ka[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)a.setRequestHeader(e,this.requestHeader[e]);a.send(null)}return r.manager.itemStart(e),a},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}}),Ja.prototype=Object.assign(Object.create(Za.prototype),{constructor:Ja,load:function(e,t,i,n){const r=this,s=new Qa(r.manager);s.setPath(r.path),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t=[];for(let i=0;i<e.length;i++){const n=Va.parse(e[i]);t.push(n)}return t}}),$a.prototype=Object.assign(Object.create(Za.prototype),{constructor:$a,load:function(e,t,i,n){const r=this,s=[],o=new eo;o.image=s;const a=new Qa(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer");let l=0;function c(c){a.load(e[c],(function(e){const i=r.parse(e,!0);s[c]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},l+=1,6===l&&(1===i.mipmapCount&&(o.minFilter=w),o.format=i.format,o.needsUpdate=!0,t&&t(o))}),i,n)}if(Array.isArray(e))for(let t=0,i=e.length;t<i;++t)c(t);else a.load(e,(function(e){const i=r.parse(e,!0);if(i.isCubemap){const e=i.mipmaps.length/i.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<i.mipmapCount;e++)s[t].mipmaps.push(i.mipmaps[t*i.mipmapCount+e]),s[t].format=i.format,s[t].width=i.width,s[t].height=i.height}}else o.image.width=i.width,o.image.height=i.height,o.mipmaps=i.mipmaps;1===i.mipmapCount&&(o.minFilter=w),o.format=i.format,o.needsUpdate=!0,t&&t(o)}),i,n);return o}}),el.prototype=Object.assign(Object.create(Za.prototype),{constructor:el,load:function(e,t,i,n){const r=this,s=new Hi,o=new Qa(this.manager);return o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,(function(e){const i=r.parse(e);i&&(void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:g,s.wrapT=void 0!==i.wrapT?i.wrapT:g,s.magFilter=void 0!==i.magFilter?i.magFilter:w,s.minFilter=void 0!==i.minFilter?i.minFilter:w,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=M),1===i.mipmapCount&&(s.minFilter=w),s.needsUpdate=!0,t&&t(s,i))}),i,n),s}}),tl.prototype=Object.assign(Object.create(Za.prototype),{constructor:tl,load:function(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Xa.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),Xa.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}),il.prototype=Object.assign(Object.create(Za.prototype),{constructor:il,load:function(e,t,i,n){const r=new dn,s=new tl(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(i){s.load(e[i],(function(e){r.images[i]=e,o++,6===o&&(r.needsUpdate=!0,t&&t(r))}),void 0,n)}for(let t=0;t<e.length;++t)a(t);return r}}),nl.prototype=Object.assign(Object.create(Za.prototype),{constructor:nl,load:function(e,t,i,n){const r=new se,s=new tl(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,(function(i){r.image=i;const n=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);r.format=n?D:L,r.needsUpdate=!0,void 0!==t&&t(r)}),i,n),r}}),Object.assign(rl.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)},getPoints:function(e){void 0===e&&(e=5);const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)i=this.getPoint(s/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const i=this.getLengths();let n,r=0,s=i.length;n=t||e*i[s-1];let o,a=0,l=s-1;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),o=i[r]-n,o<0)a=r+1;else{if(!(o>0)){l=r;break}l=r-1}if(r=l,i[r]===n)return r/(s-1);const c=i[r];return(r+(n-c)/(i[r+1]-c))/(s-1)},getTangent:function(e,t){const i=1e-4;let n=e-i,r=e+i;n<0&&(n=0),r>1&&(r=1);const s=this.getPoint(n),o=this.getPoint(r),a=t||(s.isVector2?new ee:new de);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)},computeFrenetFrames:function(e,t){const i=new de,n=[],r=[],s=[],o=new de,a=new be;for(let t=0;t<=e;t++){const i=t/e;n[t]=this.getTangentAt(i,new de),n[t].normalize()}r[0]=new de,s[0]=new de;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),h=Math.abs(n[0].y),u=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),u<=l&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],o),s[0].crossVectors(n[0],r[0]);for(let t=1;t<=e;t++){if(r[t]=r[t-1].clone(),s[t]=s[t-1].clone(),o.crossVectors(n[t-1],n[t]),o.length()>Number.EPSILON){o.normalize();const e=Math.acos($.clamp(n[t-1].dot(n[t]),-1,1));r[t].applyMatrix4(a.makeRotationAxis(o,e))}s[t].crossVectors(n[t],r[t])}if(!0===t){let t=Math.acos($.clamp(r[0].dot(r[e]),-1,1));t/=e,n[0].dot(o.crossVectors(r[0],r[e]))>0&&(t=-t);for(let i=1;i<=e;i++)r[i].applyMatrix4(a.makeRotationAxis(n[i],t*i)),s[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),sl.prototype=Object.create(rl.prototype),sl.prototype.constructor=sl,sl.prototype.isEllipseCurve=!0,sl.prototype.getPoint=function(e,t){const i=t||new ee,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=a-this.aX,n=l-this.aY;a=i*e-n*t+this.aX,l=i*t+n*e+this.aY}return i.set(a,l)},sl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},sl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},sl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},ol.prototype=Object.create(sl.prototype),ol.prototype.constructor=ol,ol.prototype.isArcCurve=!0;const ll=new de,cl=new al,hl=new al,ul=new al;function dl(e,t,i,n){rl.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=i||"centripetal",this.tension=n||.5}function pl(e,t,i,n,r){const s=.5*(n-t),o=.5*(r-i),a=e*e;return(2*i-2*n+s+o)*(e*a)+(-3*i+3*n-2*s-o)*a+s*e+i}function ml(e,t,i,n){return function(e,t){const i=1-e;return i*i*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,i)+function(e,t){return e*e*t}(e,n)}function fl(e,t,i,n,r){return function(e,t){const i=1-e;return i*i*i*t}(e,t)+function(e,t){const i=1-e;return 3*i*i*e*t}(e,i)+function(e,t){return 3*(1-e)*e*e*t}(e,n)+function(e,t){return e*e*e*t}(e,r)}function gl(e,t,i,n){rl.call(this),this.type="CubicBezierCurve",this.v0=e||new ee,this.v1=t||new ee,this.v2=i||new ee,this.v3=n||new ee}function vl(e,t,i,n){rl.call(this),this.type="CubicBezierCurve3",this.v0=e||new de,this.v1=t||new de,this.v2=i||new de,this.v3=n||new de}function xl(e,t){rl.call(this),this.type="LineCurve",this.v1=e||new ee,this.v2=t||new ee}function yl(e,t){rl.call(this),this.type="LineCurve3",this.v1=e||new de,this.v2=t||new de}function bl(e,t,i){rl.call(this),this.type="QuadraticBezierCurve",this.v0=e||new ee,this.v1=t||new ee,this.v2=i||new ee}function wl(e,t,i){rl.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new de,this.v1=t||new de,this.v2=i||new de}function _l(e){rl.call(this),this.type="SplineCurve",this.points=e||[]}dl.prototype=Object.create(rl.prototype),dl.prototype.constructor=dl,dl.prototype.isCatmullRomCurve3=!0,dl.prototype.getPoint=function(e,t){const i=t||new de,n=this.points,r=n.length,s=(r-(this.closed?0:1))*e;let o,a,l,c,h=Math.floor(s),u=s-h;if(this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/r)+1)*r:0===u&&h===r-1&&(h=r-2,u=1),this.closed||h>0?o=n[(h-1)%r]:(ll.subVectors(n[0],n[1]).add(n[0]),o=ll),a=n[h%r],l=n[(h+1)%r],this.closed||h+2<r?c=n[(h+2)%r]:(ll.subVectors(n[r-1],n[r-2]).add(n[r-1]),c=ll),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(o.distanceToSquared(a),e),i=Math.pow(a.distanceToSquared(l),e),n=Math.pow(l.distanceToSquared(c),e);i<1e-4&&(i=1),t<1e-4&&(t=i),n<1e-4&&(n=i),cl.initNonuniformCatmullRom(o.x,a.x,l.x,c.x,t,i,n),hl.initNonuniformCatmullRom(o.y,a.y,l.y,c.y,t,i,n),ul.initNonuniformCatmullRom(o.z,a.z,l.z,c.z,t,i,n)}else"catmullrom"===this.curveType&&(cl.initCatmullRom(o.x,a.x,l.x,c.x,this.tension),hl.initCatmullRom(o.y,a.y,l.y,c.y,this.tension),ul.initCatmullRom(o.z,a.z,l.z,c.z,this.tension));return i.set(cl.calc(u),hl.calc(u),ul.calc(u)),i},dl.prototype.copy=function(e){rl.prototype.copy.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},dl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},dl.prototype.fromJSON=function(e){rl.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new de).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},gl.prototype=Object.create(rl.prototype),gl.prototype.constructor=gl,gl.prototype.isCubicBezierCurve=!0,gl.prototype.getPoint=function(e,t){const i=t||new ee,n=this.v0,r=this.v1,s=this.v2,o=this.v3;return i.set(fl(e,n.x,r.x,s.x,o.x),fl(e,n.y,r.y,s.y,o.y)),i},gl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},gl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},gl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},vl.prototype=Object.create(rl.prototype),vl.prototype.constructor=vl,vl.prototype.isCubicBezierCurve3=!0,vl.prototype.getPoint=function(e,t){const i=t||new de,n=this.v0,r=this.v1,s=this.v2,o=this.v3;return i.set(fl(e,n.x,r.x,s.x,o.x),fl(e,n.y,r.y,s.y,o.y),fl(e,n.z,r.z,s.z,o.z)),i},vl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},vl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},vl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},xl.prototype=Object.create(rl.prototype),xl.prototype.constructor=xl,xl.prototype.isLineCurve=!0,xl.prototype.getPoint=function(e,t){const i=t||new ee;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i},xl.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},xl.prototype.getTangent=function(e,t){const i=t||new ee;return i.copy(this.v2).sub(this.v1).normalize(),i},xl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},xl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},xl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},yl.prototype=Object.create(rl.prototype),yl.prototype.constructor=yl,yl.prototype.isLineCurve3=!0,yl.prototype.getPoint=function(e,t){const i=t||new de;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i},yl.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},yl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},yl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},yl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},bl.prototype=Object.create(rl.prototype),bl.prototype.constructor=bl,bl.prototype.isQuadraticBezierCurve=!0,bl.prototype.getPoint=function(e,t){const i=t||new ee,n=this.v0,r=this.v1,s=this.v2;return i.set(ml(e,n.x,r.x,s.x),ml(e,n.y,r.y,s.y)),i},bl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},bl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},bl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},wl.prototype=Object.create(rl.prototype),wl.prototype.constructor=wl,wl.prototype.isQuadraticBezierCurve3=!0,wl.prototype.getPoint=function(e,t){const i=t||new de,n=this.v0,r=this.v1,s=this.v2;return i.set(ml(e,n.x,r.x,s.x),ml(e,n.y,r.y,s.y),ml(e,n.z,r.z,s.z)),i},wl.prototype.copy=function(e){return rl.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},wl.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},wl.prototype.fromJSON=function(e){return rl.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},_l.prototype=Object.create(rl.prototype),_l.prototype.constructor=_l,_l.prototype.isSplineCurve=!0,_l.prototype.getPoint=function(e,t){const i=t||new ee,n=this.points,r=(n.length-1)*e,s=Math.floor(r),o=r-s,a=n[0===s?s:s-1],l=n[s],c=n[s>n.length-2?n.length-1:s+1],h=n[s>n.length-3?n.length-1:s+2];return i.set(pl(o,a.x,l.x,c.x,h.x),pl(o,a.y,l.y,c.y,h.y)),i},_l.prototype.copy=function(e){rl.prototype.copy.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this},_l.prototype.toJSON=function(){const e=rl.prototype.toJSON.call(this);e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e},_l.prototype.fromJSON=function(e){rl.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new ee).fromArray(i))}return this};var Ml=Object.freeze({__proto__:null,ArcCurve:ol,CatmullRomCurve3:dl,CubicBezierCurve:gl,CubicBezierCurve3:vl,EllipseCurve:sl,LineCurve:xl,LineCurve3:yl,QuadraticBezierCurve:bl,QuadraticBezierCurve3:wl,SplineCurve:_l});function Sl(){rl.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Cl(e){Sl.call(this),this.type="Path",this.currentPoint=new ee,e&&this.setFromPoints(e)}function Tl(e){Cl.call(this,e),this.uuid=$.generateUUID(),this.type="Shape",this.holes=[]}function El(e,t){Be.call(this),this.type="Light",this.color=new At(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function Pl(e,t,i){El.call(this,e,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Be.DefaultUp),this.updateMatrix(),this.groundColor=new At(t)}function Al(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new ee(512,512),this.map=null,this.mapPass=null,this.matrix=new be,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Vi,this._frameExtents=new ee(1,1),this._viewportCount=1,this._viewports=[new oe(0,0,1,1)]}function Dl(){Al.call(this,new ki(50,1,.5,500))}function Ll(e,t,i,n,r,s){El.call(this,e,t),this.type="SpotLight",this.position.copy(Be.DefaultUp),this.updateMatrix(),this.target=new Be,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==s?s:1,this.shadow=new Dl}function Rl(){Al.call(this,new ki(90,1,.5,500)),this._frameExtents=new ee(4,2),this._viewportCount=6,this._viewports=[new oe(2,1,1,1),new oe(0,1,1,1),new oe(3,1,1,1),new oe(1,1,1,1),new oe(3,0,1,1),new oe(1,0,1,1)],this._cubeDirections=[new de(1,0,0),new de(-1,0,0),new de(0,0,1),new de(0,0,-1),new de(0,1,0),new de(0,-1,0)],this._cubeUps=[new de(0,1,0),new de(0,1,0),new de(0,1,0),new de(0,1,0),new de(0,0,1),new de(0,0,-1)]}function Il(e,t,i,n){El.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new Rl}function Ol(e,t,i,n,r,s){Ni.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==e?e:-1,this.right=void 0!==t?t:1,this.top=void 0!==i?i:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==r?r:.1,this.far=void 0!==s?s:2e3,this.updateProjectionMatrix()}function Ul(){Al.call(this,new Ol(-5,5,5,-5,.5,500))}function Nl(e,t){El.call(this,e,t),this.type="DirectionalLight",this.position.copy(Be.DefaultUp),this.updateMatrix(),this.target=new Be,this.shadow=new Ul}function kl(e,t){El.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function Bl(e,t,i,n){El.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}function Gl(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new de)}function Fl(e,t){El.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new Gl}function Hl(e){Za.call(this,e),this.textures={}}Sl.prototype=Object.assign(Object.create(rl.prototype),{constructor:Sl,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new xl(t,e))},getPoint:function(e){const t=e*this.getLength(),i=this.getCurveLengths();let n=0;for(;n<i.length;){if(i[n]>=t){const e=i[n]-t,r=this.curves[n],s=r.getLength(),o=0===s?0:1-e/s;return r.getPointAt(o)}n++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const s=r[n],o=s&&s.isEllipseCurve?2*e:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let e=0;e<a.length;e++){const n=a[e];i&&i.equals(n)||(t.push(n),i=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){rl.prototype.copy.call(this,e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=rl.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){rl.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push((new Ml[i.type]).fromJSON(i))}return this}}),Cl.prototype=Object.assign(Object.create(Sl.prototype),{constructor:Cl,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const i=new xl(this.currentPoint.clone(),new ee(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,i,n){const r=new bl(this.currentPoint.clone(),new ee(e,t),new ee(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this},bezierCurveTo:function(e,t,i,n,r,s){const o=new gl(this.currentPoint.clone(),new ee(e,t),new ee(i,n),new ee(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=new _l([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,i,n,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,i,n,r,s),this},absarc:function(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this},ellipse:function(e,t,i,n,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,i,n,r,s,o,a),this},absellipse:function(e,t,i,n,r,s,o,a){const l=new sl(e,t,i,n,r,s,o,a);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(e){return Sl.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Sl.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Sl.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Tl.prototype=Object.assign(Object.create(Cl.prototype),{constructor:Tl,getPointsHoles:function(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Cl.prototype.copy.call(this,e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=Cl.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){Cl.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push((new Cl).fromJSON(i))}return this}}),El.prototype=Object.assign(Object.create(Be.prototype),{constructor:El,isLight:!0,copy:function(e){return Be.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=Be.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Pl.prototype=Object.assign(Object.create(El.prototype),{constructor:Pl,isHemisphereLight:!0,copy:function(e){return El.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(Al.prototype,{_projScreenMatrix:new be,_lightPositionWorld:new de,_lookTarget:new de,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,i=this.matrix,n=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),Dl.prototype=Object.assign(Object.create(Al.prototype),{constructor:Dl,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,i=2*$.RAD2DEG*e.angle,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;i===t.fov&&n===t.aspect&&r===t.far||(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),Al.prototype.updateMatrices.call(this,e)}}),Ll.prototype=Object.assign(Object.create(El.prototype),{constructor:Ll,isSpotLight:!0,copy:function(e){return El.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),Rl.prototype=Object.assign(Object.create(Al.prototype),{constructor:Rl,isPointLightShadow:!0,updateMatrices:function(e,t){void 0===t&&(t=0);const i=this.camera,n=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),i.position.copy(r),s.copy(i.position),s.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(s),i.updateMatrixWorld(),n.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),Il.prototype=Object.assign(Object.create(El.prototype),{constructor:Il,isPointLight:!0,copy:function(e){return El.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),Ol.prototype=Object.assign(Object.create(Ni.prototype),{constructor:Ol,isOrthographicCamera:!0,copy:function(e,t){return Ni.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,s=i+e,o=n+t,a=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,s=r+e*this.view.width,o-=t*this.view.offsetY,a=o-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Be.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),Ul.prototype=Object.assign(Object.create(Al.prototype),{constructor:Ul,isDirectionalLightShadow:!0,updateMatrices:function(e){Al.prototype.updateMatrices.call(this,e)}}),Nl.prototype=Object.assign(Object.create(El.prototype),{constructor:Nl,isDirectionalLight:!0,copy:function(e){return El.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),kl.prototype=Object.assign(Object.create(El.prototype),{constructor:kl,isAmbientLight:!0}),Bl.prototype=Object.assign(Object.create(El.prototype),{constructor:Bl,isRectAreaLight:!0,copy:function(e){return El.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=El.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),Object.assign(Gl.prototype,{isSphericalHarmonics3:!0,set:function(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*n),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],i*n*1.092548),t.addScaledVector(s[5],n*r*1.092548),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],i*r*1.092548),t.addScaledVector(s[8],.546274*(i*i-n*n)),t},getIrradianceAt:function(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*n),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*i),t.addScaledVector(s[4],.858086*i*n),t.addScaledVector(s[5],.858086*n*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*i*r),t.addScaledVector(s[8],.429043*(i*i-n*n)),t},add:function(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this},scale:function(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this},equals:function(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(e,t){void 0===t&&(t=0);const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}}),Object.assign(Gl,{getBasisAt:function(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}),Fl.prototype=Object.assign(Object.create(El.prototype),{constructor:Fl,isLightProbe:!0,copy:function(e){return El.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=El.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),Hl.prototype=Object.assign(Object.create(Za.prototype),{constructor:Hl,load:function(e,t,i,n){const r=this,s=new Qa(r.manager);s.setPath(r.path),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const n=new Da[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new At).setHex(e.sheen)),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const r=e.uniforms[t];switch(n.uniforms[t]={},r.type){case"t":n.uniforms[t].value=i(r.value);break;case"c":n.uniforms[t].value=(new At).setHex(r.value);break;case"v2":n.uniforms[t].value=(new ee).fromArray(r.value);break;case"v3":n.uniforms[t].value=(new de).fromArray(r.value);break;case"v4":n.uniforms[t].value=(new oe).fromArray(r.value);break;case"m3":n.uniforms[t].value=(new te).fromArray(r.value);case"m4":n.uniforms[t].value=(new be).fromArray(r.value);break;default:n.uniforms[t].value=r.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)n.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new ee).fromArray(t)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new ee).fromArray(e.clearcoatNormalScale)),n},setTextures:function(e){return this.textures=e,this}});const jl=function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(e){return t}},zl=function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)};function Vl(){ri.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function Wl(e,t,i,n){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Gt.call(this,e,t,i),this.meshPerAttribute=n||1}function Xl(e){Za.call(this,e)}Vl.prototype=Object.assign(Object.create(ri.prototype),{constructor:Vl,isInstancedBufferGeometry:!0,copy:function(e){return ri.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=ri.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),Wl.prototype=Object.assign(Object.create(Gt.prototype),{constructor:Wl,isInstancedBufferAttribute:!0,copy:function(e){return Gt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Gt.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),Xl.prototype=Object.assign(Object.create(Za.prototype),{constructor:Xl,load:function(e,t,i,n){const r=this,s=new Qa(r.manager);s.setPath(r.path),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t={},i={};function n(e,n){if(void 0!==t[n])return t[n];const r=e.interleavedBuffers[n],s=function(e,t){if(void 0!==i[t])return i[t];const n=e.arrayBuffers,r=n[t],s=new Uint32Array(r).buffer;return i[t]=s,s}(e,r.buffer),o=new ns(new ql[r.type](s),r.stride);return o.uuid=r.uuid,t[n]=o,o}const r=e.isInstancedBufferGeometry?new Vl:new ri,s=e.data.index;if(void 0!==s){const e=new ql[s.type](s.array);r.setIndex(new Gt(e,1))}const o=e.data.attributes;for(const t in o){const i=o[t];let s;if(i.isInterleavedBufferAttribute){s=new ss(n(e.data,i.data),i.itemSize,i.offset,i.normalized)}else{const e=new ql[i.type](i.array);s=new(i.isInstancedBufferAttribute?Wl:Gt)(e,i.itemSize,i.normalized)}void 0!==i.name&&(s.name=i.name),r.setAttribute(t,s)}const a=e.data.morphAttributes;if(a)for(const t in a){const i=a[t],s=[];for(let t=0,r=i.length;t<r;t++){const r=i[t];let o;if(r.isInterleavedBufferAttribute){o=new ss(n(e.data,r.data),r.itemSize,r.offset,r.normalized)}else{o=new Gt(new ql[r.type](r.array),r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),s.push(o)}r.morphAttributes[t]=s}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];r.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new de;void 0!==c.center&&e.fromArray(c.center),r.boundingSphere=new it(e,c.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}});const ql={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Yl(e){Za.call(this,e)}Yl.prototype=Object.assign(Object.create(Za.prototype),{constructor:Yl,load:function(e,t,i,n){const r=this,s=""===this.path?zl(e):this.path;this.resourcePath=this.resourcePath||s;const o=new Qa(r.manager);o.setPath(this.path),o.load(e,(function(i){let s=null;try{s=JSON.parse(i)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const o=s.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(s,t):console.error("THREE.ObjectLoader: Can't load "+e)}),i,n)},parse:function(e,t){const i=this.parseShape(e.shapes),n=this.parseGeometries(e.geometries,i),r=this.parseImages(e.images,(function(){void 0!==t&&t(a)})),s=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,s),a=this.parseObject(e.object,n,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(a),a},parseShape:function(e){const t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){const n=(new Tl).fromJSON(e[i]);t[n.uuid]=n}return t},parseGeometries:function(e,t){const i={};let n;if(void 0!==e){const r=new Xl;for(let s=0,o=e.length;s<o;s++){let o;const a=e[s];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new ya[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new ya[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new ya[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new ya[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new ya[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new ya[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new ya[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new ya[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new ya[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new ya[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new ya[a.type]((new Ml[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new ya[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new ya[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":n=[];for(let e=0,i=a.shapes.length;e<i;e++){const i=t[a.shapes[e]];n.push(i)}o=new ya[a.type](n,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":n=[];for(let e=0,i=a.shapes.length;e<i;e++){const i=t[a.shapes[e]];n.push(i)}const e=a.options.extrudePath;void 0!==e&&(a.options.extrudePath=(new Ml[e.type]).fromJSON(e)),o=new ya[a.type](n,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),!0===o.isBufferGeometry&&void 0!==a.userData&&(o.userData=a.userData),i[a.uuid]=o}}return i},parseMaterials:function(e,t){const i={},n={};if(void 0!==e){const r=new Hl;r.setTextures(t);for(let t=0,s=e.length;t<s;t++){const s=e[t];if("MultiMaterial"===s.type){const e=[];for(let t=0;t<s.materials.length;t++){const n=s.materials[t];void 0===i[n.uuid]&&(i[n.uuid]=r.parse(n)),e.push(i[n.uuid])}n[s.uuid]=e}else void 0===i[s.uuid]&&(i[s.uuid]=r.parse(s)),n[s.uuid]=i[s.uuid]}}return n},parseAnimations:function(e){const t=[];for(let i=0;i<e.length;i++){const n=e[i],r=Va.parse(n);void 0!==n.uuid&&(r.uuid=n.uuid),t.push(r)}return t},parseImages:function(e,t){const i=this,n={};let r;function s(e){return i.manager.itemStart(e),r.load(e,(function(){i.manager.itemEnd(e)}),void 0,(function(){i.manager.itemError(e),i.manager.itemEnd(e)}))}if(void 0!==e&&e.length>0){const o=new qa(t);r=new tl(o),r.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const r=e[t],o=r.url;if(Array.isArray(o)){n[r.uuid]=[];for(let e=0,t=o.length;e<t;e++){const t=o[e],a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:i.resourcePath+t;n[r.uuid].push(s(a))}}else{const e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r.url)?r.url:i.resourcePath+r.url;n[r.uuid]=s(e)}}}return n},parseTextures:function(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const n={};if(void 0!==e)for(let r=0,s=e.length;r<s;r++){const s=e[r];let o;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),o=Array.isArray(t[s.image])?new dn(t[s.image]):new se(t[s.image]),o.needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=i(s.mapping,Zl)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=i(s.wrap[0],Kl),o.wrapT=i(s.wrap[1],Kl)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=i(s.minFilter,Ql)),void 0!==s.magFilter&&(o.magFilter=i(s.magFilter,Ql)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),n[s.uuid]=o}return n},parseObject:function(e,t,i){let n,r,s;function o(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function a(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];void 0===i[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),t.push(i[r])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}switch(e.type){case"Scene":n=new Ge,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new At(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new is(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new ts(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new ki(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new Ol(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new kl(e.color,e.intensity);break;case"DirectionalLight":n=new Nl(e.color,e.intensity);break;case"PointLight":n=new Il(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new Bl(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new Ll(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new Pl(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new Fl).fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":r=o(e.geometry),s=a(e.material),n=new Mi(r,s);break;case"InstancedMesh":r=o(e.geometry),s=a(e.material);const t=e.count,i=e.instanceMatrix;n=new Os(r,s,t),n.instanceMatrix=new Gt(new Float32Array(i.array),16);break;case"LOD":n=new Ss;break;case"Line":n=new Hs(o(e.geometry),a(e.material),e.mode);break;case"LineLoop":n=new Ws(o(e.geometry),a(e.material));break;case"LineSegments":n=new Vs(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":n=new Qs(o(e.geometry),a(e.material));break;case"Sprite":n=new bs(a(e.material));break;case"Group":n=new Zr;break;default:n=new Be}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){const r=e.children;for(let e=0;e<r.length;e++)n.add(this.parseObject(r[e],t,i))}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const i=t[e],r=n.getObjectByProperty("uuid",i.object);void 0!==r&&n.addLevel(r,i.distance)}}return n}});const Zl={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:m,CubeUVRefractionMapping:307},Kl={RepeatWrapping:f,ClampToEdgeWrapping:g,MirroredRepeatWrapping:v},Ql={NearestFilter:x,NearestMipmapNearestFilter:y,NearestMipmapLinearFilter:b,LinearFilter:w,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:M};function Jl(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Za.call(this,e),this.options={premultiplyAlpha:"none"}}function $l(){this.type="ShapePath",this.color=new At,this.subPaths=[],this.currentPath=null}function ec(e){this.type="Font",this.data=e}function tc(e,t,i,n,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const o=new $l;let a,l,c,h,u,d,p,m;if(s.o){const e=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=e.length;r<s;){switch(e[r++]){case"m":a=e[r++]*t+i,l=e[r++]*t+n,o.moveTo(a,l);break;case"l":a=e[r++]*t+i,l=e[r++]*t+n,o.lineTo(a,l);break;case"q":c=e[r++]*t+i,h=e[r++]*t+n,u=e[r++]*t+i,d=e[r++]*t+n,o.quadraticCurveTo(u,d,c,h);break;case"b":c=e[r++]*t+i,h=e[r++]*t+n,u=e[r++]*t+i,d=e[r++]*t+n,p=e[r++]*t+i,m=e[r++]*t+n,o.bezierCurveTo(u,d,p,m,c,h)}}}return{offsetX:s.ha*t,path:o}}function ic(e){Za.call(this,e)}let nc;Jl.prototype=Object.assign(Object.create(Za.prototype),{constructor:Jl,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Xa.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;fetch(e).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,r.options)})).then((function(i){Xa.add(e,i),t&&t(i),r.manager.itemEnd(e)})).catch((function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)})),r.manager.itemStart(e)}}),Object.assign($l.prototype,{moveTo:function(e,t){return this.currentPath=new Cl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this},bezierCurveTo:function(e,t,i,n,r,s){return this.currentPath.bezierCurveTo(e,t,i,n,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function i(e){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i],r=new Tl;r.curves=n.curves,t.push(r)}return t}function n(e,t){const i=t.length;let n=!1;for(let r=i-1,s=0;s<i;r=s++){let i=t[r],o=t[s],a=o.x-i.x,l=o.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=t[s],a=-a,o=t[r],l=-l),e.y<i.y||e.y>o.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{const t=l*(e.x-i.x)-a*(e.y-i.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==i.y)continue;if(o.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=o.x)return!0}}return n}const r=Yo.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===t)return i(s);let o,a,l,c=[];if(1===s.length)return a=s[0],l=new Tl,l.curves=a.curves,c.push(l),c;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],d=[];let p,m,f=[],g=0;d[g]=void 0,f[g]=[];for(let t=0,i=s.length;t<i;t++)a=s[t],p=a.getPoints(),o=r(p),o=e?!o:o,o?(!h&&d[g]&&g++,d[g]={s:new Tl,p:p},d[g].s.curves=a.curves,h&&g++,f[g]=[]):f[g].push({h:a,p:p[0]});if(!d[0])return i(s);if(d.length>1){let e=!1;const t=[];for(let e=0,t=d.length;e<t;e++)u[e]=[];for(let i=0,r=d.length;i<r;i++){const r=f[i];for(let s=0;s<r.length;s++){const o=r[s];let a=!0;for(let r=0;r<d.length;r++)n(o.p,d[r].p)&&(i!==r&&t.push({froms:i,tos:r,hole:s}),a?(a=!1,u[r].push(o)):e=!0);a&&u[i].push(o)}}t.length>0&&(e||(f=u))}for(let e=0,t=d.length;e<t;e++){l=d[e].s,c.push(l),m=f[e];for(let e=0,t=m.length;e<t;e++)l.holes.push(m[e].h)}return c}}),Object.assign(ec.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);const i=[],n=function(e,t,i){const n=Array.from?Array.from(e):String(e).split(""),r=t/i.resolution,s=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,o=[];let a=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)a=0,l-=s;else{const e=tc(t,r,a,l,i);a+=e.offsetX,o.push(e.path)}}return o}(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(i,n[e].toShapes());return i}}),ic.prototype=Object.assign(Object.create(Za.prototype),{constructor:ic,load:function(e,t,i,n){const r=this,s=new Qa(this.manager);s.setPath(this.path),s.load(e,(function(e){let i;try{i=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(e.substring(65,e.length-2))}const n=r.parse(i);t&&t(n)}),i,n)},parse:function(e){return new ec(e)}});const rc=function(){return void 0===nc&&(nc=new(window.AudioContext||window.webkitAudioContext)),nc};function sc(e){Za.call(this,e)}function oc(e,t,i){Fl.call(this,void 0,i);const n=(new At).set(e),r=(new At).set(t),s=new de(n.r,n.g,n.b),o=new de(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}function ac(e,t){Fl.call(this,void 0,t);const i=(new At).set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}sc.prototype=Object.assign(Object.create(Za.prototype),{constructor:sc,load:function(e,t,i,n){const r=this,s=new Qa(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.load(e,(function(i){try{const e=i.slice(0);rc().decodeAudioData(e,(function(e){t(e)}))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)}}),oc.prototype=Object.assign(Object.create(Fl.prototype),{constructor:oc,isHemisphereLightProbe:!0,copy:function(e){return Fl.prototype.copy.call(this,e),this},toJSON:function(e){return Fl.prototype.toJSON.call(this,e)}}),ac.prototype=Object.assign(Object.create(Fl.prototype),{constructor:ac,isAmbientLightProbe:!0,copy:function(e){return Fl.prototype.copy.call(this,e),this},toJSON:function(e){return Fl.prototype.toJSON.call(this,e)}});const lc=new be,cc=new be;function hc(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ki,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ki,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),n=t.eyeSep/2,r=n*t.near/t.focus,s=t.near*Math.tan($.DEG2RAD*t.fov*.5)/t.zoom;let o,a;cc.elements[12]=-n,lc.elements[12]=n,o=-s*t.aspect+r,a=s*t.aspect+r,i.elements[0]=2*t.near/(a-o),i.elements[8]=(a+o)/(a-o),this.cameraL.projectionMatrix.copy(i),o=-s*t.aspect-r,a=s*t.aspect-r,i.elements[0]=2*t.near/(a-o),i.elements[8]=(a+o)/(a-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(cc),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(lc)}}),Object.assign(hc.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});const uc=new de,dc=new ce,pc=new de,mc=new de;function fc(){Be.call(this),this.type="AudioListener",this.context=rc(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new hc}function gc(e){Be.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}fc.prototype=Object.assign(Object.create(Be.prototype),{constructor:fc,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){Be.prototype.updateMatrixWorld.call(this,e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(uc,dc,pc),mc.set(0,0,-1).applyQuaternion(dc),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(uc.x,e),t.positionY.linearRampToValueAtTime(uc.y,e),t.positionZ.linearRampToValueAtTime(uc.z,e),t.forwardX.linearRampToValueAtTime(mc.x,e),t.forwardY.linearRampToValueAtTime(mc.y,e),t.forwardZ.linearRampToValueAtTime(mc.z,e),t.upX.linearRampToValueAtTime(i.x,e),t.upY.linearRampToValueAtTime(i.y,e),t.upZ.linearRampToValueAtTime(i.z,e)}else t.setPosition(uc.x,uc.y,uc.z),t.setOrientation(mc.x,mc.y,mc.z,i.x,i.y,i.z)}}),gc.prototype=Object.assign(Object.create(Be.prototype),{constructor:gc,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});const vc=new de,xc=new ce,yc=new de,bc=new de;function wc(e){gc.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function _c(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function Mc(e,t,i){let n,r,s;switch(this.binding=e,this.valueSize=i,t){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}wc.prototype=Object.assign(Object.create(gc.prototype),{constructor:wc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this},updateMatrixWorld:function(e){if(Be.prototype.updateMatrixWorld.call(this,e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(vc,xc,yc),bc.set(0,0,1).applyQuaternion(xc);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(vc.x,e),t.positionY.linearRampToValueAtTime(vc.y,e),t.positionZ.linearRampToValueAtTime(vc.z,e),t.orientationX.linearRampToValueAtTime(bc.x,e),t.orientationY.linearRampToValueAtTime(bc.y,e),t.orientationZ.linearRampToValueAtTime(bc.z,e)}else t.setPosition(vc.x,vc.y,vc.z),t.setOrientation(bc.x,bc.y,bc.z)}}),Object.assign(_c.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}),Object.assign(Mc.prototype,{accumulate:function(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let s=this.cumulativeWeight;if(0===s){for(let e=0;e!==n;++e)i[r+e]=i[e];s=t}else{s+=t;const e=t/s;this._mixBufferRegion(i,r,0,e,n)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const e=t*this._origIndex;this._mixBufferRegion(i,n,e,1-r,t)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let e=t,r=t+t;e!==r;++e)if(i[e]!==i[e+t]){o.setValue(i,n);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let e=i,r=n;e!==r;++e)t[e]=t[n+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]},_select:function(e,t,i,n,r){if(n>=.5)for(let n=0;n!==r;++n)e[t+n]=e[i+n]},_slerp:function(e,t,i,n){ce.slerpFlat(e,t,e,t,e,i,n)},_slerpAdditive:function(e,t,i,n,r){const s=this._workIndex*r;ce.multiplyQuaternionsFlat(e,s,e,t,e,i),ce.slerpFlat(e,t,e,t,e,s,n)},_lerp:function(e,t,i,n,r){const s=1-n;for(let o=0;o!==r;++o){const r=t+o;e[r]=e[r]*s+e[i+o]*n}},_lerpAdditive:function(e,t,i,n,r){for(let s=0;s!==r;++s){const r=t+s;e[r]=e[r]+e[i+s]*n}}});const Sc="\\[\\]\\.:\\/",Cc=new RegExp("["+Sc+"]","g"),Tc="[^"+Sc+"]",Ec="[^"+Sc.replace("\\.","")+"]",Pc=/((?:WC+[\/:])*)/.source.replace("WC",Tc),Ac=/(WCOD+)?/.source.replace("WCOD",Ec),Dc=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Tc),Lc=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Tc),Rc=new RegExp("^"+Pc+Ac+Dc+Lc+"$"),Ic=["material","materials","bones"];function Oc(e,t,i){const n=i||Uc.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function Uc(e,t,i){this.path=t,this.parsedPath=i||Uc.parseTrackName(t),this.node=Uc.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function Nc(e,t,i,n){this._mixer=e,this._clip=t,this._localRoot=i||null,this.blendMode=n||t.blendMode;const r=t.tracks,s=r.length,o=new Array(s),a={endingStart:k,endingEnd:k};for(let e=0;e!==s;++e){const t=r[e].createInterpolant(null);o[e]=t,t.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function kc(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Bc(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function Gc(e,t,i){ns.call(this,e,t),this.meshPerAttribute=i||1}function Fc(e,t,i,n){this.ray=new ht(e,t),this.near=i||0,this.far=n||1/0,this.camera=null,this.layers=new Se,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Hc(e,t){return e.distance-t.distance}function jc(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){const n=e.children;for(let e=0,r=n.length;e<r;e++)jc(n[e],t,i,!0)}}Object.assign(Oc.prototype,{getValue:function(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}),Object.assign(Uc,{Composite:Oc,create:function(e,t,i){return e&&e.isAnimationObjectGroup?new Uc.Composite(e,t,i):new Uc(e,t,i)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(Cc,"")},parseTrackName:function(e){const t=Rc.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=i.nodeName.substring(n+1);-1!==Ic.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){const i=function(e){for(let n=0;n<e.length;n++){const r=e[n];if(r.name===t||r.uuid===t)return r;const s=i(r.children);if(s)return s}return null},n=i(e.children);if(n)return n}return null}}),Object.assign(Uc.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=Uc.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=t.objectIndex;switch(i){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;default:if(void 0===e[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[i]}if(void 0!==n){if(void 0===e[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[n]}}const s=e[n];if(void 0===s){const i=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Uc.prototype,{_getValue_unbound:Uc.prototype.getValue,_setValue_unbound:Uc.prototype.setValue}),Object.assign(function(){this.uuid=$.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=t[u];if(void 0===d){d=a++,t[u]=d,e.push(h);for(let e=0,t=s;e!==t;++e)r[e].push(new Uc(h,i[e],n[e]))}else if(d<l){o=e[d];const a=--l,c=e[a];t[c.uuid]=d,e[d]=c,t[u]=a,e[a]=h;for(let e=0,t=s;e!==t;++e){const t=r[e],s=t[a];let o=t[d];t[d]=s,void 0===o&&(o=new Uc(h,i[e],n[e])),t[a]=o}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s],a=o.uuid,l=t[a];if(void 0!==l&&l>=r){const s=r++,c=e[s];t[c.uuid]=l,e[l]=c,t[a]=s,e[s]=o;for(let e=0,t=n;e!==t;++e){const t=i[e],n=t[s],r=t[l];t[l]=n,t[s]=r}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o].uuid,l=t[a];if(void 0!==l)if(delete t[a],l<r){const o=--r,a=e[o],c=--s,h=e[c];t[a.uuid]=l,e[l]=a,t[h.uuid]=o,e[o]=h,e.pop();for(let e=0,t=n;e!==t;++e){const t=i[e],n=t[o],r=t[c];t[l]=n,t[o]=r,t.pop()}}else{const r=--s,o=e[r];t[o.uuid]=l,e[l]=o,e.pop();for(let e=0,t=n;e!==t;++e){const t=i[e];t[l]=t[r],t.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){let i=this._bindingsIndicesByPath,n=i[e],r=this._bindings;if(void 0!==n)return r[n];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,h=new Array(l);n=r.length,i[e]=n,s.push(e),o.push(t),r.push(h);for(let i=c,n=a.length;i!==n;++i){const n=a[i];h[i]=new Uc(n,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){const n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o];t[e[o]]=i,s[i]=a,s.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}}),Object.assign(Nc.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const i=this._clip.duration,n=e._clip.duration,r=n/i,s=i/n;e.warp(1,r,t),this.warp(s,1,t)}return this},crossFadeTo:function(e,t,i){return e.crossFadeFrom(this,t,i)},stopFading:function(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,i){const n=this._mixer,r=n.time,s=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,a[1]=r+i,l[0]=e/s,l[1]=t/s,this},stopWarping:function(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,i,n){if(!this.enabled)return void this._updateWeight(e);const r=this._startTime;if(null!==r){const n=(e-r)*i;if(n<0||0===i)return;this._startTime=null,t=i*n}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const e=this._interpolants,t=this._propertyBindings;if(2501===this.blendMode)for(let i=0,n=e.length;i!==n;++i)e[i].evaluate(s),t[i].accumulateAdditive(o);else for(let i=0,r=e.length;i!==r;++i)e[i].evaluate(s),t[i].accumulate(n,o)}},_updateWeight:function(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const s=2202===i;if(0===e)return-1===r||!s||1&~r?n:t-n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0){const i=Math.floor(n/t);n-=t*i,r+=Math.abs(i);const o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){const t=e<0;this._setEndings(t,!t,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(s&&!(1&~r))return t-n}return n},_setEndings:function(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=B,n.endingEnd=B):(n.endingStart=e?this.zeroSlopeAtStart?B:k:G,n.endingEnd=t?this.zeroSlopeAtEnd?B:k:G)},_scheduleFading:function(e,t,i){const n=this._mixer,r=n.time;let s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=r,a[0]=t,o[1]=r+e,a[1]=i,this}}),kc.prototype=Object.assign(Object.create(Q.prototype),{constructor:kc,_bindAction:function(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,s=e._propertyBindings,o=e._interpolants,a=i.uuid,l=this._bindingsByRootAndName;let c=l[a];void 0===c&&(c={},l[a]=c);for(let e=0;e!==r;++e){const r=n[e],l=r.name;let h=c[l];if(void 0!==h)s[e]=h;else{if(h=s[e],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,l));continue}const n=t&&t._propertyBindings[e].binding.parsedPath;h=new Mc(Uc.create(i,l,n),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,l),s[e]=h}o[e].resultBuffer=h.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,i){const n=this._actions,r=this._actionsByClip;let s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const t=s.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),s.actionByRoot[i]=e},_removeInactiveAction:function(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),e._byClipCacheIndex=null;delete o.actionByRoot[(e._localRoot||this._root).uuid],0===a.length&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_takeBackAction:function(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_addInactiveBinding:function(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let s=n[t];void 0===s&&(s={},n[t]=s),s[i]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,o=s[n],a=t[t.length-1],l=e._cacheIndex;a._cacheIndex=l,t[l]=a,t.pop(),delete o[r],0===Object.keys(o).length&&delete s[n]},_lendBinding:function(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_takeBackBinding:function(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return void 0===i&&(i=new Oa(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=t,e[t]=i),i},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,i){const n=t||this._root,r=n.uuid;let s="string"==typeof e?Va.findByName(n,e):e;const o=null!==s?s.uuid:e;let a=this._actionsByClip[o],l=null;if(void 0===i&&(i=null!==s?s.blendMode:F),void 0!==a){const e=a.actionByRoot[r];if(void 0!==e&&e.blendMode===i)return e;l=a.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new Nc(this,s,t,i);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(e,t){const i=t||this._root,n=i.uuid,r="string"==typeof e?Va.findByName(i,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return void 0!==o&&o.actionByRoot[n]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let o=0;o!==i;++o){t[o]._update(n,e,r,s)}const o=this._bindings,a=this._nActiveBindings;for(let e=0;e!==a;++e)o[e].apply(s);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const e=r.knownActions;for(let i=0,n=e.length;i!==n;++i){const n=e[i];this._deactivateAction(n);const r=n._cacheIndex,s=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,s._cacheIndex=r,t[r]=s,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}},uncacheRoot:function(e){const t=e.uuid,i=this._actionsByClip;for(const e in i){const n=i[e].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const e in n){const t=n[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),Bc.prototype.clone=function(){return new Bc(void 0===this.value.clone?this.value:this.value.clone())},Gc.prototype=Object.assign(Object.create(ns.prototype),{constructor:Gc,isInstancedInterleavedBuffer:!0,copy:function(e){return ns.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=ns.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=ns.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.assign(Fc.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,i){const n=i||[];return jc(e,this,n,t),n.sort(Hc),n},intersectObjects:function(e,t,i){const n=i||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(let i=0,r=e.length;i<r;i++)jc(e[i],this,n,t);return n.sort(Hc),n}}),Object.assign(function(e,t,i){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==i?i:0,this}.prototype,{set:function(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos($.clamp(t/this.radius,-1,1))),this}}),Object.assign(function(e,t,i){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==i?i:0,this}.prototype,{set:function(e,t,i){return this.radius=e,this.theta=t,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}});const zc=new ee;function Vc(e,t){this.min=void 0!==e?e:new ee(1/0,1/0),this.max=void 0!==t?t:new ee(-1/0,-1/0)}Object.assign(Vc.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const i=zc.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new ee),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new ee),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new ee),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new ee),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return zc.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const Wc=new de,Xc=new de;function qc(e,t){this.start=void 0!==e?e:new de,this.end=void 0!==t?t:new de}function Yc(e){Be.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Object.assign(qc.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new de),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new de),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new de),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){Wc.subVectors(e,this.start),Xc.subVectors(this.end,this.start);const i=Xc.dot(Xc);let n=Xc.dot(Wc)/i;return t&&(n=$.clamp(n,0,1)),n},closestPointToPoint:function(e,t,i){const n=this.closestPointToPointParameter(e,t);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new de),this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),Yc.prototype=Object.create(Be.prototype),Yc.prototype.constructor=Yc,Yc.prototype.isImmediateRenderObject=!0;const Zc=new de;function Kc(e,t){Be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const i=new ri,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,i=32;e<i;e++,t++){const r=e/i*Math.PI*2,s=t/i*Math.PI*2;n.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}i.setAttribute("position",new qt(n,3));const r=new Us({fog:!1,toneMapped:!1});this.cone=new Vs(i,r),this.add(this.cone),this.update()}Kc.prototype=Object.create(Be.prototype),Kc.prototype.constructor=Kc,Kc.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Kc.prototype.update=function(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Zc.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Zc),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};const Qc=new de,Jc=new be,$c=new be;function eh(e){const t=[];e&&e.isBone&&t.push(e);for(let i=0;i<e.children.length;i++)t.push.apply(t,eh(e.children[i]));return t}function th(e){const t=eh(e),i=new ri,n=[],r=[],s=new At(0,0,1),o=new At(0,1,0);for(let e=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(o.r,o.g,o.b))}i.setAttribute("position",new qt(n,3)),i.setAttribute("color",new qt(r,3));const a=new Us({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});Vs.call(this,i,a),this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}function ih(e,t,i){this.light=e,this.light.updateMatrixWorld(),this.color=i;const n=new ra(t,4,2),r=new Nt({wireframe:!0,fog:!1,toneMapped:!1});Mi.call(this,n,r),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}th.prototype=Object.create(Vs.prototype),th.prototype.constructor=th,th.prototype.isSkeletonHelper=!0,th.prototype.updateMatrixWorld=function(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");$c.getInverse(this.root.matrixWorld);for(let e=0,i=0;e<t.length;e++){const r=t[e];r.parent&&r.parent.isBone&&(Jc.multiplyMatrices($c,r.matrixWorld),Qc.setFromMatrixPosition(Jc),n.setXYZ(i,Qc.x,Qc.y,Qc.z),Jc.multiplyMatrices($c,r.parent.matrixWorld),Qc.setFromMatrixPosition(Jc),n.setXYZ(i+1,Qc.x,Qc.y,Qc.z),i+=2)}i.getAttribute("position").needsUpdate=!0,Be.prototype.updateMatrixWorld.call(this,e)},ih.prototype=Object.create(Mi.prototype),ih.prototype.constructor=ih,ih.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},ih.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};const nh=new de,rh=new At,sh=new At;function oh(e,t,i){Be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const n=new uo(t);n.rotateY(.5*Math.PI),this.material=new Nt({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),s=new Float32Array(3*r.count);n.setAttribute("color",new Gt(s,3)),this.add(new Mi(n,this.material)),this.update()}function ah(e,t,i,n){e=e||10,t=t||10,i=new At(void 0!==i?i:4473924),n=new At(void 0!==n?n:8947848);const r=t/2,s=e/t,o=e/2,a=[],l=[];for(let e=0,c=0,h=-o;e<=t;e++,h+=s){a.push(-o,0,h,o,0,h),a.push(h,0,-o,h,0,o);const t=e===r?i:n;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new ri;c.setAttribute("position",new qt(a,3)),c.setAttribute("color",new qt(l,3));const h=new Us({vertexColors:!0,toneMapped:!1});Vs.call(this,c,h),this.type="GridHelper"}function lh(e,t,i,n,r,s){e=e||10,t=t||16,i=i||8,n=n||64,r=new At(void 0!==r?r:4473924),s=new At(void 0!==s?s:8947848);const o=[],a=[];for(let i=0;i<=t;i++){const n=i/t*(2*Math.PI),l=Math.sin(n)*e,c=Math.cos(n)*e;o.push(0,0,0),o.push(l,0,c);const h=1&i?r:s;a.push(h.r,h.g,h.b),a.push(h.r,h.g,h.b)}for(let t=0;t<=i;t++){const l=1&t?r:s,c=e-e/i*t;for(let e=0;e<n;e++){let t=e/n*(2*Math.PI),i=Math.sin(t)*c,r=Math.cos(t)*c;o.push(i,0,r),a.push(l.r,l.g,l.b),t=(e+1)/n*(2*Math.PI),i=Math.sin(t)*c,r=Math.cos(t)*c,o.push(i,0,r),a.push(l.r,l.g,l.b)}}const l=new ri;l.setAttribute("position",new qt(o,3)),l.setAttribute("color",new qt(a,3));const c=new Us({vertexColors:!0,toneMapped:!1});Vs.call(this,l,c),this.type="PolarGridHelper"}oh.prototype=Object.create(Be.prototype),oh.prototype.constructor=oh,oh.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},oh.prototype.update=function(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");rh.copy(this.light.color),sh.copy(this.light.groundColor);for(let e=0,i=t.count;e<i;e++){const n=e<i/2?rh:sh;t.setXYZ(e,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(nh.setFromMatrixPosition(this.light.matrixWorld).negate())},ah.prototype=Object.assign(Object.create(Vs.prototype),{constructor:ah,copy:function(e){return Vs.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return(new this.constructor).copy(this)}}),lh.prototype=Object.create(Vs.prototype),lh.prototype.constructor=lh;const ch=new de,hh=new de,uh=new de;function dh(e,t,i){Be.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let n=new ri;n.setAttribute("position",new qt([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Us({fog:!1,toneMapped:!1});this.lightPlane=new Hs(n,r),this.add(this.lightPlane),n=new ri,n.setAttribute("position",new qt([0,0,0,0,0,1],3)),this.targetLine=new Hs(n,r),this.add(this.targetLine),this.update()}dh.prototype=Object.create(Be.prototype),dh.prototype.constructor=dh,dh.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},dh.prototype.update=function(){ch.setFromMatrixPosition(this.light.matrixWorld),hh.setFromMatrixPosition(this.light.target.matrixWorld),uh.subVectors(hh,ch),this.lightPlane.lookAt(hh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hh),this.targetLine.scale.z=uh.length()};const ph=new de,mh=new Ni;function fh(e){const t=new ri,i=new Us({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={},o=new At(16755200),a=new At(16711680),l=new At(43775),c=new At(16777215),h=new At(3355443);function u(e,t,i){d(e,i),d(t,i)}function d(e,t){n.push(0,0,0),r.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",a),u("p","n2",a),u("p","n3",a),u("p","n4",a),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.setAttribute("position",new qt(n,3)),t.setAttribute("color",new qt(r,3)),Vs.call(this,t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function gh(e,t,i,n,r,s,o){ph.set(r,s,o).unproject(n);const a=t[e];if(void 0!==a){const e=i.getAttribute("position");for(let t=0,i=a.length;t<i;t++)e.setXYZ(a[t],ph.x,ph.y,ph.z)}}fh.prototype=Object.create(Vs.prototype),fh.prototype.constructor=fh,fh.prototype.update=function(){const e=this.geometry,t=this.pointMap;mh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),gh("c",t,e,mh,0,0,-1),gh("t",t,e,mh,0,0,1),gh("n1",t,e,mh,-1,-1,-1),gh("n2",t,e,mh,1,-1,-1),gh("n3",t,e,mh,-1,1,-1),gh("n4",t,e,mh,1,1,-1),gh("f1",t,e,mh,-1,-1,1),gh("f2",t,e,mh,1,-1,1),gh("f3",t,e,mh,-1,1,1),gh("f4",t,e,mh,1,1,1),gh("u1",t,e,mh,.7,1.1,-1),gh("u2",t,e,mh,-.7,1.1,-1),gh("u3",t,e,mh,0,2,-1),gh("cf1",t,e,mh,-1,0,1),gh("cf2",t,e,mh,1,0,1),gh("cf3",t,e,mh,0,-1,1),gh("cf4",t,e,mh,0,1,1),gh("cn1",t,e,mh,-1,0,-1),gh("cn2",t,e,mh,1,0,-1),gh("cn3",t,e,mh,0,-1,-1),gh("cn4",t,e,mh,0,1,-1),e.getAttribute("position").needsUpdate=!0};const vh=new $e;function xh(e,t){this.object=e,void 0===t&&(t=16776960);const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new ri;r.setIndex(new Gt(i,1)),r.setAttribute("position",new Gt(n,3)),Vs.call(this,r,new Us({color:t,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function yh(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new ri;n.setIndex(new Gt(i,1)),n.setAttribute("position",new qt([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),Vs.call(this,n,new Us({color:t,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function bh(e,t,i){this.plane=e,this.size=void 0===t?1:t;const n=void 0!==i?i:16776960,r=new ri;r.setAttribute("position",new qt([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),Hs.call(this,r,new Us({color:n,toneMapped:!1})),this.type="PlaneHelper";const s=new ri;s.setAttribute("position",new qt([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Mi(s,new Nt({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}xh.prototype=Object.create(Vs.prototype),xh.prototype.constructor=xh,xh.prototype.update=function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&vh.setFromObject(this.object),vh.isEmpty())return;const t=vh.min,i=vh.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()},xh.prototype.setFromObject=function(e){return this.object=e,this.update(),this},xh.prototype.copy=function(e){return Vs.prototype.copy.call(this,e),this.object=e.object,this},xh.prototype.clone=function(){return(new this.constructor).copy(this)},yh.prototype=Object.create(Vs.prototype),yh.prototype.constructor=yh,yh.prototype.updateMatrixWorld=function(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),Be.prototype.updateMatrixWorld.call(this,e))},bh.prototype=Object.create(Hs.prototype),bh.prototype.constructor=bh,bh.prototype.updateMatrixWorld=function(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?1:0,this.lookAt(this.plane.normal),Be.prototype.updateMatrixWorld.call(this,e)};const wh=new de;let _h,Mh;function Sh(e,t,i,n,r,s){Be.call(this),this.type="ArrowHelper",void 0===e&&(e=new de(0,0,1)),void 0===t&&(t=new de(0,0,0)),void 0===i&&(i=1),void 0===n&&(n=16776960),void 0===r&&(r=.2*i),void 0===s&&(s=.2*r),void 0===_h&&(_h=new ri,_h.setAttribute("position",new qt([0,0,0,0,1,0],3)),Mh=new ma(0,.5,1,5,1),Mh.translate(0,-.5,0)),this.position.copy(t),this.line=new Hs(_h,new Us({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mi(Mh,new Nt({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,s)}function Ch(e){const t=[0,0,0,e=e||1,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=new ri;i.setAttribute("position",new qt(t,3)),i.setAttribute("color",new qt([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const n=new Us({vertexColors:!0,toneMapped:!1});Vs.call(this,i,n),this.type="AxesHelper"}Sh.prototype=Object.create(Be.prototype),Sh.prototype.constructor=Sh,Sh.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{wh.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(wh,t)}},Sh.prototype.setLength=function(e,t,i){void 0===t&&(t=.2*e),void 0===i&&(i=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()},Sh.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},Sh.prototype.copy=function(e){return Be.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},Sh.prototype.clone=function(){return(new this.constructor).copy(this)},Ch.prototype=Object.create(Vs.prototype),Ch.prototype.constructor=Ch;const Th=Math.pow(2,8),Eh=[.125,.215,.35,.446,.526,.582],Ph=5+Eh.length,Ah=20,Dh={[H]:0,[j]:1,[V]:2,[W]:3,[X]:4,[q]:5,[z]:6},Lh=new Ol,{_lodPlanes:Rh,_sizeLods:Ih,_sigmas:Oh}=function(){const e=[],t=[],i=[];let n=8;for(let r=0;r<Ph;r++){const s=Math.pow(2,n);t.push(s);let o=1/s;r>4?o=Eh[r-8+4-1]:0==r&&(o=0),i.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,m=2,f=1,g=new Float32Array(p*d*u),v=new Float32Array(m*d*u),x=new Float32Array(f*d*u);for(let e=0;e<u;e++){const t=e%3*2/3-1,i=e>2?0:-1,n=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];g.set(n,p*d*e),v.set(h,m*d*e);const r=[e,e,e,e,e,e];x.set(r,f*d*e)}const y=new ri;y.setAttribute("position",new Gt(g,p)),y.setAttribute("uv",new Gt(v,m)),y.setAttribute("faceIndex",new Gt(x,f)),e.push(y),n>4&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:i}}();let Uh=null;const Nh=(1+Math.sqrt(5))/2,kh=1/Nh,Bh=[new de(1,1,1),new de(-1,1,1),new de(1,1,-1),new de(-1,1,-1),new de(0,Nh,kh),new de(0,Nh,-kh),new de(kh,0,Nh),new de(-kh,0,Nh),new de(Nh,kh,0),new de(-Nh,kh,0)];function Gh(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(e){const t=new Float32Array(e),i=new de(0,1,0);return new wa({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i},inputEncoding:{value:Dh[3e3]},outputEncoding:{value:Dh[3e3]}},vertexShader:Wh(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${Xh()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}(Ah),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}function Fh(e){return void 0!==e&&e.type===S&&(e.encoding===H||e.encoding===j||e.encoding===z)}function Hh(e){const t=new ae(3*Th,3*Th,e);return t.texture.mapping=m,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function jh(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function zh(){return new wa({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new ee(1,1)},inputEncoding:{value:Dh[3e3]},outputEncoding:{value:Dh[3e3]}},vertexShader:Wh(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${Xh()}\n\n#include <common>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv = equirectUv( outputDirection );\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function Vh(){return new wa({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Dh[3e3]},outputEncoding:{value:Dh[3e3]}},vertexShader:Wh(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${Xh()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function Wh(){return"\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\n\n// RH coordinate system; PMREM face-indexing convention\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\t} else if (face == 2.0) {\n\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\t} else if (face == 5.0) {\n\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\t}\n\treturn direction;\n}\n\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"}function Xh(){return"\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"}function qh(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),dl.call(this,e),this.type="catmullrom"}Gh.prototype={constructor:Gh,fromScene:function(e,t=0,i=.1,n=100){Uh=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r},fromEquirectangular:function(e){return this._fromTexture(e)},fromCubemap:function(e){return this._fromTexture(e)},compileCubemapShader:function(){null===this._cubemapShader&&(this._cubemapShader=Vh(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=zh(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Rh.length;e++)Rh[e].dispose()},_cleanup:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Uh),e.scissorTest=!1,jh(e,0,0,e.width,e.height)},_fromTexture:function(e){Uh=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t},_allocateTargets:function(e){const t={magFilter:x,minFilter:x,generateMipmaps:!1,type:S,format:1023,encoding:Fh(e)?e.encoding:V,depthBuffer:!1,stencilBuffer:!1},i=Hh(t);return i.depthBuffer=!e,this._pingPongRenderTarget=Hh(t),i},_compileMaterial:function(e){const t=new Mi(Rh[0],e);this._renderer.compile(t,Lh)},_sceneToCubeUV:function(e,t,i,n){const r=new ki(90,1,t,i),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.outputEncoding,c=a.toneMapping,h=a.getClearColor(),u=a.getClearAlpha();a.toneMapping=0,a.outputEncoding=H;let d=e.background;if(d&&d.isColor){d.convertSRGBToLinear();const t=Math.max(d.r,d.g,d.b),i=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);d=d.multiplyScalar(Math.pow(2,-i));const n=(i+128)/255;a.setClearColor(d,n),e.background=null}for(let t=0;t<6;t++){const i=t%3;0==i?(r.up.set(0,s[t],0),r.lookAt(o[t],0,0)):1==i?(r.up.set(0,0,s[t]),r.lookAt(0,o[t],0)):(r.up.set(0,s[t],0),r.lookAt(0,0,o[t])),jh(n,i*Th,t>2?Th:0,Th,Th),a.setRenderTarget(n),a.render(e,r)}a.toneMapping=c,a.outputEncoding=l,a.setClearColor(h,u)},_textureToCubeUV:function(e,t){const i=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Vh()):null==this._equirectShader&&(this._equirectShader=zh());const n=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Mi(Rh[0],n),s=n.uniforms;s.envMap.value=e,e.isCubeTexture||s.texelSize.value.set(1/e.image.width,1/e.image.height),s.inputEncoding.value=Dh[e.encoding],s.outputEncoding.value=Dh[t.texture.encoding],jh(t,0,0,3*Th,2*Th),i.setRenderTarget(t),i.render(r,Lh)},_applyPMREM:function(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let t=1;t<Ph;t++){const i=Math.sqrt(Oh[t]*Oh[t]-Oh[t-1]*Oh[t-1]),n=Bh[(t-1)%Bh.length];this._blur(e,t-1,t,i,n)}t.autoClear=i},_blur:function(e,t,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)},_halfBlur:function(e,t,i,n,r,s,o){const a=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Mi(Rh[n],l),h=l.uniforms,u=Ih[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):Ah;m>Ah&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<Ah;++e){const t=e/p,i=Math.exp(-t*t/2);f.push(i),0==e?g+=i:e<m&&(g+=2*i)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===s,o&&(h.poleAxis.value=o),h.dTheta.value=d,h.mipInt.value=8-i,h.inputEncoding.value=Dh[e.texture.encoding],h.outputEncoding.value=Dh[e.texture.encoding];const v=Ih[n];jh(t,3*Math.max(0,Th-2*v),(0===n?0:2*Th)+2*v*(n>4?n-8+4:0),3*v,2*v),a.setRenderTarget(t),a.render(c,Lh)}},rl.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(rl.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(Sl.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Di;for(let i=0,n=e.length;i<n;i++){const n=e[i];t.vertices.push(new de(n.x,n.y,n.z||0))}return t}}),Object.assign(Cl.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),Object.create(dl.prototype),Object.create(dl.prototype),qh.prototype=Object.create(dl.prototype),Object.assign(qh.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),ah.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},th.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Za.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),zl(e)}}),Za.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Yl.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Vc.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign($e.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(it.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Vi.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},qc.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign($,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),$.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),$.ceilPowerOfTwo(e)}}),Object.assign(te.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(be.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new de).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,i,n,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,i,r,s)}}),mt.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},ce.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(ht.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Ct.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Ct,{barycoordFromPoint:function(e,t,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ct.getBarycoord(e,t,i,n,r)},normal:function(e,t,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ct.getNormal(e,t,i,n)}}),Object.assign(Tl.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Qo(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ca(this,e)}}),Object.assign(ee.prototype,{fromAttribute:function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(de.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(oe.prototype,{fromAttribute:function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Di.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Be.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Be.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mi.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mi.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(Ss.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Ps.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Cs.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(rl.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),ki.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(El.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Gt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===K},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(K)}}}),Object.assign(Gt.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?K:Z),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ri.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Gt(arguments[1],arguments[2])))},addDrawCall:function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(ri.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Vl.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Fc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(ns.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===K},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(ns.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?K:Z),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Jo.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Bc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Ut.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new At}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(Sa.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Ui.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign($r.prototype,{clearTarget:function(e,t,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties($r.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?j:H}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Vr.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(ae.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(gc.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new sc).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),_c.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Gi.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},ne.crossOrigin=void 0,ne.loadTexture=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new nl;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,i,void 0,n);return t&&(s.mapping=t),s},ne.loadTextureCube=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new il;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,i,void 0,n);return t&&(s.mapping=t),s},ne.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ne.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"118"}}));const Yh=ee,Zh=de,Kh=oe,Qh=0,Jh=1,$h=3;class eu{constructor(e="images/assets/",t){this.assetRoot=e,this.mobile=t,this.pxlTimer=null,this.verboseLoading=!1,this.texLoader=new tl,this.textLoaderArray=[],this.channelFormats=[1021,1028,1030,D,L,1024,R]}get curMS(){return this.pxlTimer.curMS}setDependencies(e){this.pxlTimer=e.pxlTimer}updateUrl(e,t={},i=""){window.history.replaceState?window.history.replaceState(t,i,e):window.history.pushState(t,i,e)}copyRoomUrl(){let e=window.location,t=document.activeElement,i=document.createElement("textarea");i.value=e,document.body.appendChild(i),i.focus(),i.select();let n=!1;try{n=document.execCommand("copy")?"successful":"unsuccessful"}catch(e){}return document.body.removeChild(i),t.focus(),n}checkInt(e){return e%1==0}degToRad(e){return e*(Math.PI/180)}toHundreths(e){if(!e)return 0;if(Number.isInteger(e))return e;{let t=(e+"").split(".");return parseFloat(t[0]+"."+t[1].substr(0,2))}}toTenths(e){if(!e)return 0;if(Number.isInteger(e))return e;{let t=(e+"").split(".");return parseFloat(t[0]+"."+t[1].substr(0,1))}}getDateTime(){let e=new Date;return[(e.getFullYear()+"").padStart(2,"0")+"-"+(e.getMonth()+1+"").padStart(2,"0")+"-"+(e.getDate()+"").padStart(2,"0"),(e.getHours()+"").padStart(2,"0")+":"+(e.getMinutes()+"").padStart(2,"0")+":"+(e.getSeconds()+"").padStart(2,"0")]}cleanStrict(e){let t=document.createElement("div");t.innerHTML=e,t=t.innerText;let i=t.match(/([a-zA-Z0-9])\w+/g);return i&&(t=i.join(" ")),t}cleanBasic(e){let t=document.createElement("div");t.innerHTML=e,t=t.innerText;let i=t.match(/([a-zA-Z0-9\s\w-+()\[\]])+/g);return i&&(t=i.join("")),t}cleanString(e){let t=document.createElement("div");return t.innerHTML=e,t=t.innerText,t}componentToHex(e){return e.toString(16).padStart(2,"0")}rgbToHex(e,t,i){return"#"+this.componentToHex(Math.min(255,Math.max(0,Math.round(e))))+this.componentToHex(Math.min(255,Math.max(0,Math.round(t))))+this.componentToHex(Math.min(255,Math.max(0,Math.round(i))))}hexToRgb(e){let t,i,n;return 3==(e="#"==e[0]?e.substr(1,6):e.substr(0,6)).length?(t=e[0]+e[0],i=e[1]+e[1],n=e[2]+e[2]):(t=e[0]+e[1],i=e[2]+e[3],n=e[4]+e[5]),t=parseInt(t,16),i=parseInt(i,16),n=parseInt(n,16),[t,i,n]}stringToRgb(e,t=null,i=!1){let n=[255,0,0];if(e){let t=e.length,i="";for(let n=0;n<t;++n)i+=e[t-1-n].charCodeAt(0).toString(16);let r=i.length;if(r>6){let t=1;"tussin"==e?t=0:"fexofenadine"==e&&(t=-1);let n=Math.max(0,parseInt((r-6)/2+t));i=i.substr(n,6)}n=this.hexToRgb(i)}if(null!=t){let e=Math.max(...n),i=Math.min(...n),r=e*t;n[0]=parseInt(Math.min(255,(n[0]-i)/(e-i)*255+r)),n[1]=parseInt(Math.min(255,(n[1]-i)/(e-i)*255+r)),n[2]=parseInt(Math.min(255,(n[2]-i)/(e-i)*255+r))}return 1==i&&(n[0]=n[0]/255,n[1]=n[1]/255,n[2]=n[2]/255),n}randomizeArray(e){let t=[...e],i=[];for(;t.length>0;){let e=1==t.length?0:parseInt(21*Math.random()*t.length)%t.length;i.push(t.splice(e,1)[0])}return i}getRandom(e,t=1.14){return e[Math.floor(Math.random(t)*e.length)]}applyTransformList(e,t){var i=t.r;e.rotateX(i[0]),e.rotateY(i[1]),e.rotateZ(i[2]),void 0!==t.rOrder&&(e.rotation.order=t.rOrder);var n=t.t;e.position.set(n[0],n[1],n[2]);var r=t.s;e.scale.set(r[0],r[1],r[2]),e.matrixAutoUpdate=!1,e.updateMatrix()}vec2(e=null,t=null){return new Yh(e,t)}vec3(e=0,t=0,i=0){return new Zh(e,t,i)}loadTexture(e,t=null,i={}){if(void 0!==this.textLoaderArray[e])n=this.textLoaderArray[e];else{var n=new se;this.texLoader.load(e,(e=>{if(null!=t&&(n.format=this.channelFormats[t]),n.image=e,n.needsUpdate=!0,i.length>0){Object.keys(i).forEach((e=>{n[e]=i[e]}))}})),this.textLoaderArray[e]=n}return n}getVideoTexture(e){let t=new $s(e);return t.minFilter=w,t.magFilter=w,t.format=D,t}getCanvasTexture(e){const t=new to(e);return{texture:t,material:new Nt({map:t})}}}
/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var tu={},iu=void 0,nu=tu;function ru(e,t){var i,n=e.split("."),r=nu;!(n[0]in r)&&r.execScript&&r.execScript("var "+n[0]);for(;n.length&&(i=n.shift());)n.length||t===iu?r=r[i]?r[i]:r[i]={}:r[i]=t}var su="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array&&"undefined"!=typeof DataView;function ou(e){var t,i,n,r,s,o,a,l,c,h,u=e.length,d=0,p=Number.POSITIVE_INFINITY;for(l=0;l<u;++l)e[l]>d&&(d=e[l]),e[l]<p&&(p=e[l]);for(t=1<<d,i=new(su?Uint32Array:Array)(t),n=1,r=0,s=2;n<=d;){for(l=0;l<u;++l)if(e[l]===n){for(o=0,a=r,c=0;c<n;++c)o=o<<1|1&a,a>>=1;for(h=n<<16|l,c=o;c<t;c+=s)i[c]=h;++r}++n,r<<=1,s<<=1}return[i,d,p]}function au(e,t){switch(this.g=[],this.h=32768,this.d=this.f=this.a=this.l=0,this.input=su?new Uint8Array(e):e,this.m=!1,this.i=cu,this.r=!1,!t&&(t={})||(t.index&&(this.a=t.index),t.bufferSize&&(this.h=t.bufferSize),t.bufferType&&(this.i=t.bufferType),t.resize&&(this.r=t.resize)),this.i){case lu:this.b=32768,this.c=new(su?Uint8Array:Array)(32768+this.h+258);break;case cu:this.b=0,this.c=new(su?Uint8Array:Array)(this.h),this.e=this.z,this.n=this.v,this.j=this.w;break;default:throw Error("invalid inflate mode")}}var lu=0,cu=1,hu={t:lu,s:cu};au.prototype.k=function(){for(;!this.m;){var e=Au(this,3);switch(1&e&&(this.m=!0),e>>>=1){case 0:var t=this.input,i=this.a,n=this.c,r=this.b,s=t.length,o=iu,a=n.length,l=iu;if(this.d=this.f=0,i+1>=s)throw Error("invalid uncompressed block header: LEN");if(o=t[i++]|t[i++]<<8,i+1>=s)throw Error("invalid uncompressed block header: NLEN");if(o===~(t[i++]|t[i++]<<8))throw Error("invalid uncompressed block header: length verify");if(i+o>t.length)throw Error("input buffer is broken");switch(this.i){case lu:for(;r+o>n.length;){if(o-=l=a-r,su)n.set(t.subarray(i,i+l),r),r+=l,i+=l;else for(;l--;)n[r++]=t[i++];this.b=r,n=this.e(),r=this.b}break;case cu:for(;r+o>n.length;)n=this.e({p:2});break;default:throw Error("invalid inflate mode")}if(su)n.set(t.subarray(i,i+o),r),r+=o,i+=o;else for(;o--;)n[r++]=t[i++];this.a=i,this.b=r,this.c=n;break;case 1:this.j(Tu,Pu);break;case 2:var c,h,u,d,p=Au(this,5)+257,m=Au(this,5)+1,f=Au(this,4)+4,g=new(su?Uint8Array:Array)(mu.length),v=iu,x=iu,y=iu,b=iu,w=iu;for(w=0;w<f;++w)g[mu[w]]=Au(this,3);if(!su)for(w=f,f=g.length;w<f;++w)g[mu[w]]=0;for(c=ou(g),v=new(su?Uint8Array:Array)(p+m),w=0,d=p+m;w<d;)switch(x=Du(this,c),x){case 16:for(b=3+Au(this,2);b--;)v[w++]=y;break;case 17:for(b=3+Au(this,3);b--;)v[w++]=0;y=0;break;case 18:for(b=11+Au(this,7);b--;)v[w++]=0;y=0;break;default:y=v[w++]=x}h=ou(su?v.subarray(0,p):v.slice(0,p)),u=ou(su?v.subarray(p):v.slice(p)),this.j(h,u);break;default:throw Error("unknown BTYPE: "+e)}}return this.n()};var uu,du,pu=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],mu=su?new Uint16Array(pu):pu,fu=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],gu=su?new Uint16Array(fu):fu,vu=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],xu=su?new Uint8Array(vu):vu,yu=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],bu=su?new Uint16Array(yu):yu,wu=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],_u=su?new Uint8Array(wu):wu,Mu=new(su?Uint8Array:Array)(288);for(uu=0,du=Mu.length;uu<du;++uu)Mu[uu]=143>=uu?8:255>=uu?9:279>=uu?7:8;var Su,Cu,Tu=ou(Mu),Eu=new(su?Uint8Array:Array)(30);for(Su=0,Cu=Eu.length;Su<Cu;++Su)Eu[Su]=5;var Pu=ou(Eu);function Au(e,t){for(var i,n=e.f,r=e.d,s=e.input,o=e.a,a=s.length;r<t;){if(o>=a)throw Error("input buffer is broken");n|=s[o++]<<r,r+=8}return i=n&(1<<t)-1,e.f=n>>>t,e.d=r-t,e.a=o,i}function Du(e,t){for(var i,n,r=e.f,s=e.d,o=e.input,a=e.a,l=o.length,c=t[0],h=t[1];s<h&&!(a>=l);)r|=o[a++]<<s,s+=8;if((n=(i=c[r&(1<<h)-1])>>>16)>s)throw Error("invalid code length: "+n);return e.f=r>>n,e.d=s-n,e.a=a,65535&i}function Lu(e,t){var i,n;if(this.input=e,this.a=0,!t&&(t={})||(t.index&&(this.a=t.index),t.verify&&(this.A=t.verify)),i=e[this.a++],n=e[this.a++],(15&i)!==Ru)throw Error("unsupported compression method");if(this.method=Ru,0!=((i<<8)+n)%31)throw Error("invalid fcheck flag:"+((i<<8)+n)%31);if(32&n)throw Error("fdict flag is not supported");this.q=new au(e,{index:this.a,bufferSize:t.bufferSize,bufferType:t.bufferType,resize:t.resize})}au.prototype.j=function(e,t){var i=this.c,n=this.b;this.o=e;for(var r,s,o,a,l=i.length-258;256!==(r=Du(this,e));)if(256>r)n>=l&&(this.b=n,i=this.e(),n=this.b),i[n++]=r;else for(a=gu[s=r-257],0<xu[s]&&(a+=Au(this,xu[s])),r=Du(this,t),o=bu[r],0<_u[r]&&(o+=Au(this,_u[r])),n>=l&&(this.b=n,i=this.e(),n=this.b);a--;)i[n]=i[n++-o];for(;8<=this.d;)this.d-=8,this.a--;this.b=n},au.prototype.w=function(e,t){var i=this.c,n=this.b;this.o=e;for(var r,s,o,a,l=i.length;256!==(r=Du(this,e));)if(256>r)n>=l&&(l=(i=this.e()).length),i[n++]=r;else for(a=gu[s=r-257],0<xu[s]&&(a+=Au(this,xu[s])),r=Du(this,t),o=bu[r],0<_u[r]&&(o+=Au(this,_u[r])),n+a>l&&(l=(i=this.e()).length);a--;)i[n]=i[n++-o];for(;8<=this.d;)this.d-=8,this.a--;this.b=n},au.prototype.e=function(){var e,t,i=new(su?Uint8Array:Array)(this.b-32768),n=this.b-32768,r=this.c;if(su)i.set(r.subarray(32768,i.length));else for(e=0,t=i.length;e<t;++e)i[e]=r[e+32768];if(this.g.push(i),this.l+=i.length,su)r.set(r.subarray(n,n+32768));else for(e=0;32768>e;++e)r[e]=r[n+e];return this.b=32768,r},au.prototype.z=function(e){var t,i,n,r=this.input.length/this.a+1|0,s=this.input,o=this.c;return e&&("number"==typeof e.p&&(r=e.p),"number"==typeof e.u&&(r+=e.u)),2>r?i=(n=(s.length-this.a)/this.o[2]/2*258|0)<o.length?o.length+n:o.length<<1:i=o.length*r,su?(t=new Uint8Array(i)).set(o):t=o,this.c=t},au.prototype.n=function(){var e,t,i,n,r,s=0,o=this.c,a=this.g,l=new(su?Uint8Array:Array)(this.l+(this.b-32768));if(0===a.length)return su?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);for(t=0,i=a.length;t<i;++t)for(n=0,r=(e=a[t]).length;n<r;++n)l[s++]=e[n];for(t=32768,i=this.b;t<i;++t)l[s++]=o[t];return this.g=[],this.buffer=l},au.prototype.v=function(){var e,t=this.b;return su?this.r?(e=new Uint8Array(t)).set(this.c.subarray(0,t)):e=this.c.subarray(0,t):(this.c.length>t&&(this.c.length=t),e=this.c),this.buffer=e},Lu.prototype.k=function(){var e,t,i=this.input;if(e=this.q.k(),this.a=this.q.a,this.A){t=(i[this.a++]<<24|i[this.a++]<<16|i[this.a++]<<8|i[this.a++])>>>0;var n=e;if("string"==typeof n){var r,s,o=n.split("");for(r=0,s=o.length;r<s;r++)o[r]=(255&o[r].charCodeAt(0))>>>0;n=o}for(var a,l=1,c=0,h=n.length,u=0;0<h;){h-=a=1024<h?1024:h;do{c+=l+=n[u++]}while(--a);l%=65521,c%=65521}if(t!==(c<<16|l)>>>0)throw Error("invalid adler-32 checksum")}return e};var Ru=8;ru("Zlib.Inflate",Lu),ru("Zlib.Inflate.prototype.decompress",Lu.prototype.k);var Iu,Ou,Uu,Nu,ku={ADAPTIVE:hu.s,BLOCK:hu.t};if(Object.keys)Iu=Object.keys(ku);else for(Ou in Iu=[],Uu=0,ku)Iu[Uu++]=Ou;for(Uu=0,Nu=Iu.length;Uu<Nu;++Uu)ru("Zlib.Inflate.BufferType."+(Ou=Iu[Uu]),ku[Ou]);var Bu=tu.Zlib,Gu={findSpan:function(e,t,i){var n=i.length-e-1;if(t>=i[n])return n-1;if(t<=i[e])return e;for(var r=e,s=n,o=Math.floor((r+s)/2);t<i[o]||t>=i[o+1];)t<i[o]?s=o:r=o,o=Math.floor((r+s)/2);return o},calcBasisFunctions:function(e,t,i,n){var r=[],s=[],o=[];r[0]=1;for(var a=1;a<=i;++a){s[a]=t-n[e+1-a],o[a]=n[e+a]-t;for(var l=0,c=0;c<a;++c){var h=o[c+1],u=s[a-c],d=r[c]/(h+u);r[c]=l+h*d,l=u*d}r[a]=l}return r},calcBSplinePoint:function(e,t,i,n){for(var r=this.findSpan(e,n,t),s=this.calcBasisFunctions(r,n,e,t),o=new oe(0,0,0,0),a=0;a<=e;++a){var l=i[r-e+a],c=s[a],h=l.w*c;o.x+=l.x*h,o.y+=l.y*h,o.z+=l.z*h,o.w+=l.w*c}return o},calcBasisFunctionDerivatives:function(e,t,i,n,r){for(var s=[],o=0;o<=i;++o)s[o]=0;var a=[];for(o=0;o<=n;++o)a[o]=s.slice(0);var l=[];for(o=0;o<=i;++o)l[o]=s.slice(0);l[0][0]=1;for(var c=s.slice(0),h=s.slice(0),u=1;u<=i;++u){c[u]=t-r[e+1-u],h[u]=r[e+u]-t;for(var d=0,p=0;p<u;++p){var m=h[p+1],f=c[u-p];l[u][p]=m+f;var g=l[p][u-1]/l[u][p];l[p][u]=d+m*g,d=f*g}l[u][u]=d}for(u=0;u<=i;++u)a[0][u]=l[u][i];for(p=0;p<=i;++p){var v=0,x=1,y=[];for(o=0;o<=i;++o)y[o]=s.slice(0);y[0][0]=1;for(var b=1;b<=n;++b){var w=0,_=p-b,M=i-b;p>=b&&(y[x][0]=y[v][0]/l[M+1][_],w=y[x][0]*l[_][M]);var S=p-1<=M?b-1:i-p;for(u=_>=-1?1:-_;u<=S;++u)y[x][u]=(y[v][u]-y[v][u-1])/l[M+1][_+u],w+=y[x][u]*l[_+u][M];p<=M&&(y[x][b]=-y[v][b-1]/l[M+1][p],w+=y[x][b]*l[p][M]),a[b][p]=w;u=v;v=x,x=u}}for(p=i,b=1;b<=n;++b){for(u=0;u<=i;++u)a[b][u]*=p;p*=i-b}return a},calcBSplineDerivatives:function(e,t,i,n,r){for(var s=r<e?r:e,o=[],a=this.findSpan(e,n,t),l=this.calcBasisFunctionDerivatives(a,n,e,s,t),c=[],h=0;h<i.length;++h){var u=(p=i[h].clone()).w;p.x*=u,p.y*=u,p.z*=u,c[h]=p}for(var d=0;d<=s;++d){for(var p=c[a-e].clone().multiplyScalar(l[d][0]),m=1;m<=e;++m)p.add(c[a-e+m].clone().multiplyScalar(l[d][m]));o[d]=p}for(d=s+1;d<=r+1;++d)o[d]=new oe(0,0,0);return o},calcKoverI:function(e,t){for(var i=1,n=2;n<=e;++n)i*=n;var r=1;for(n=2;n<=t;++n)r*=n;for(n=2;n<=e-t;++n)r*=n;return i/r},calcRationalCurveDerivatives:function(e){for(var t=e.length,i=[],n=[],r=0;r<t;++r){var s=e[r];i[r]=new de(s.x,s.y,s.z),n[r]=s.w}for(var o=[],a=0;a<t;++a){var l=i[a].clone();for(r=1;r<=a;++r)l.sub(o[a-r].clone().multiplyScalar(this.calcKoverI(a,r)*n[r]));o[a]=l.divideScalar(n[0])}return o},calcNURBSDerivatives:function(e,t,i,n,r){var s=this.calcBSplineDerivatives(e,t,i,n,r);return this.calcRationalCurveDerivatives(s)},calcSurfacePoint:function(e,t,i,n,r,s,o,a){for(var l=this.findSpan(e,s,i),c=this.findSpan(t,o,n),h=this.calcBasisFunctions(l,s,e,i),u=this.calcBasisFunctions(c,o,t,n),d=[],p=0;p<=t;++p){d[p]=new oe(0,0,0,0);for(var m=0;m<=e;++m){var f=r[l-e+m][c-t+p].clone(),g=f.w;f.x*=g,f.y*=g,f.z*=g,d[p].add(f.multiplyScalar(h[m]))}}var v=new oe(0,0,0,0);for(p=0;p<=t;++p)v.add(d[p].multiplyScalar(u[p]));v.divideScalar(v.w),a.set(v.x,v.y,v.z)}},Fu=function(e,t,i,n,r){rl.call(this),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=n||0,this.endKnot=r||this.knots.length-1;for(var s=0;s<i.length;++s){var o=i[s];this.controlPoints[s]=new oe(o.x,o.y,o.z,o.w)}};(Fu.prototype=Object.create(rl.prototype)).constructor=Fu,Fu.prototype.getPoint=function(e,t){var i=t||new de,n=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=Gu.calcBSplinePoint(this.degree,this.knots,this.controlPoints,n);return 1!=r.w&&r.divideScalar(r.w),i.set(r.x,r.y,r.z)},Fu.prototype.getTangent=function(e,t){var i=t||new de,n=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),r=Gu.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,n,1);return i.copy(r[1]).normalize(),i};var Hu=function(){var e,t,i;function n(e){Za.call(this,e)}function r(e,t){this.textureLoader=e,this.manager=t}function s(){}function o(){}function a(){}function l(){}function c(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function h(){}function u(e){var t=e.match(/FBXVersion: (\d+)/);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function d(e){return e/46186158e3}n.prototype=Object.assign(Object.create(Za.prototype),{constructor:n,load:function(e,t,i,n){var r=this,s=""===r.path?zl(e):r.path,o=new Qa(this.manager);o.setPath(r.path),o.setResponseType("arraybuffer"),o.load(e,(function(i){try{t(r.parse(i,s))}catch(t){setTimeout((function(){n&&n(t),r.manager.itemError(e)}),0)}}),i,n)},parse:function(t,i){if(o="Kaydara FBX Binary  \0",(s=t).byteLength>=o.length&&o===_(s,0,o.length))e=(new l).parse(t);else{var n=_(t);if(!function(e){var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],i=0;function n(t){var n=e[t-1];return e=e.slice(i+t),i++,n}for(var r=0;r<t.length;++r){if(n(1)===t[r])return!1}return!0}(n))throw new Error("THREE.FBXLoader: Unknown format.");if(u(n)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+u(n));e=(new a).parse(n)}var s,o;return new r(new nl(this.manager).setPath(this.resourcePath||i).setCrossOrigin(this.crossOrigin),this.manager).parse(e)}}),r.prototype={constructor:r,parse:function(){t=this.parseConnections();var e=this.parseImages(),n=this.parseTextures(e),r=this.parseMaterials(n),o=this.parseDeformers(),a=(new s).parse(o);return this.parseScene(o,a,r),i},parseConnections:function(){var t=new Map;"Connections"in e&&e.Connections.connections.forEach((function(e){var i=e[0],n=e[1],r=e[2];t.has(i)||t.set(i,{parents:[],children:[]});var s={ID:n,relationship:r};t.get(i).parents.push(s),t.has(n)||t.set(n,{parents:[],children:[]});var o={ID:i,relationship:r};t.get(n).children.push(o)}));return t},parseImages:function(){var t={},i={};if("Video"in e.Objects){var n=e.Objects.Video;for(var r in n){var s=n[r];if(t[c=parseInt(r)]=s.RelativeFilename||s.Filename,"Content"in s){var o=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,a="string"==typeof s.Content&&""!==s.Content;if(o||a){var l=this.parseImage(n[r]);i[s.RelativeFilename||s.Filename]=l}}}}for(var c in t){var h=t[c];void 0!==i[h]?t[c]=i[h]:t[c]=t[c].split("\\").pop()}return t},parseImage:function(e){var t,i=e.Content,n=e.RelativeFilename||e.Filename,r=n.slice(n.lastIndexOf(".")+1).toLowerCase();switch(r){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image  iff";break;case"tga":null===this.manager.getHandler(".tga")&&console.warn("FBXLoader: TGA loader not found, skipping ",n),t="image  ga";break;default:return void console.warn('FBXLoader: Image type "'+r+'" is not supported.')}if("string"==typeof i)return"data:"+t+";base64,"+i;var s=new Uint8Array(i);return window.URL.createObjectURL(new Blob([s],{type:t}))},parseTextures:function(t){var i=new Map;if("Texture"in e.Objects){var n=e.Objects.Texture;for(var r in n){var s=this.parseTexture(n[r],t);i.set(parseInt(r),s)}}return i},parseTexture:function(e,t){var i=this.loadTexture(e,t);i.ID=e.id,i.name=e.attrName;var n=e.WrapModeU,r=e.WrapModeV,s=void 0!==n?n.value:0,o=void 0!==r?r.value:0;if(i.wrapS=0===s?f:g,i.wrapT=0===o?f:g,"Scaling"in e){var a=e.Scaling.value;i.repeat.x=a[0],i.repeat.y=a[1]}return i},loadTexture:function(e,i){var n,r,s=this.textureLoader.path,o=t.get(e.id).children;void 0!==o&&o.length>0&&void 0!==i[o[0].ID]&&(0!==(n=i[o[0].ID]).indexOf("blob:")&&0!==n.indexOf("data:")||this.textureLoader.setPath(void 0));var a=e.FileName.slice(-3).toLowerCase();if("tga"===a){var l=this.manager.getHandler(".tga");null===l?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),r=new se):r=l.load(n)}else"psd"===a?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),r=new se):r=this.textureLoader.load(n);return this.textureLoader.setPath(s),r},parseMaterials:function(t){var i=new Map;if("Material"in e.Objects){var n=e.Objects.Material;for(var r in n){var s=this.parseMaterial(n[r],t);null!==s&&i.set(parseInt(r),s)}}return i},parseMaterial:function(e,i){var n=e.id,r=e.attrName,s=e.ShadingModel;if("object"==typeof s&&(s=s.value),!t.has(n))return null;var o,a=this.parseParameters(e,i,n);switch(s.toLowerCase()){case"phong":o=new Sa;break;case"lambert":o=new Ea;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),o=new Sa}return o.setValues(a),o.name=r,o},parseParameters:function(e,i,n){var r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value),e.Diffuse?r.color=(new At).fromArray(e.Diffuse.value):e.DiffuseColor&&"Color"===e.DiffuseColor.type&&(r.color=(new At).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value),e.Emissive?r.emissive=(new At).fromArray(e.Emissive.value):e.EmissiveColor&&"Color"===e.EmissiveColor.type&&(r.emissive=(new At).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(r.opacity=parseFloat(e.Opacity.value)),r.opacity<1&&(r.transparent=!0),e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value),e.Shininess&&(r.shininess=e.Shininess.value),e.Specular?r.specular=(new At).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(r.specular=(new At).fromArray(e.SpecularColor.value));var s=this;return t.get(n).children.forEach((function(e){var t=e.relationship;switch(t){case"Bump":r.bumpMap=s.getTexture(i,e.ID);break;case"Maya|TEX_ao_map":r.aoMap=s.getTexture(i,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":r.map=s.getTexture(i,e.ID),r.map.encoding=j;break;case"DisplacementColor":r.displacementMap=s.getTexture(i,e.ID);break;case"AmbientColor":case"EmissiveColor":r.emissiveMap=s.getTexture(i,e.ID),r.emissiveMap.encoding=j;break;case"NormalMap":case"Maya|TEX_normal_map":r.normalMap=s.getTexture(i,e.ID);break;case"ReflectionColor":r.envMap=s.getTexture(i,e.ID),r.envMap.mapping=303,r.envMap.encoding=j;break;case"SpecularColor":r.specularMap=s.getTexture(i,e.ID),r.specularMap.encoding=j;break;case"TransparentColor":case"TransparencyFactor":r.alphaMap=s.getTexture(i,e.ID),r.transparent=!0;break;default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",t)}})),r},getTexture:function(i,n){return"LayeredTexture"in e.Objects&&n in e.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),n=t.get(n).children[0].ID),i.get(n)},parseDeformers:function(){var i={},n={};if("Deformer"in e.Objects){var r=e.Objects.Deformer;for(var s in r){var o=r[s],a=t.get(parseInt(s));if("Skin"===o.attrType){var l=this.parseSkeleton(a,r);l.ID=s,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),l.geometryID=a.parents[0].ID,i[s]=l}else if("BlendShape"===o.attrType){var c={id:s};c.rawTargets=this.parseMorphTargets(a,r),c.id=s,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),n[s]=c}}}return{skeletons:i,morphTargets:n}},parseSkeleton:function(e,t){var i=[];return e.children.forEach((function(e){var n=t[e.ID];if("Cluster"===n.attrType){var r={ID:e.ID,indices:[],weights:[],transformLink:(new be).fromArray(n.TransformLink.a)};"Indexes"in n&&(r.indices=n.Indexes.a,r.weights=n.Weights.a),i.push(r)}})),{rawBones:i,bones:[]}},parseMorphTargets:function(e,i){for(var n=[],r=0;r<e.children.length;r++){var s=e.children[r],o=i[s.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if("BlendShapeChannel"!==o.attrType)return;a.geoID=t.get(parseInt(s.ID)).children.filter((function(e){return void 0===e.relationship}))[0].ID,n.push(a)}return n},parseScene:function(n,r,s){i=new Zr;var a=this.parseModels(n.skeletons,r,s),l=e.Objects.Model,c=this;a.forEach((function(e){var n=l[e.ID];c.setLookAtProperties(e,n),t.get(e.ID).parents.forEach((function(t){var i=a.get(t.ID);void 0!==i&&i.add(e)})),null===e.parent&&i.add(e)})),this.bindSkeleton(n.skeletons,r,a),this.createAmbientLight(),this.setupMorphMaterials(),i.traverse((function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrixWorld=e.parent.matrix);var t=y(e.userData.transformData);e.applyMatrix4(t)}}));var h=(new o).parse();1===i.children.length&&i.children[0].isGroup&&(i.children[0].animations=h,i=i.children[0]),i.animations=h},parseModels:function(i,n,r){var s=new Map,o=e.Objects.Model,a=["Culling","DefaultAttributeIndex","InheritType","Lcl_Translation","Lcl_Rotation","Lcl_Scaling","RotationPivot","ScalingPivot","RotationActive","ScalingMax","RotationOffset","fbx_node_path","Shading","Version","attrName","attrType","currentUVSet","id","name","propertyList","singleProperty"];for(var l in o){var c=parseInt(l),h=o[l],u=t.get(c),d=this.buildSkeleton(u,i,c,h.attrName);if(!d){switch(h.attrType){case"Camera":d=this.createCamera(u);break;case"Light":d=this.createLight(u);break;case"Mesh":d=this.createMesh(u,n,r);break;case"NurbsCurve":d=this.createCurve(u,n);break;case"LimbNode":case"Root":d=new As;break;default:d=new Zr}d.name=h.attrName?Uc.sanitizeNodeName(h.attrName):"",d.ID=c}Object.keys(h).forEach((e=>{a.includes(e)||(d.userData[e]=h[e].value)})),this.getTransformData(d,h),s.set(c,d)}return s},buildSkeleton:function(e,t,i,n){var r=null;return e.parents.forEach((function(e){for(var s in t){var o=t[s];o.rawBones.forEach((function(t,s){if(t.ID===e.ID){var a=r;(r=new As).matrixWorld.copy(t.transformLink),r.name=n?Uc.sanitizeNodeName(n):"",r.ID=i,o.bones[s]=r,null!==a&&r.add(a)}}))}})),r},createCamera:function(t){var i,n;if(t.children.forEach((function(t){var i=e.Objects.NodeAttribute[t.ID];void 0!==i&&(n=i)})),void 0===n)i=new Be;else{var r=0;void 0!==n.CameraProjectionType&&1===n.CameraProjectionType.value&&(r=1);var s=1;void 0!==n.NearPlane&&(s=n.NearPlane.value/1e3);var o=1e3;void 0!==n.FarPlane&&(o=n.FarPlane.value/1e3);var a=window.innerWidth,l=window.innerHeight;void 0!==n.AspectWidth&&void 0!==n.AspectHeight&&(a=n.AspectWidth.value,l=n.AspectHeight.value);var c=a/l,h=45;void 0!==n.FieldOfView&&(h=n.FieldOfView.value);var u=n.FocalLength?n.FocalLength.value:null;switch(r){case 0:i=new ki(h,c,s,o),null!==u&&i.setFocalLength(u);break;case 1:i=new Ol(-a/2,a/2,l/2,-l/2,s,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+r+"."),i=new Be}}return i},createLight:function(t){var i,n;if(t.children.forEach((function(t){var i=e.Objects.NodeAttribute[t.ID];void 0!==i&&(n=i)})),void 0===n)i=new Be;else{var r;r=void 0===n.LightType?0:n.LightType.value;var s=16777215;void 0!==n.Color&&(s=(new At).fromArray(n.Color.value));var o=void 0===n.Intensity?1:n.Intensity.value/100;void 0!==n.CastLightOnObject&&0===n.CastLightOnObject.value&&(o=0);var a=0;void 0!==n.FarAttenuationEnd&&(a=void 0!==n.EnableFarAttenuation&&0===n.EnableFarAttenuation.value?0:n.FarAttenuationEnd.value);switch(r){case 0:i=new Il(s,o,a,1);break;case 1:i=new Nl(s,o);break;case 2:var l=Math.PI/3;void 0!==n.InnerAngle&&(l=$.degToRad(n.InnerAngle.value));var c=0;void 0!==n.OuterAngle&&(c=$.degToRad(n.OuterAngle.value),c=Math.max(c,1)),i=new Ll(s,o,a,l,c,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),i=new Il(s,o)}void 0!==n.CastShadows&&1===n.CastShadows.value&&(i.castShadow=!0)}return i},createMesh:function(e,t,i){var n,r=null,s=null,o=[];return e.children.forEach((function(e){t.has(e.ID)&&(r=t.get(e.ID)),i.has(e.ID)&&o.push(i.get(e.ID))})),o.length>1?s=o:o.length>0?s=o[0]:(s=new Sa({color:13421772}),o.push(s)),"color"in r.attributes&&o.forEach((function(e){e.vertexColors=!0})),r.FBX_Deformer?(o.forEach((function(e){e.skinning=!0})),(n=new Cs(r,s)).normalizeSkinWeights()):n=new Mi(r,s),n},createCurve:function(e,t){return new Hs(e.children.reduce((function(e,i){return t.has(i.ID)&&(e=t.get(i.ID)),e}),null),new Us({color:3342591,linewidth:1}))},getTransformData:function(e,t){var i={};"InheritType"in t&&(i.inheritType=parseInt(t.InheritType.value)),i.eulerOrder="RotationOrder"in t?b(t.RotationOrder.value):"ZYX","Lcl_Translation"in t&&(i.translation=t.Lcl_Translation.value),"PreRotation"in t&&(i.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(i.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(i.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(i.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(i.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(i.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(i.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(i.rotationPivot=t.RotationPivot.value),e.userData.transformData=i},setLookAtProperties:function(n,r){"LookAtProperty"in r&&t.get(n.ID).children.forEach((function(t){if("LookAtProperty"===t.relationship){var r=e.Objects.Model[t.ID];if("Lcl_Translation"in r){var s=r.Lcl_Translation.value;void 0!==n.target?(n.target.position.fromArray(s),i.add(n.target)):n.lookAt((new de).fromArray(s))}}}))},bindSkeleton:function(e,i,n){var r=this.parsePoseNodes();for(var s in e){var o=e[s];t.get(parseInt(o.ID)).parents.forEach((function(e){if(i.has(e.ID)){var s=e.ID;t.get(s).parents.forEach((function(e){n.has(e.ID)&&n.get(e.ID).bind(new Ps(o.bones),r[e.ID])}))}}))}},parsePoseNodes:function(){var t={};if("Pose"in e.Objects){var i=e.Objects.Pose;for(var n in i)if("BindPose"===i[n].attrType){var r=i[n].PoseNode;Array.isArray(r)?r.forEach((function(e){t[e.Node]=(new be).fromArray(e.Matrix.a)})):t[r.Node]=(new be).fromArray(r.Matrix.a)}}return t},createAmbientLight:function(){if("GlobalSettings"in e&&"AmbientColor"in e.GlobalSettings){var t=e.GlobalSettings.AmbientColor.value,n=t[0],r=t[1],s=t[2];if(0!==n||0!==r||0!==s){var o=new At(n,r,s);i.add(new kl(o,1))}}},setupMorphMaterials:function(){var e=this;i.traverse((function(t){t.isMesh&&t.geometry.morphAttributes.position&&t.geometry.morphAttributes.position.length&&(Array.isArray(t.material)?t.material.forEach((function(i,n){e.setupMorphMaterial(t,i,n)})):e.setupMorphMaterial(t,t.material))}))},setupMorphMaterial:function(e,t,n){var r=e.uuid,s=t.uuid,o=!1;if(i.traverse((function(e){e.isMesh&&(Array.isArray(e.material)?e.material.forEach((function(t){t.uuid===s&&e.uuid!==r&&(o=!0)})):e.material.uuid===s&&e.uuid!==r&&(o=!0))})),!0===o){var a=t.clone();a.morphTargets=!0,void 0===n?e.material=a:e.material[n]=a}else t.morphTargets=!0}},s.prototype={constructor:s,parse:function(i){var n=new Map;if("Geometry"in e.Objects){var r=e.Objects.Geometry;for(var s in r){var o=t.get(parseInt(s)),a=this.parseGeometry(o,r[s],i);n.set(parseInt(s),a)}}return n},parseGeometry:function(e,t,i){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,i);case"NurbsCurve":return this.parseNurbsGeometry(t)}},parseMeshGeometry:function(t,i,n){var r=n.skeletons,s=[],o=t.parents.map((function(t){return e.Objects.Model[t.ID]}));if(0!==o.length){var a=t.children.reduce((function(e,t){return void 0!==r[t.ID]&&(e=r[t.ID]),e}),null);t.children.forEach((function(e){void 0!==n.morphTargets[e.ID]&&s.push(n.morphTargets[e.ID])}));var l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=b(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);var h=y(c);return this.genGeometry(i,a,s,h)}},genGeometry:function(e,t,i,n){var r=new ri;e.attrName&&(r.name=e.attrName);var s=this.parseGeoNode(e,t),o=this.genBuffers(s),a=new qt(o.vertex,3);if(a.applyMatrix4(n),r.setAttribute("position",a),o.colors.length>0&&r.setAttribute("color",new qt(o.colors,3)),t&&(r.setAttribute("skinIndex",new Vt(o.weightsIndices,4)),r.setAttribute("skinWeight",new qt(o.vertexWeights,4)),r.FBX_Deformer=t),o.normal.length>0){var l=(new te).getNormalMatrix(n),c=new qt(o.normal,3);c.applyNormalMatrix(l),r.setAttribute("normal",c)}if(o.uvs.forEach((function(e,t){var i="uv"+(t+1).toString();0===t&&(i="uv"),r.setAttribute(i,new qt(o.uvs[t],2))})),s.material&&"AllSame"!==s.material.mappingType){var h=o.materialIndex[0],u=0;if(o.materialIndex.forEach((function(e,t){e!==h&&(r.addGroup(u,t-u,h),h=e,u=t)})),r.groups.length>0){var d=r.groups[r.groups.length-1],p=d.start+d.count;p!==o.materialIndex.length&&r.addGroup(p,o.materialIndex.length-p,h)}0===r.groups.length&&r.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(r,e,i,n),r},parseGeoNode:function(e,t){var i={};if(i.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],i.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(i.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(i.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(i.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){i.uv=[];for(var n=0;e.LayerElementUV[n];)i.uv.push(this.parseUVs(e.LayerElementUV[n])),n++}if(e.LayerElementUserData){i.userAttrs=[];for(n=0;e.LayerElementUserData[n];)n++}return i.weightTable={},null!==t&&(i.skeleton=t,t.rawBones.forEach((function(e,t){e.indices.forEach((function(n,r){void 0===i.weightTable[n]&&(i.weightTable[n]=[]),i.weightTable[n].push({id:t,weight:e.weights[r]})}))}))),i},genBuffers:function(e){var t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},i=0,n=0,r=!1,s=[],o=[],a=[],l=[],c=[],h=[],u=this;return e.vertexIndices.forEach((function(d,p){var f=!1;d<0&&(d=~d,f=!0);var g=[],v=[];if(s.push(3*d,3*d+1,3*d+2),e.color){var x=m(p,i,d,e.color);a.push(x[0],x[1],x[2])}if(e.skeleton){if(void 0!==e.weightTable[d]&&e.weightTable[d].forEach((function(e){v.push(e.weight),g.push(e.id)})),v.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);var y=[0,0,0,0],b=[0,0,0,0];v.forEach((function(e,t){var i=e,n=g[t];b.forEach((function(e,t,r){if(i>e){r[t]=i,i=e;var s=y[t];y[t]=n,n=s}}))})),g=y,v=b}for(;v.length<4;)v.push(0),g.push(0);for(var w=0;w<4;++w)c.push(v[w]),h.push(g[w])}if(e.normal){x=m(p,i,d,e.normal);o.push(x[0],x[1],x[2])}if(e.material&&"AllSame"!==e.material.mappingType)var _=m(p,i,d,e.material)[0];e.uv&&e.uv.forEach((function(e,t){var n=m(p,i,d,e);void 0===l[t]&&(l[t]=[]),l[t].push(n[0]),l[t].push(n[1])})),n++,f&&(u.genFace(t,e,s,_,o,a,l,c,h,n),i++,n=0,s=[],o=[],a=[],l=[],c=[],h=[])})),t},genFace:function(e,t,i,n,r,s,o,a,l,c){for(var h=2;h<c;h++)e.vertex.push(t.vertexPositions[i[0]]),e.vertex.push(t.vertexPositions[i[1]]),e.vertex.push(t.vertexPositions[i[2]]),e.vertex.push(t.vertexPositions[i[3*(h-1)]]),e.vertex.push(t.vertexPositions[i[3*(h-1)+1]]),e.vertex.push(t.vertexPositions[i[3*(h-1)+2]]),e.vertex.push(t.vertexPositions[i[3*h]]),e.vertex.push(t.vertexPositions[i[3*h+1]]),e.vertex.push(t.vertexPositions[i[3*h+2]]),t.skeleton&&(e.vertexWeights.push(a[0]),e.vertexWeights.push(a[1]),e.vertexWeights.push(a[2]),e.vertexWeights.push(a[3]),e.vertexWeights.push(a[4*(h-1)]),e.vertexWeights.push(a[4*(h-1)+1]),e.vertexWeights.push(a[4*(h-1)+2]),e.vertexWeights.push(a[4*(h-1)+3]),e.vertexWeights.push(a[4*h]),e.vertexWeights.push(a[4*h+1]),e.vertexWeights.push(a[4*h+2]),e.vertexWeights.push(a[4*h+3]),e.weightsIndices.push(l[0]),e.weightsIndices.push(l[1]),e.weightsIndices.push(l[2]),e.weightsIndices.push(l[3]),e.weightsIndices.push(l[4*(h-1)]),e.weightsIndices.push(l[4*(h-1)+1]),e.weightsIndices.push(l[4*(h-1)+2]),e.weightsIndices.push(l[4*(h-1)+3]),e.weightsIndices.push(l[4*h]),e.weightsIndices.push(l[4*h+1]),e.weightsIndices.push(l[4*h+2]),e.weightsIndices.push(l[4*h+3])),t.color&&(e.colors.push(s[0]),e.colors.push(s[1]),e.colors.push(s[2]),e.colors.push(s[3*(h-1)]),e.colors.push(s[3*(h-1)+1]),e.colors.push(s[3*(h-1)+2]),e.colors.push(s[3*h]),e.colors.push(s[3*h+1]),e.colors.push(s[3*h+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(n),e.materialIndex.push(n),e.materialIndex.push(n)),t.normal&&(e.normal.push(r[0]),e.normal.push(r[1]),e.normal.push(r[2]),e.normal.push(r[3*(h-1)]),e.normal.push(r[3*(h-1)+1]),e.normal.push(r[3*(h-1)+2]),e.normal.push(r[3*h]),e.normal.push(r[3*h+1]),e.normal.push(r[3*h+2])),t.uv&&t.uv.forEach((function(t,i){void 0===e.uvs[i]&&(e.uvs[i]=[]),e.uvs[i].push(o[i][0]),e.uvs[i].push(o[i][1]),e.uvs[i].push(o[i][2*(h-1)]),e.uvs[i].push(o[i][2*(h-1)+1]),e.uvs[i].push(o[i][2*h]),e.uvs[i].push(o[i][2*h+1])}))},addMorphTargets:function(t,i,n,r){if(0!==n.length){t.morphTargetsRelative=!0,t.morphAttributes.position=[];var s=this;n.forEach((function(n){n.rawTargets.forEach((function(n){var o=e.Objects.Geometry[n.geoID];void 0!==o&&s.genMorphGeometry(t,i,o,r,n.name)}))}))}},genMorphGeometry:function(e,t,i,n,r){for(var s=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],o=void 0!==i.Vertices?i.Vertices.a:[],a=void 0!==i.Indexes?i.Indexes.a:[],l=3*e.attributes.position.count,c=new Float32Array(l),h=0;h<a.length;h++){var u=3*a[h];c[u]=o[3*h],c[u+1]=o[3*h+1],c[u+2]=o[3*h+2]}var d={vertexIndices:s,vertexPositions:c},p=new qt(this.genBuffers(d).vertex,3);p.name=r||i.attrName,p.applyMatrix4(n),e.morphAttributes.position.push(p)},parseNormals:function(e){var t=e.MappingInformationType,i=e.ReferenceInformationType,n=e.Normals.a,r=[];return"IndexToDirect"===i&&("NormalIndex"in e?r=e.NormalIndex.a:"NormalsIndex"in e&&(r=e.NormalsIndex.a)),{dataSize:3,buffer:n,indices:r,mappingType:t,referenceType:i}},parseUVs:function(e){var t=e.MappingInformationType,i=e.ReferenceInformationType,n=e.UV.a,r=[];return"IndexToDirect"===i&&(r=e.UVIndex.a),{dataSize:2,buffer:n,indices:r,mappingType:t,referenceType:i}},parseVertexColors:function(e){var t=e.MappingInformationType,i=e.ReferenceInformationType,n=e.Colors.a,r=[];return"IndexToDirect"===i&&(r=e.ColorIndex.a),{dataSize:4,buffer:n,indices:r,mappingType:t,referenceType:i}},parseMaterialIndices:function(e){var t=e.MappingInformationType,i=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:i};for(var n=e.Materials.a,r=[],s=0;s<n.length;++s)r.push(s);return{dataSize:1,buffer:n,indices:r,mappingType:t,referenceType:i}},parseNurbsGeometry:function(e){if(void 0===Fu)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new ri;var t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new ri;for(var i,n,r=t-1,s=e.KnotVector.a,o=[],a=e.Points.a,l=0,c=a.length;l<c;l+=4)o.push((new oe).fromArray(a,l));if("Closed"===e.Form)o.push(o[0]);else if("Periodic"===e.Form){i=r,n=s.length-1-i;for(l=0;l<r;++l)o.push(o[l])}var h=new Fu(r,s,o,i,n).getPoints(7*o.length),u=new Float32Array(3*h.length);h.forEach((function(e,t){e.toArray(u,3*t)}));var d=new ri;return d.setAttribute("position",new Gt(u,3)),d}},o.prototype={constructor:o,parse:function(){var e=[],t=this.parseClips();if(void 0!==t)for(var i in t){var n=t[i],r=this.addClip(n);e.push(r)}return e},parseClips:function(){if(void 0!==e.Objects.AnimationCurve){var t=this.parseAnimationCurveNodes();this.parseAnimationCurves(t);var i=this.parseAnimationLayers(t);return this.parseAnimStacks(i)}},parseAnimationCurveNodes:function(){var t=e.Objects.AnimationCurveNode,i=new Map;for(var n in t){var r=t[n];if(null!==r.attrName.match(/S|R|T|DeformPercent/)){var s={id:r.id,attr:r.attrName,curves:{}};i.set(s.id,s)}}return i},parseAnimationCurves:function(i){var n=e.Objects.AnimationCurve;for(var r in n){var s={id:n[r].id,times:n[r].KeyTime.a.map(d),values:n[r].KeyValueFloat.a},o=t.get(s.id);if(void 0!==o){var a=o.parents[0].ID,l=o.parents[0].relationship;l.match(/X/)?i.get(a).curves.x=s:l.match(/Y/)?i.get(a).curves.y=s:l.match(/Z/)?i.get(a).curves.z=s:l.match(/d|DeformPercent/)&&i.has(a)&&(i.get(a).curves.morph=s)}}},parseAnimationLayers:function(n){var r=e.Objects.AnimationLayer,s=new Map;for(var o in r){var a=[],l=t.get(parseInt(o));if(void 0!==l)l.children.forEach((function(r,s){if(n.has(r.ID)){var o=n.get(r.ID);if(void 0!==o.curves.x||void 0!==o.curves.y||void 0!==o.curves.z){if(void 0===a[s])if(void 0!==(p=t.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID)){var l={modelName:(c=e.Objects.Model[p.toString()]).attrName?Uc.sanitizeNodeName(c.attrName):"",ID:c.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};i.traverse((function(e){e.ID===c.id&&(l.transform=e.matrix,e.userData.transformData&&(l.eulerOrder=e.userData.transformData.eulerOrder))})),l.transform||(l.transform=new be),"PreRotation"in c&&(l.preRotation=c.PreRotation.value),"PostRotation"in c&&(l.postRotation=c.PostRotation.value),a[s]=l}a[s]&&(a[s][o.attr]=o)}else if(void 0!==o.curves.morph){if(void 0===a[s]){var c,h=t.get(r.ID).parents.filter((function(e){return void 0!==e.relationship}))[0].ID,u=t.get(h).parents[0].ID,d=t.get(u).parents[0].ID,p=t.get(d).parents[0].ID;l={modelName:(c=e.Objects.Model[p]).attrName?Uc.sanitizeNodeName(c.attrName):"",morphName:e.Objects.Deformer[h].attrName};a[s]=l}a[s][o.attr]=o}}})),s.set(parseInt(o),a)}return s},parseAnimStacks:function(i){var n=e.Objects.AnimationStack,r={};for(var s in n){var o=t.get(parseInt(s)).children;o.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var a=i.get(o[0].ID);r[s]={name:n[s].attrName,layer:a}}return r},addClip:function(e){var t=[],i=this;return e.layer.forEach((function(e){t=t.concat(i.generateTracks(e))})),new Va(e.name,-1,t)},generateTracks:function(e){var t=[],i=new de,n=new ce,r=new de;if(e.transform&&e.transform.decompose(i,n,r),i=i.toArray(),n=(new Me).setFromQuaternion(n,e.eulerOrder).toArray(),r=r.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){var s=this.generateVectorTrack(e.modelName,e.T.curves,i,"position");void 0!==s&&t.push(s)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){var o=this.generateRotationTrack(e.modelName,e.R.curves,n,e.preRotation,e.postRotation,e.eulerOrder);void 0!==o&&t.push(o)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){var a=this.generateVectorTrack(e.modelName,e.S.curves,r,"scale");void 0!==a&&t.push(a)}if(void 0!==e.DeformPercent){var l=this.generateMorphTrack(e);void 0!==l&&t.push(l)}return t},generateVectorTrack:function(e,t,i,n){var r=this.getTimesForAllAxes(t);return new za(e+"."+n,r,this.getKeyframeTrackValues(r,t,i))},generateRotationTrack:function(e,t,i,n,r,s){void 0!==t.x&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map($.degToRad)),void 0!==t.y&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map($.degToRad)),void 0!==t.z&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map($.degToRad));var o=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(o,t,i);void 0!==n&&((n=n.map($.degToRad)).push(s),n=(new Me).fromArray(n),n=(new ce).setFromEuler(n)),void 0!==r&&((r=r.map($.degToRad)).push(s),r=(new Me).fromArray(r),r=(new ce).setFromEuler(r).inverse());for(var l=new ce,c=new Me,h=[],u=0;u<a.length;u+=3)c.set(a[u],a[u+1],a[u+2],s),l.setFromEuler(c),void 0!==n&&l.premultiply(n),void 0!==r&&l.multiply(r),l.toArray(h,u/3*4);return new Ha(e+".quaternion",o,h)},generateMorphTrack:function(e){var t=e.DeformPercent.curves.morph,n=t.values.map((function(e){return e/100})),r=i.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Ga(e.modelName+".morphTargetInfluences["+r+"]",t.times,n)},getTimesForAllAxes:function(e){var t=[];return void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t=t.sort((function(e,t){return e-t})).filter((function(e,t,i){return i.indexOf(e)==t}))},getKeyframeTrackValues:function(e,t,i){var n=i,r=[],s=-1,o=-1,a=-1;return e.forEach((function(e){if(t.x&&(s=t.x.times.indexOf(e)),t.y&&(o=t.y.times.indexOf(e)),t.z&&(a=t.z.times.indexOf(e)),-1!==s){var i=t.x.values[s];r.push(i),n[0]=i}else r.push(n[0]);if(-1!==o){var l=t.y.values[o];r.push(l),n[1]=l}else r.push(n[1]);if(-1!==a){var c=t.z.values[a];r.push(c),n[2]=c}else r.push(n[2])})),r},interpolateRotations:function(e){for(var t=1;t<e.values.length;t++){var i=e.values[t-1],n=e.values[t]-i,r=Math.abs(n);if(r>=180){for(var s=r/180,o=n/s,a=i+o,l=e.times[t-1],c=(e.times[t]-l)/s,h=l+c,u=[],d=[];h<e.times[t];)u.push(h),h+=c,d.push(a),a+=o;e.times=M(e.times,t,u),e.values=M(e.values,t,d)}}}},a.prototype={constructor:a,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,this.allNodes=new h,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var t=this,i=e.split(/[\r\n]+/);return i.forEach((function(e,n){var r=e.match(/^[\s\t]*;/),s=e.match(/^[\s\t]*$/);if(!r&&!s){var o=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),a=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),l=e.match("^\\t{"+(t.currentIndent-1)+"}}");o?t.parseNodeBegin(e,o):a?t.parseNodeProperty(e,a,i[++n]):l?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)}})),this.allNodes},parseNodeBegin:function(e,t){var i=t[1].trim().replace(/^"/,"").replace(/"$/,""),n=t[2].split(",").map((function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")})),r={name:i},s=this.parseNodeAttr(n),o=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(i,r):i in o?("PoseNode"===i?o.PoseNode.push(r):void 0!==o[i].id&&(o[i]={},o[i][o[i].id]=o[i]),""!==s.id&&(o[i][s.id]=r)):"number"==typeof s.id?(o[i]={},o[i][s.id]=r):"Properties70"!==i&&(o[i]="PoseNode"===i?[r]:r),"number"==typeof s.id&&(r.id=s.id),""!==s.name&&(r.attrName=s.name),""!==s.type&&(r.attrType=s.type),this.pushStack(r)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var i="",n="";return e.length>1&&(i=e[1].replace(/^(\w+)::/,""),n=e[2]),{id:t,name:i,type:n}},parseNodeProperty:function(e,t,i){var n=t[1].replace(/^"/,"").replace(/"$/,"").trim(),r=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===n&&","===r&&(r=i.replace(/"/g,"").replace(/,$/,"").trim());var s=this.getCurrentNode();if("Properties70"!==s.name){if("C"===n){var o=r.split(",").slice(1),a=parseInt(o[0]),l=parseInt(o[1]),c=r.split(",").slice(3);n="connections",function(e,t){for(var i=0,n=e.length,r=t.length;i<r;i++,n++)e[n]=t[i]}(r=[a,l],c=c.map((function(e){return e.trim().replace(/^"/,"")}))),void 0===s[n]&&(s[n]=[])}"Node"===n&&(s.id=r),n in s&&Array.isArray(s[n])?s[n].push(r):"a"!==n?s[n]=r:s.a=r,this.setCurrentProp(s,n),"a"===n&&","!==r.slice(-1)&&(s.a=w(r))}else this.parseNodeSpecialProperty(e,n,r)},parseNodePropertyContinued:function(e){var t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=w(t.a))},parseNodeSpecialProperty:function(e,t,i){var n=i.split('",').map((function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")})),r=n[0],s=n[1],o=n[2],a=n[3],l=n[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":l=parseFloat(l);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":l=w(l)}this.getPrevNode()[r]={type:s,type2:o,flag:a,value:l},this.setCurrentProp(this.getPrevNode(),r)}},l.prototype={constructor:l,parse:function(e){var t=new c(e);t.skip(23);for(var i=t.getUint32(),n=new h;!this.endOfContent(t);){var r=this.parseNode(t,i);null!==r&&n.add(r.name,r)}return n},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var i={},n=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();var s=e.getUint8(),o=e.getString(s);if(0===n)return null;for(var a=[],l=0;l<r;l++)a.push(this.parseProperty(e));var c=a.length>0?a[0]:"",h=a.length>1?a[1]:"",u=a.length>2?a[2]:"";for(i.singleProperty=1===r&&e.getOffset()===n;n>e.getOffset();){var d=this.parseNode(e,t);null!==d&&this.parseSubNode(o,i,d)}return i.propertyList=a,"number"==typeof c&&(i.id=c),""!==h&&(i.attrName=h),""!==u&&(i.attrType=u),""!==o&&(i.name=o),i},parseSubNode:function(e,t,i){if(!0===i.singleProperty){var n=i.propertyList[0];Array.isArray(n)?(t[i.name]=i,i.a=n):t[i.name]=n}else if("Connections"===e&&"C"===i.name){var r=[];i.propertyList.forEach((function(e,t){0!==t&&r.push(e)})),void 0===t.connections&&(t.connections=[]),t.connections.push(r)}else if("Properties70"===i.name){Object.keys(i).forEach((function(e){t[e]=i[e]}))}else if("Properties70"===e&&"P"===i.name){var s,o=i.propertyList[0],a=i.propertyList[1],l=i.propertyList[2],c=i.propertyList[3];0===o.indexOf("Lcl ")&&(o=o.replace("Lcl ","Lcl_")),0===a.indexOf("Lcl ")&&(a=a.replace("Lcl ","Lcl_")),s="Color"===a||"ColorRGB"===a||"Vector"===a||"Vector3D"===a||0===a.indexOf("Lcl_")?[i.propertyList[4],i.propertyList[5],i.propertyList[6]]:i.propertyList[4],t[o]={type:a,type2:l,flag:c,value:s}}else void 0===t[i.name]?"number"==typeof i.id?(t[i.name]={},t[i.name][i.id]=i):t[i.name]=i:"PoseNode"===i.name?(Array.isArray(t[i.name])||(t[i.name]=[t[i.name]]),t[i.name].push(i)):void 0===t[i.name][i.id]&&(t[i.name][i.id]=i)},parseProperty:function(e){var t=e.getString(1);switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var i=e.getUint32();return e.getArrayBuffer(i);case"S":i=e.getUint32();return e.getString(i);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var n=e.getUint32(),r=e.getUint32(),s=e.getUint32();if(0===r)switch(t){case"b":case"c":return e.getBooleanArray(n);case"d":return e.getFloat64Array(n);case"f":return e.getFloat32Array(n);case"i":return e.getInt32Array(n);case"l":return e.getInt64Array(n)}void 0===Bu&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var o=new c(new Bu.Inflate(new Uint8Array(e.getArrayBuffer(s))).decompress().buffer);switch(t){case"b":case"c":return o.getBooleanArray(n);case"d":return o.getFloat64Array(n);case"f":return o.getFloat32Array(n);case"i":return o.getInt32Array(n);case"l":return o.getInt64Array(n)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}},c.prototype={constructor:c,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return!(1&~this.getUint8())},getBooleanArray:function(e){for(var t=[],i=0;i<e;i++)t.push(this.getBoolean());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],i=0;i<e;i++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,4294967295===(e=4294967295&~e)&&(t=t+1&4294967295),-(4294967296*t+(e=e+1&4294967295))):4294967296*t+e},getInt64Array:function(e){for(var t=[],i=0;i<e;i++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],i=0;i<e;i++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],i=0;i<e;i++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getString:function(e){for(var t=[],i=0;i<e;i++)t[i]=this.getUint8();var n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),jl(new Uint8Array(t))}},h.prototype={constructor:h,add:function(e,t){this[e]=t}};var p=[];function m(e,t,i,n){var r;switch(n.mappingType){case"ByPolygonVertex":r=e;break;case"ByPolygon":r=t;break;case"ByVertice":r=i;break;case"AllSame":r=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}"IndexToDirect"===n.referenceType&&(r=n.indices[r]);var s=r*n.dataSize,o=s+n.dataSize;return function(e,t,i,n){for(var r=i,s=0;r<n;r++,s++)e[s]=t[r];return e}(p,n.buffer,s,o)}var v=new Me,x=new de;function y(e){var t,i=new be,n=new be,r=new be,s=new be,o=new be,a=new be,l=new be,c=new be,h=new be,u=new be,d=new be,p=e.inheritType?e.inheritType:0;(e.translation&&i.setPosition(x.fromArray(e.translation)),e.preRotation)&&((t=e.preRotation.map($.degToRad)).push(e.eulerOrder),n.makeRotationFromEuler(v.fromArray(t)));e.rotation&&((t=e.rotation.map($.degToRad)).push(e.eulerOrder),r.makeRotationFromEuler(v.fromArray(t)));e.postRotation&&((t=e.postRotation.map($.degToRad)).push(e.eulerOrder),s.makeRotationFromEuler(v.fromArray(t)));e.scale&&o.scale(x.fromArray(e.scale)),e.scalingOffset&&l.setPosition(x.fromArray(e.scalingOffset)),e.scalingPivot&&a.setPosition(x.fromArray(e.scalingPivot)),e.rotationOffset&&c.setPosition(x.fromArray(e.rotationOffset)),e.rotationPivot&&h.setPosition(x.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(u=e.parentMatrixWorld);var m=n.multiply(r).multiply(s),f=new be;u.extractRotation(f),(new be).copyPosition(u);var g=new be;g.getInverse(f).multiply(u);var y=new be;if(0===p)y.copy(f).multiply(m).multiply(g).multiply(o);else if(1===p)y.copy(f).multiply(g).multiply(m).multiply(o);else{var b=(new be).getInverse(o),w=(new be).multiply(g).multiply(b);y.copy(f).multiply(m).multiply(w).multiply(o)}var _=(new be).getInverse(h),M=(new be).getInverse(a),S=new be;S.copy(i).multiply(c).multiply(h).multiply(n).multiply(r).multiply(s).multiply(_).multiply(l).multiply(a).multiply(o).multiply(M);var C=(new be).copyPosition(S),T=(new be).copy(u).multiply(C);return d.copyPosition(T),S=(new be).multiply(d).multiply(y)}function b(e){var t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===(e=e||0)?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function w(e){return e.split(",").map((function(e){return parseFloat(e)}))}function _(e,t,i){return void 0===t&&(t=0),void 0===i&&(i=e.byteLength),jl(new Uint8Array(e,t,i))}function M(e,t,i){return e.slice(0,t).concat(i).concat(e.slice(t))}return n}();class ju{constructor(e={}){this.pxlTimer=null,this.pxlUtils=null,this.pxlQuality=null,this.pxlVideo=null,this.pxlCamera=null,this.pxlAutoCam=null,this.pxlUser=null,this.pxlEnv=null,this.pxlAnim=null,this.pxlDevice=null,this.pxlShaders=null,this.runDebugger=!1,this.assetRoot=this.findInDict(e,"assetRoot","images/assets/"),this.guiRoot=this.findInDict(e,"guiRoot","images/GUI/"),this.roomRoot=this.findInDict(e,"roomRoot","images/rooms/"),this.vidRoot=this.findInDict(e,"vidRoot","images/screenContent/"),this.workerList=[]}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlUtils=e.pxlUtils,this.pxlQuality=e.pxlQuality,this.pxlVideo=e.pxlVideo,this.pxlCamera=e.pxlCamera,this.pxlAutoCam=e.pxlAutoCam,this.pxlUser=e.pxlUser,this.pxlEnv=e.pxlEnv,this.pxlAnim=e.pxlAnim,this.pxlDevice=e.pxlDevice,this.pxlShaders=e.pxlShaders}log(...e){this.runDebugger&&(console.log("---"),e.forEach((e=>{console.log(e)})))}findInDict(e,t,i){return e.hasOwnProperty(t)?e[t]:(e[t]=i,i)}checkForUserData(e,t,i){if(i.hasOwnProperty("userData")&&(i.userData.hasOwnProperty("GlowPass")&&i.userData.GlowPass&&(e.geoList.GlowPass||(e.geoList.GlowPass=[]),e.geoList.GlowPass.push(i)),i.userData.hasOwnProperty("GlowPassMask")&&i.userData.GlowPass&&(e.geoList.GlowPassMask||(e.geoList.GlowPassMask=[]),e.geoList.GlowPassMask.push(i)),i.userData.hasOwnProperty("castShadow")&&i.userData.castShadow&&(i.castShadow=!0),i.userData.hasOwnProperty("receiveShadow")&&i.userData.receiveShadow&&(i.receiveShadow=!0),i.userData.hasOwnProperty("Shader")&&""!=i.userData.Shader&&(i.userData.Shader.trim(),e.shaderGeoList||(e.shaderGeoList={}),e.shaderGeoList[i.name]=i),i.userData.hasOwnProperty("Emitter")&&""!=i.userData.Emitter&&(e.emitterList||(e.emitterList={}),e.emitterList[i.userData.Emitter]||(e.emitterList[i.userData.Emitter]={},e.emitterList[i.userData.Emitter].Emitter=[],e.emitterList[i.userData.Emitter].Particles=[]),e.emitterList[i.userData.Emitter].Emitter.push(i)),i.userData.hasOwnProperty("Hover")&&i.userData.Hover&&(e.hoverableExists=!0,e.hoverableList.push(i)),i.userData.hasOwnProperty("Click")&&i.userData.Click&&(e.clickableExists=!0,e.clickableList.push(i)),this.checkObjectInstancing(e,t,i),i.userData.hasOwnProperty("Scripted"))){e.geoList.hasOwnProperty("Scripted")||(e.geoList.Scripted={}),e.geoList.Scripted[i.name]=i,i.children.forEach((n=>{if(n.name.includes("Geo")){let r=i.position,s=i.rotation,o=i.scale;n.position.set(r.x,r.y,r.z),n.rotation.set(s.x,s.y,s.z),n.scale.set(o.x,o.y,o.z),n.updateMatrix(),n.children.forEach((i=>{this.checkForUserData(e,t,i),"Group"==i.type&&(i.position.set(r.x+i.position.x,r.y+i.position.y,r.z+i.position.z),i.rotation.set(s.x,s.y,s.z),i.scale.set(o.x,o.y,o.z)),i.updateMatrix()}))}else if(n.name.includes("Colliders")){let e=i.position,t=i.rotation,r=i.scale;n.position.set(e.x,e.y,e.z),n.rotation.set(t.x,t.y,t.z),n.scale.set(r.x,r.y,r.z),n.updateMatrix(),n.visible=!1}}))}}canAppendChildren(e,t){if("Group"!=t.type)return!1;let i=!0;return e.geoList.hasOwnProperty("Scripted")&&e.geoList.Scripted.hasOwnProperty(t.name)&&(console.log(e.geoList.Scripted,e.geoList.Scripted.hasOwnProperty(t.name),t.name),i=!1),i}canAddToScene(e,t){let i=!0;return t.hasOwnProperty("userData")&&t.userData.hasOwnProperty("Instance")&&e.hasOwnProperty("baseInstancesNames")&&e.baseInstancesNames.hasOwnProperty(t.userData.Instance)&&(i=!1),i}checkIsGlassLiquid(e,t,i,n){let r=!1;if(i.userData.hasOwnProperty("isGlass")&&i.userData.isGlass&&(r=!0),i.userData.hasOwnProperty("isLiquid")&&i.userData.isLiquid&&(r=!0),!r)return!1;if(this.log("Glass Detected - ",i.name),!e.glassGroup){let i=new Zr;e.glassGroup=i,t.add(i)}let s=i.material.clone();i.material=s,i.material.transparent=!0,i.material.opacity=.5,i.material.shininess=20,i.material.specular=i.material.color.clone(),i.material.specular.r=.5*i.material.specular.r+.1,i.material.specular.g=.5*i.material.specular.g+.1,i.material.specular.b=.5*i.material.specular.b+.1,i.material.side=1,i.material.depthWrite=!1,i.matrixAutoUpdate=!1,i.renderOrder=1,e.glassList.push(i),e.glassGroup.add(i);let o=i.geometry.clone(),a=i.material.clone();a.copy(i.material);let l=new Mi(o,a);l.name=i.name+"_Front",l.material.shininess=40,l.material.side=0,l.matrixAutoUpdate=!1,l.renderOrder=2;let c=i.position,h=i.rotation,u=i.scale;return l.rotation.set(h.x,h.y,h.z),l.position.set(c.x,c.y,c.z),l.scale.set(u.x,u.y,u.z),l.updateMatrix(),i.parent.add(l),e.glassList.push(l),e.glassGroup.add(l),r}checkObjectInstancing(e,t,i){if(!e.hasOwnProperty("baseInstancesNames")||!e.hasOwnProperty("baseInstancesList"))return!1;if(i.hasOwnProperty("userData")&&i.userData.hasOwnProperty("Instance")&&e.baseInstancesList.hasOwnProperty(i.userData.Instance)){let t=i.name;this.log("Generate Instance - ",t),e.geoList.hasOwnProperty("InstancesObjects")||(e.geoList.InstancesObjects={});let n=i.position,r=i.rotation,s=i.scale,o=e.baseInstancesList[i.userData.Instance];if("Mesh"==i.type){const n=new Os(o.geometry,o.material,i.geometry.attributes.position.count);n.instanceMatrix.setUsage(K),n.name=t+"Geo";const r=new be,s=new de,a=new de,l=new ce,c=new de(1,1,1),h=i.geometry.attributes.hasOwnProperty("color");let u={};for(let e=0;e<i.geometry.attributes.position.count;e++){s.fromBufferAttribute(i.geometry.attributes.position,e);let t=s.toArray();if(t=t.join(","),!u.hasOwnProperty(t)){a.fromBufferAttribute(i.geometry.attributes.normal,e);let o=new Me(0,2*Math.random()*Math.PI,0);l.setFromEuler(o);let d=c;if(h){let t=i.geometry.attributes.color.getX(e);d=new de(t,t,t)}r.compose(s,l,d),n.setMatrixAt(e,r),u[t]=!0}}n.visible=!0,n.updateMatrix(),e.geoList.InstancesObjects[t]=n,i.parent.add(n),i.visible=!1,i.parent.remove(i)}else{const a=new Os(o.geometry,o.material,1);a.instanceMatrix.setUsage(K),a.name=t+"Geo";let l=!1;if(i.userData.hasOwnProperty("fixInstMatrix")&&(l=!!i.userData.fixInstMatrix),l)a.rotation.set(r.x,r.y,r.z),a.position.set(n.x,n.y,n.z),a.scale.set(s.x,s.y,s.z);else{const e=new be;e.compose(n,(new ce).setFromEuler(r),s),a.setMatrixAt(0,e)}a.visible=!0,a.updateMatrix(),e.geoList.InstancesObjects[t]=a,i.parent.add(a),i.visible=!1,i.parent.remove(i)}}}loadSceneFBX(e,t,i,n,r,s){""!=r&&(this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[r]=0);var o=new Hu;return o.load(e,(e=>{let t=e.children,i={},n=[];t.forEach(((e,t)=>{n.push(e.name),i[e.name]=t})),n.forEach((e=>{if(e.includes("Camera")){t[i[e]].children.forEach(((e,t)=>{if(e.matrixAutoUpdate=!1,e.name.includes("Position")){let t=e.position.clone();this.pxlCamera.cameraPrevPos=t.clone(),this.pxlCamera.camera.position.copy(t),this.pxlCamera.cameraPos.copy(t),this.pxlCamera.camera.updateMatrixWorld(),this.pxlCamera.cameraBooted=!0,this.pxlEnv.camInitPos=t,this.pxlEnv.camThumbPos=this.pxlEnv.camThumbPos.clone().add(t.clone())}else if(e.name.includes("LookAt")){let t=e.position.clone();this.pxlCamera.cameraAimTarget.position.copy(t),this.pxlCamera.camera.lookAt(t),this.pxlCamera.camera.updateMatrixWorld(),this.pxlCamera.cameraPrevLookAt=new Zh,this.pxlEnv.camInitLookAt=t,this.pxlEnv.camThumbLookAt=this.pxlEnv.camThumbLookAt.clone().add(t.clone())}else if(e.name.includes("ReturnPosition")){let t=e.position.clone();this.pxlEnv.camReturnPos=t}else if(e.name.includes("ReturnLookAt")){let t=e.position.clone();this.pxlEnv.camReturnLookAt=t}})),this.pxlDevice.touchMouseData.initialQuat=this.pxlCamera.camera.quaternion.clone()}if(e.includes("Items")){let n=t[i[e]].children,r=null,o=null,a=null,l=null;for(;n.length>0;){let e=n.pop();if("Group"==e.type){e.children.forEach((t=>{t.name.includes("Item")?(e.name.includes("LowGravity")?(null==o&&(o=new Ui({uniforms:{color:{value:t.material.emissive.clone()},alphaMap:{type:"t",value:t.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.objects.itemVert(),fragmentShader:this.pxlShaders.objects.itemFrag(),transparent:!0,side:2,depthTest:!0,depthWrite:!1})),t.material=o):e.name.includes("LizardKing")?(null==a&&(a=t.material.clone(),a.emissiveMap=a.map,a.emissive=new At(8421504)),t.material=a):e.name.includes("StarField")||e.name.includes("InfinityZoom")&&(null==l&&(l=new Ui({uniforms:{color:{value:t.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.objects.itemZoomFrag(),transparent:!0,side:2,depthTest:!0,depthWrite:!0})),t.material=l),this.pxlUser.itemList[e.name]=t):t.name.includes("ItemBase")&&(null==r&&(r=new Ui({uniforms:{color:{value:t.material.emissive.clone()},alphaMap:{type:"t",value:t.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemBaseRotateRate}},vertexShader:this.pxlShaders.objects.itemBaseVert(),fragmentShader:this.pxlShaders.objects.itemBaseFrag(),transparent:!0,side:2,depthTest:!0,depthWrite:!1})),t.material=r,this.pxlUser.itemBaseList.push(t))})),s[0].add(e),this.pxlUser.itemGroupList[e.name]=e,this.pxlUser.itemListNames.push(e.name)}}}})),""!=r&&(this.pxlEnv.geoList[r]=e,this.pxlEnv.geoLoadList[r]=1),this.pxlEnv.geoLoadList[r]=1}),void 0,(e=>{""!=r&&(this.pxlEnv.geoLoadList[r]=1)})),o}loadRoomFBX(e,t,i,n){""==i&&(i=e.roomName),this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[i]=0;let r=e.scene;var s=new Hu;return s.load(t,(t=>{let s=t.children,o={},a=[];if(s.forEach(((e,t)=>{let i=e.name.split("_")[0];a.push(i),o[i]=t})),a.indexOf("Camera")>-1){let t=s[o.Camera].children;this.log("Camera - ",s[o.Camera]),t.forEach(((t,i)=>{if(t.matrixAutoUpdate=!1,t.name.includes("Position")){let i=t.position.clone();e.cameraBooted=!0,e.camInitPos=i}else if(t.name.includes("LookAt")){let i=t.position.clone();e.camInitLookAt=i}else if(t.name.includes("ReturnPosition")){let i=t.position.clone();e.camReturnPos=i}else if(t.name.includes("ReturnLookAt")){let i=t.position.clone();e.camReturnLookAt=i}}))}if(a.indexOf("AutoCamPaths")>-1){let t=s[o.AutoCamPaths].children;for(this.log("AutoCamPaths - ",s[o.AutoCamPaths]),this.pxlAutoCam.autoCamPaths[e.roomName]=[];t.length>0;){let i=t.pop();if("Group"==i.type){let t={};i.children.forEach((e=>{e.matrixAutoUpdate=!1,t[e.name]=e})),i.visible=!1,i.matrixAutoUpdate=!1,r.add(i),this.pxlAutoCam.autoCamPaths[e.roomName].push(t)}}}if(a.indexOf("Instances")>-1&&0==this.pxlQuality.detailLimit){let t=[...s[o.Instances].children];this.log("Instances - ",s[o.Instances]),t.length>0&&(e.hasOwnProperty("baseInstancesNames")||(e.baseInstancesNames=[]),e.hasOwnProperty("baseInstancesList")||(e.baseInstancesList={}),t.forEach(((t,i)=>{this.checkForUserData(e,r,t),e.baseInstancesNames.push(t),e.baseInstancesList[t.name]=t})))}if(a.indexOf("Lights")>-1){let t=s[o.Lights].children;for(this.log("Lights - ",s[o.Lights]);t.length>0;){let i=t.pop();t.push(...i.children),i.type.includes("Light")&&(e.hasOwnProperty("lightList")||(e.lightList={}),e.geoList.hasOwnProperty("lights")||(e.geoList.lights=[]),"PointLight"==i.type&&(i.decay=3,i.distance=20*i.intensity,i.intensity=2),e.lightList.hasOwnProperty(i.type)||(e.lightList[i.type]=[]),e.lightList[i.type].push(i),e.geoList.lights.push(i),i.matrixAutoUpdate=!1,r.add(i))}}if(a.includes("Scene")||a.includes("MainScene")){let t=o.Scene||o.MainScene,i=s[t].children;this.log("MainScene - ",s[t]);let a=-1;for(;a<i.length&&(a++,!(a>=i.length));){let t=i[a];if(this.checkForUserData(e,r,t),t.isMesh){!t.userData.hasOwnProperty("Show")||t.userData.Show&&0!=t.userData.Show||(t.visible=!1),e.geoList[t.name]=t;let i=0;if(t.userData.doubleSided&&(i=2),n.hasOwnProperty(t.name)){let e=null;t.material.map&&(e=t.material.map),t.material=n[t.name],e&&(t.material.uniforms.hasOwnProperty("diffuse")&&(t.material.uniforms.diffuse.value=e),t.material.hasOwnProperty("emissiveMap")&&(t.material.emissiveMap=e,t.material.emissive.r>0&&(t.material.emissiveIntensity=t.material.emissive.r))),t.matrixAutoUpdate=!1;continue}let s=t.material;Array.isArray(t.material)||(s=[t.material]),this.checkIsGlassLiquid(e,r,t,s)||s.forEach((e=>{e.map&&!e.emissiveMap&&e.emissive.r>0&&(e.emissiveMap=e.map,e.emissiveIntensity=e.emissive.r,e.emissive=new At(16777215)),e.side=i}))}else t.type.includes("Light")?(e.lightList.hasOwnProperty(t.type)||(e.lightList[t.type]=[]),e.lightList[t.type].push(t)):"Group"==t.type&&(e.geoList.hasOwnProperty("Scripted")&&Object.keys(e.geoList.Scripted),i.push(...t.children))}r.add(s[t])}if(a.indexOf("Glass")>-1){let t=s[o.Glass].children;if(this.log("Glass - ",s[o.Glass]),t.length>0){if(!e.glassGroup){let t=new Zr;e.glassGroup=t,r.add(t)}for(;t.length>0;){let i=t.pop();if(t.push(...i.children),i.isMesh){this.checkForUserData(e,r,i);let t=i.material.clone();i.material=t,i.material.transparent=!0,i.material.opacity=.5,i.material.shininess=20,i.material.specular=i.material.color.clone(),i.material.specular.r=.5*i.material.specular.r+.1,i.material.specular.g=.5*i.material.specular.g+.1,i.material.specular.b=.5*i.material.specular.b+.1,i.material.side=1,i.material.depthWrite=!1,i.matrixAutoUpdate=!1,i.renderOrder=1,e.glassList.push(i),e.glassGroup.add(i);let n=i.geometry.clone(),s=i.material.clone();s.copy(i.material);let o=new Mi(n,s);o.material.shininess=40,o.material.side=0,o.matrixAutoUpdate=!1,o.renderOrder=2;let a=i.position,l=i.rotation,c=i.scale;o.rotation.set(l.x,l.y,l.z),o.position.set(a.x,a.y,a.z),o.scale.set(c.x,c.y,c.z),o.updateMatrix(),r.add(o),e.glassList.push(o),e.glassGroup.add(o)}}}}if(a.indexOf("Colliders")>-1){let t=s[o.Colliders];this.log("Colliders - ",s[o.Colliders]);let i=t.children;e.collidersExist=i.length>0;for(let t=0;t<i.length;++t){let n=i[t].name,s=i[t].children;for(;s.length>0;){let t=s.pop();if(s.push(...t.children),t.isMesh){t.visible=!1;let i="noAxis";t.userData.checkX&&t.userData.checkZ&&(i=~~(t.userData.checkX>0)+""+~~(t.userData.checkZ>0)),"ColliderWalls"==n?(e.antiColliderActive=!0,e.antiColliderList[i].push(t)):"ColliderTops"==n?(e.antiColliderTopActive=!0,e.antiColliderTopList[i].push(t)):("RoomWarpZone"==n&&e.roomWarp.push(t),e.colliderActive=!0,e.colliderList[i].push(t)),t.matrixAutoUpdate=!1,r.add(t),e.geoList[t.name]=t}}}}if(a.indexOf("PortalExit")>-1){let t=s[o.PortalExit].children;for(this.log("PortalExit - ",s[o.PortalExit]);t.length>0;){let i=t.pop();i.matrixAutoUpdate=!1,e.portalList[i.name]=i}}if(a.indexOf("FlatColor")>-1){let t=s[o.FlatColor].children;for(this.log("FlatColor - ",s[o.FlatColor]);t.length>0;){let i=t.pop();if(t.push(...i.children),i.isMesh){this.checkForUserData(e,r,i);let t=new Nt({color:i.material.color.clone()});t.side=0,t.flatShading=!0,i.material=t,i.matrixAutoUpdate=!1,r.add(i)}}}if(a.indexOf("LambertColor")>-1){let t=s[o.LambertColor].children;for(this.log("LambertColor - ",s[o.LambertColor]);t.length>0;){let i=t.pop();if(t.push(...i.children),i.isMesh){this.checkForUserData(e,r,i);let t=new Ea;if(i.material.map){let e=i.material.map.clone();t.map=e,t.emissiveMap=e,t.emissiveIntensity=.5,i.material=t}else t.color=i.material.color.clone(),t.emissive=i.material.emissive.clone(),t.side=0,t.flatShading=!0,i.material=t;i.matrixAutoUpdate=!1,r.add(i)}}}if(a.indexOf("Sky")>-1){let t=s[o.Sky].children;for(this.log("Sky - ",s[o.Sky]);t.length>0;){let i=t.pop();if(t.push(...i.children),i.isMesh){let t=new Ui({uniforms:{diffuse:{type:"t",value:i.material.map},envDiffuse:{type:"t",value:null},noiseTexture:{type:"t",value:this.pxlEnv.cloud3dTexture},fogColor:{value:r.fog.color},time:{value:this.pxlTimer.msRunner},camNear:{type:"f",value:e.camera.near},camFar:{type:"f",value:.85*e.camera.far},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.scene.skyObjectVert(),fragmentShader:this.pxlShaders.scene.skyObjectFrag()});i.geometry.computeFaceNormals(),i.geometry.computeVertexNormals(),i.material=t,i.matrixAutoUpdate=!1,i.frustumCulled=!1,i.layers.set(this.pxlEnv.renderLayerEnum.SKY),e.geoList[i.name]=i,e.textureList[i.name]=t,r.add(i)}}}if(a.indexOf("AnimatedTextures")>-1){let t=s[o.AnimatedTextures].children;for(this.log("AnimatedTextures - ",s[o.AnimatedTextures]);t.length>0;){let i=t.pop();if(t.push(...i.children),i.isMesh){this.checkForUserData(e,r,i);let t=new Ui({uniforms:{time:{value:this.pxlTimer.msRunner},glowTexture:{type:"t",value:i.material.map},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},glowColor:{value:new Zh(.01,.35,.55)},intensity:{type:"f",value:.35},rate:{type:"f",value:2},freq:{type:"f",value:1}},vertexShader:this.pxlShaders.animated.animTextureVert(),fragmentShader:this.pxlShaders.animated.animTextureFrag(),transparent:!0,side:0});i.geometry.computeFaceNormals(),i.geometry.computeVertexNormals(),i.material=t,i.matrixAutoUpdate=!1,r.add(i)}}}if(a.indexOf("ScrollingTextures")>-1){let t=s[o.ScrollingTextures].children;this.log("ScrollingTextures - ",s[o.ScrollingTextures]);let i=1;for(;t.length>0;){i+=1;let n=t.pop();if(t.push(...n.children),n.isMesh){this.checkForUserData(e,r,n);let t=n.name,s=.05;t.indexOf("_")>-1&&(s=t.split("_")[1],s=.01*parseInt(s));let o=new Ui({uniforms:{scrollTexture:{type:"t",value:n.material.map},time:{value:this.pxlTimer.msRunner},speed:{value:s},seed:{type:"f",value:1.1423*i},boostPerc:{value:1}},vertexShader:this.pxlShaders.animated.scrollingTextureVert(),fragmentShader:this.pxlShaders.animated.scrollingTextureFrag(),transparent:!0,side:0});n.geometry.computeFaceNormals(),n.geometry.computeVertexNormals(),n.material=o,n.matrixAutoUpdate=!1,r.add(n)}}}if(a.indexOf("UserScreens")>-1){let t=s[o.UserScreens].children;this.log("UserScreens - ",s[o.UserScreens]);let i=0,n=[new Zh(1,0,0),new Zh(0,1,0),new Zh(0,0,1)],a=[this.assetRoot+"DJ_Vector_Masks_1.jpg",this.assetRoot+"DJ_Vector_Masks_2.jpg",this.assetRoot+"DJ_Vector_Masks_3.jpg"],l=0,c=0,h=n.length;for(;t.length>0;){let s=t.pop();if(t.push(...s.children),s.isMesh){let t=new Ui({uniforms:{camExists:{type:"f",value:0},time:{value:this.pxlTimer.msRunner},seed:{type:"f",value:1.1423*i},alpha:{type:"f",value:1},boostPerc:{value:e.userScreenIntensity},scale:{value:new Yh(100,100)},ratio:{value:new Yh(1,1)},videoFeed:{type:"t",value:null},cloudNoise:{type:"t",value:this.pxlEnv.cloud3dTexture},maskChannel:{value:n[l]},maskMap:{type:"t",value:this.pxlUtils.loadTexture(a[c])}},vertexShader:e.userScreenVert,fragmentShader:e.userScreenFrag,transparent:!0,side:0});s.geometry.computeFaceNormals(),s.geometry.computeVertexNormals(),s.material=t,s.matrixAutoUpdate=!1,e.pxlEnv.camScreenData.screenGeoList.push(s),r.add(s),i+=1,l=i%h,c=Math.floor(i/3)%h}}}if(a.indexOf("Items")>-1){let e=s[o.Items].children;for(this.log("Items - ",s[o.Items]);e.length>0;){let t=e.pop();if("Group"==t.type){let e=t.children;e.length>0&&(e.forEach((e=>{if(e.name.includes("Item")){let i=new Ui({uniforms:{color:{value:e.material.emissive.clone()},alphaMap:{type:"t",value:e.material.map},cloudNoise:{type:"t",value:this.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemRotateRate}},vertexShader:this.pxlShaders.objects.itemVert(),fragmentShader:this.pxlShaders.objects.itemFrag(),transparent:!0,side:2,depthTest:!0,depthWrite:!1});e.material=i,this.pxlUser.itemList[t.name]=e}else if(e.name.includes("Base")){let t=new Ui({uniforms:{color:{value:e.material.emissive.clone()},alphaMap:{type:"t",value:e.material.map},cloudNoise:{type:"t",value:this.cloud3dTexture},time:{value:this.pxlTimer.msRunner},intensity:{type:"f",value:1.5},rate:{type:"f",value:this.pxlUser.itemBaseRotateRate}},vertexShader:this.pxlShaders.objects.itemBaseVert(),fragmentShader:this.pxlShaders.objects.itemBaseFrag(),transparent:!0,side:2,depthTest:!0,depthWrite:!1});e.material=t,this.pxlUser.itemBaseList.push(e)}})),r.add(t),this.pxlUser.itemGroupList[t.name]=t,this.pxlUser.itemListNames.push(t.name))}}}if(a.includes("Scripted")){let t=s[o.Scripted].children;for(this.log("Scripted - ",s[o.Scripted]);t.length>0;){let i=t.pop();i.isMesh&&(e.geoList[i.name]=i,r.add(i))}}if(a.includes("Clickable")){let t=s[o.Clickable];this.log("Clickable - ",s[o.Clickable]);let i=t.children;for(let t=0;t<i.length;++t){let n=i[t].name,s=i[t].children;for(;s.length>0;){let t=s.pop();if(s.push(...t.children),t.isMesh){(new Nt).color=new At(16777215),t.material.emissive=new At(4473924),t.material.emissiveMap=t.material.map,t.matrixAutoUpdate=!1,e.objectClickableObjectList[t.name]||(e.objectClickableObjectList[t.name]={}),e.objectClickableObjectList[t.name][n]=t,e.objectClickable.push(t),r.add(t),"Hover"==n&&(t.visible=!1)}}}}if(a.includes("Markers")){let t=s[o.Markers].children;for(this.log("Markers - ",s[o.Markers]);t.length>0;){let i=t.pop();e.marker[i.name]=i.position}}this.pxlEnv.geoList[i]=t,this.pxlEnv.geoLoadList[i]=1,e.fbxPostLoad()}),null,(e=>{""!=i&&(this.pxlEnv.geoLoadList[i]=1)})),s}loadAnimFBX(e,t,i,n,r){""==t&&(t=e.roomName),this.pxlEnv.geoLoadListComplete=0,this.pxlEnv.geoLoadList[t]=0;let s=e.scene;var o=new Hu;return o.load(i,(i=>{let o=i.children,a=[];o.forEach(((e,t)=>{let i=e.name.split("_")[0];a.push(i)})),i.traverse((t=>{this.checkForUserData(e,s,t)})),this.pxlAnim.initObject(t,i),this.log("Animation FBX - ",a[0]),s.add(i),i.frustumCulled=!1;var l=new Hu;let c=[];Object.keys(n).forEach((e=>{let i=n[e],r=new Promise(((n,r)=>{l.load(i,(r=>{0==r.animations.length&&(this.log("No animations found in file",i),this.log(r),n()),this.pxlAnim.addClips(t,e,r),this.log("Animation Loaded",e),n()}),null,(e=>{this.log("Animation Load Error"),this.log(e),r(e)}))}));c.push(r)})),Promise.all(c).then((()=>{this.pxlAnim.setStateConnections(t,r),e.geoList[t]=i,this.pxlEnv.geoLoadList[t]=1,e.animPostLoad(t)})).catch((e=>{this.log("Error loading animations",e)}))}),null,(e=>{""!=t&&(this.pxlEnv.geoLoadList[t]=1)})),o}pxlShaderBuilder(e,t,i,n=null){var r,s={diffuse:{type:"t",value:null},time:{value:this.pxlTimer.msRunner}};null!=e&&(s=Object.assign({},s,e));let o={uniforms:s,vertexShader:t,fragmentShader:i};return n&&(o.defines=n),(r=new Ui(o)).transparent=!0,r.depthTest=!0,r}removeChildren(e){for(var t=0,i=e.children,n=0;n<i.length;++n)"Group"==i[n].type&&(e.remove(i[n]),t++);return t}findMesh(e){for(var t=null,i=e.children,n=0;n<i.length;++n)if("Mesh"==i[n].type){t=i[n];break}return t}getBBoxCentroid(e){try{var t=(new $e).setFromObject(e),i=t.min,n=t.max,r=(new Zh).addVectors(n,i).multiplyScalar(.5);e.userData={bbox:t,centroid:r},null!=mapBookHelper&&mapBookHelper.update()}catch(e){console.log("- - - - - - - - ERROR - - - - - - - -"),console.log("     Object does not exist.\n           - Error Info -"),console.log(e),console.log("- - - - - - - - - - - - - - - - - - -")}}loadScript(e){return new Promise(((t,i)=>{let n=document.createElement("script");n.type="text/javascript",n.src=e,n.async=!0,n.onreadystatechange=()=>{t(!0)},n.onload=()=>{t(!0)},document.head.appendChild(n)}))}xmlHttp(){return window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP")}static getURLContent(e){return new Promise(((t,i)=>{let n=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");n.open("GET",e),n.onload=e=>{4==n.readyState&&n.status>=200&&n.status<300?t(n.response):t(n.statusText)},n.onerror=()=>i(n.statusText),n.send()}))}getExternalHTML(e,t){if(!window.XMLHttpRequest)return void window.open(e,"_blank");let i=this.xmlHttp();i.onreadystatechange=function(){4==this.readyState&&200==this.status&&t&&"function"==typeof t&&t(i.responseText)},i.open("GET",e,!0),i.responceType="document",i.send()}fetchURLStatus(e,t,i){fetch(e,{method:"HEAD"}).then((e=>{t(e.status,i)})).catch((e=>{t(404,i)}))}urlExistsFallback(e){return new Promise(((t,i)=>{let n=this.xmlHttp();n.open("HEAD",e,!0),n.send(),console.log(n),n.onreadystatechange=function(){this.readyState==this.DONE&&t(this.status<400)},n.onerror=e=>{t(!1)},n.ontimeout=e=>{t(!1)}}))}urlExists(e){var t;return Worker&&(t=new Worker("js/pxlBase/webWorkers/FileWorkerIO.js")),new Promise(((i,n)=>{t?(t.onmessage=function(e){i(e.data.data)},t.onerror=function(e){i(!1)},t.postMessage({type:"urlExists",data:e})):this.urlExistsFallback(e).then((e=>{i(e)}))})).then((e=>(t&&t.terminate(),e))).catch((e=>(t&&t.terminate(),!1)))}}class zu{constructor(e,t=!1,i={}){this.pxlTimer=null,this.pxlCookie=null,this.pxlDevice=null,this.pxlEnv=null,this.msLog=0,this.prevMS=.001*(new Date).getTime(),this.autoQuality=!1,this.percent=1,this.verbose=e,this.screenResPerc=1,this.mBlurPercMult=t?.65:1,this.bloomPercMult=t?.65:1,this.bufferPercMult=1,this.renderTargetScale=10,this.percentSteps=[.3,.45,.85],this.fpsCounter=new Zh(30,0,.001*(new Date).getTime()),this.countAtLevel=0,this.shiftRate=.01,this.moduleQualityList=[],this.qualityStep=-1,this.qualityMaxSteps=3,this.qualityStepValues=[.25,.5,.75,1],this.benchmarkStart=-1,this.benchmarkTime=-1,this.benchmarkRating=-1,this.benchmarkTimes=[9,17],this.setFromBenchmark=!0,this.benchmarkQuality=1,this.benchmarkQualityRange=[.25,1],this.settingsQualityChoice=null,this.detailLimitOverride=Object.keys(i).includes("dlimit")?i.dlimit:0,this.detailLimit=null!=this.detailLimitOverride?this.detailLimitOverride:0,this.settings={leftRight:!0,mouse:!0,graphics:2,resolution:1,fog:2,bloom:!0,motion:!1},this.settingsLow={resolution:.5,fog:0,bloom:!1,motion:!1},this.settingsMedium={resolution:.75,fog:1,bloom:!0,motion:!1},this.settingsHigh={resolution:1,fog:2,bloom:!0,motion:!1},this.settingsCustom=null}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlCookie=e.pxlCookie,this.pxlDevice=e.pxlDevice,this.pxlEnv=e.pxlEnv}init(){if(null!=this.detailLimitOverride?this.detailLimit=this.detailLimitOverride:this.pxlCookie.hasCookie("detailLimit")&&(this.detailLimit=this.pxlCookie.parseCookie("detailLimit")),this.verbose>=$h&&console.log("Graphics Limiting is set to level ",this.detailLimit),this.setFromBenchmark=!this.pxlCookie.parseDict(this.settings),this.pxlCookie.hasCookie("leftRight")&&(this.settings.leftRight=this.pxlCookie.parseCookie("leftRight")),this.pxlCookie.hasCookie("mouse")&&(this.settings.mouse=this.pxlCookie.parseCookie("mouse")),Object.keys(this.settingsHigh),this.pxlCookie.hasCookie("qualitySetting")){let e=this.pxlCookie.parseCookie("qualitySetting");this.settings.graphics=e,this.settingsQualityChoice=e}}step(){this.mapFpsQualitCheck()}attachModule(e=null){e&&this.moduleQualityList.push(e)}startBenchmark(){this.pxlTimer.step(),this.benchmarkStart=this.pxlTimer.curMS}endBenchmark(){this.pxlTimer.step();let e=this.pxlTimer.curMS-this.benchmarkStart;this.benchmarkTime=e,this.benchmarkRating=1-Math.min(1,Math.max(0,(e-this.benchmarkTimes[0])/(this.benchmarkTimes[1]-this.benchmarkTimes[0]))),this.benchmarkQuality=this.benchmarkRating*(this.benchmarkQualityRange[1]-this.benchmarkQualityRange[0])+this.benchmarkQualityRange[0];let t=Math.min(1,Math.max(0,this.benchmarkRating));if(t=Math.ceil(Math.max(.05,t)*this.qualityMaxSteps)-1,this.qualityStep=t,this.setFromBenchmark)this.qualityStep,this.setQualityLevel(this.qualityStep);else{null==this.settingsQualityChoice&&(this.settingsQualityChoice=3),this.settingsCustom={},Object.keys(this.settingsHigh).forEach((e=>{this.settingsCustom[e]=this.settings[e]}))}this.setDependentSettings()}mapFpsQualitCheck(){if(this.pxlTimer.curMS-this.fpsCounter.z>1){this.fpsCounter.x=this.fpsCounter.y,this.fpsCounter.y=0,this.fpsCounter.z=this.pxlTimer.curMS;let e=1;this.fpsCounter.x<15&&(e=-1);let t=Math.min(1,Math.max(0,this.percent+this.shiftRate*e));this.autoQuality&&this.mapAutoQualityUpdate(t,!1)}this.fpsCounter.y+=1,this.pxlTimer.prevMS=this.pxlTimer.curMS}mapAutoQualityUpdate(e=null,t=!1){let i=Math.min(1,Math.max(0,e));i=Math.ceil(Math.max(.05,i)*this.qualityMaxSteps)-1,this.qualityStep=i}setGraphicsSettings(e=null,t=3){if(null==e)if(0==this.qualityStep)e=this.settingsLow;else if(1==this.qualityStep)e=this.settingsMedium;else{if(2!=this.qualityStep)return;e=this.settingsHigh}3==t&&this.checkCustomDict(),Object.keys(e).forEach((i=>{this.setComponentQuality(i,e[i]),this.settings[i]=e[i],3==t&&(this.settingsCustom[i]=e[i])})),this.setDependentSettings(),this.colliderPrevObjHit=null,null!=t&&(this.settings.graphics=t)}reapplySettings(){Object.keys(this.settingsLow).forEach((e=>{this.setComponentQuality(e,this.settings[e],!1)})),this.setDependentSettings()}setQualityLevel(e){this.pxlDevice.mobile&&(e=1),this.setQualityCookie(e),0==e?this.setLowQuality():1==e?this.setMediumQuality():2==e?this.setHighQuality():3==e&&this.setCustomQuality()}setLowQuality(){this.settingsQualityChoice=0,this.setGraphicsSettings(this.settingsLow,0)}setMediumQuality(){this.settingsQualityChoice=1,this.setGraphicsSettings(this.settingsMedium,1)}setHighQuality(){this.settingsQualityChoice=2,this.setGraphicsSettings(this.settingsHigh,2)}setCustomQuality(){this.checkCustomDict(),this.settingsQualityChoice=3,this.setGraphicsSettings(this.settingsCustom)}checkCustomDict(){if(null==this.settingsCustom){this.settingsCustom={};let e=this.settingsHigh;this.settingsQualityChoice&&(0==this.settingsQualityChoice?e=this.settingsLow:1==this.settingsQualityChoice?e=this.settingsMedium:2==this.settingsQualityChoice&&(e=this.settingsHigh)),Object.assign(this.settingsCustom,e)}}setQualityCookie(e){this.pxlCookie.setCookie("qualitySetting",e)}setComponentQuality(e,t,i=!0){switch(e){case"leftRight":case"mouse":this.settings[e]=t;break;case"resolution":this.screenResPerc=t,this.pxlDevice.resizeRenderResolution(),this.settings[e]=t,this.pxlEnv.geoList.snow&&this.pxlEnv.geoList.snow.material&&(this.pxlEnv.geoList.snow.material.uniforms.pointScale.value=this.pxlEnv.geoList.snow.pBaseScale*t);break;case"fog":this.pxlEnv.mapOverlayHeavyPass.enabled=2==t,this.pxlEnv.mapOverlayPass.enabled=1==t,this.pxlEnv.mapOverlaySlimPass.enabled=0==t,this.pxlEnv.mapBoxAAPass.enabled=2==t,this.pxlEnv.mapCrossAAPass.enabled=1==t,this.pxlEnv.portaluserScreenIntensity.x=1,this.pxlEnv.userScreenIntensity.x=.65,this.pxlEnv.userScreenIntensity.y=0,this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=0==t?.7:.3),this.settings[e]=t;break;case"bloom":this.pxlEnv.portaluserScreenIntensity.x=t?.4:1,this.pxlEnv.mapGlowPass.enabled=t,this.pxlEnv.roomBloomPass.enabled=t,this.pxlEnv.roomGlowPass.enabled=t,this.pxlEnv.userScreenIntensity.x=t?.65:.8,this.pxlEnv.userScreenIntensity.y=t?0:.8,this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=0==t?.7:.3),this.pxlEnv.mapMotionBlurPass.enabled=t,this.settings[e]=t;break;case"motion":this.pxlEnv.mapMotionBlurPass.enabled=t,this.settings[e]=t}i&&this.pxlCookie.setCookie(e,t)}setDependentSettings(){let e=1,t=0,i=.6;2==this.settings.fog?(this.pxlEnv.mapMotionBlurPass.enabled=!0,this.pxlEnv.mapOverlayHeavyPass.enabled=!0,this.pxlEnv.mapOverlayPass.enabled=!1,this.pxlEnv.mapOverlaySlimPass.enabled=!1,this.pxlEnv.mapBoxAAPass.enabled=!0,this.pxlEnv.mapCrossAAPass.enabled=!1,e=.5):1==this.settings.fog?(this.pxlEnv.mapMotionBlurPass.enabled=!0,this.pxlEnv.mapOverlayHeavyPass.enabled=!1,this.pxlEnv.mapOverlayPass.enabled=!0,this.pxlEnv.mapOverlaySlimPass.enabled=!1,this.pxlEnv.mapBoxAAPass.enabled=!1,this.pxlEnv.mapCrossAAPass.enabled=!0,e=.5):(this.pxlEnv.mapMotionBlurPass.enabled=!1,this.pxlEnv.mapOverlayPass.enabled=!1,this.pxlEnv.mapOverlaySlimPass.enabled=!0,this.pxlEnv.mapBoxAAPass.enabled=!1,this.pxlEnv.mapCrossAAPass.enabled=!1,e=.4),this.settings.bloom?(this.pxlEnv.mapGlowPass.enabled=!0,this.pxlEnv.roomBloomPass.enabled=!0,this.pxlEnv.roomGlowPass.enabled=!0,this.pxlEnv.userScreenIntensity.x=.65,this.pxlEnv.userScreenIntensity.y=0,t=1,i=.25):(this.pxlEnv.mapGlowPass.enabled=!1,this.pxlEnv.roomBloomPass.enabled=!1,this.pxlEnv.roomGlowPass.enabled=!1,this.pxlEnv.engine.setRenderTarget(this.pxlEnv.mapComposerGlow.renderTarget2),this.pxlEnv.engine.clear(),this.pxlEnv.engine.setRenderTarget(this.pxlEnv.roomGlowPass.renderTarget2),this.pxlEnv.engine.clear(),this.pxlEnv.engine.setRenderTarget(null),this.pxlEnv.userScreenIntensity.x=.8,this.pxlEnv.userScreenIntensity.y=0,e=1,t=0,i=.5);let n=this.pxlEnv.geoList.Circular_Gate;n&&(n.material.uniforms.bloomBoost.value=t),this.pxlEnv.geoList.HDRView&&(this.pxlEnv.geoList.HDRView.material.uniforms.cdMult.value=this.settings.bloom?.3:.7);let r=this.pxlEnv.geoList.CirculateGateVideoSphere;r&&(r.material.color.r=i,r.material.color.g=i,r.material.color.b=i),this.pxlEnv.portaluserScreenIntensity.x=e,this.pxlEnv.pxlCamera.colliderCurObjHit=null}}class Vu{constructor(e="pxlNav-",t="/",i=30){let n="-"==e.substring(-1)?e:e+"-";this.prepend=n,this.exp=i,this.path="path="+t,this.deleteDate="expires=Thu, 01 Jan 1970 00:00:01 GMT;",this.sub="_%_"}pullData(){}getExpiration(){let e=new Date;return e.setTime(e.getTime()+24*this.exp*60*60*1e3),"expires="+e.toGMTString()+";"}valueToString(e){let t=typeof e;return isNaN(Number(e))?"string"==t?"'"+e+"'":"boolean"==t?e?"true":"false":null==e?"null":isNaN(Number(e))?"NaN":e:e}variableToString(e){if(Array.isArray(e)){return"["+e.map((e=>Array.isArray(e)?this.variableToString(e):this.valueToString(e))).join(",")+"]"}return this.valueToString(e)}hasCookie(e){return document.cookie.includes(this.prepend+e)}readCookie(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g");return document.cookie.match(t)[0].split("=")[1].replace(this.prepend,"").replace(this.sub,";")}return null}parseCookie(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g"),i=document.cookie.match(t)[0].split("=")[1].replace(this.prepend,"").replace(this.sub,";");return"true"==i?i=!0:"false"==i?i=!1:parseInt(i)==i?i=parseInt(i):parseFloat(i)==i&&(i=parseFloat(i)),i}return null}isEqual(e){return!!this.hasCookie(e)&&(console.log(e),this.readCookie(e)==this.variableToString(e))}evalCookie(e){if(e){if(this.hasCookie(e)){let t=new RegExp("(?="+this.prepend+e+").*?((?=;)|(?=$))","g");return console.log("Eval Cookie has been limited, responce is: "),console.log(document.cookie.match(t)[0].replace(this.prepend,"").replace(this.sub,";")),!0}return!1}{let e=new RegExp("(?="+this.prepend+").*?((?=;)|(?=$))","g");return console.log("Eval Cookie has been limited, may error."),document.cookie.match(e).forEach((e=>{e.replace(this.prepend,"").replace(this.sub,";")})),!0}}setCookie(e,t){(t=this.variableToString(t)).replace&&t.replace(";",this.sub),document.cookie=this.prepend+e+"="+t+";"+this.getExpiration()+this.path}addDictionary(e){let t=Object.keys(e);for(let i=0;i<t.length;++i){let n=e[t[i]];n=this.variableToString(n),n.replace&&n.replace(";",this.sub),document.cookie=this.prepend+t[i]+"="+n+";"+this.getExpiration()+this.path}}parseDict(e){let t=Object.keys(e),i=!1;return t.forEach((t=>{this.hasCookie(t)&&(e[t]=this.parseCookie(t),i=!0)})),i}clearCookie(e){if(e)"string"==typeof e&&(e=[e]),e.forEach((e=>{document.cookie=e+"=;"+this.deleteDate+this.path}));else{let e=new RegExp("(?="+this.prepend+").*?(?==)","g");document.cookie.match(e).forEach((e=>{document.cookie=e+"=;"+this.deleteDate+this.path}))}}}class Wu{constructor(){this.active=!1,this.msRunner=new Yh(0,0),this.msLog=0,this.fpsStats=-1;let e=.001*(new Date).getTime();this._curMS=e,this._prevMS=e,this.videoFeeds=[]}init(){this.prevMS=this.curMS,this.msRunner.x=0,this.msRunner.y=0,this.step()}get curMS(){return this._curMS}updateTime(){this._curMS=.001*(new Date).getTime()}get prevMS(){return this._prevMS}set prevMS(e){this._prevMS=e}start(){this.play()}pause(){return this.active=!this.active,this.active}play(){return this.active=!0,this.active}stop(){return this.active=!1,this.active}toggleMSLog(){this.msLog=(this.msLog+1)%2}step(){this.prevMS=this._curMS,this.updateTime(),-1!=this.fpsStats&&this.fpsStats.update();let e=this.curMS-this.prevMS;this.msRunner.x+=e>0?e:0,this.msRunner.y=.5*(this.msRunner.y+e)}}class Xu{constructor(e=null){this.id=null,this.jitsiUserId=null,this.jmaActive=!1,this.jmaConnectObj=!1,this.jmaServer=!1,this.jmaRoom=!1,this.jmaUserId=null,this.jmaUserName=null,this.jmaTempUserIdActive=!1,this.pxlEnv=null,this.welcome=!1,this.tankStrafe=!1,this.invertMouse=!1,this.renderSettingsCookie="settings_renderSettings",this.controlModeCookie="settings_controlMode",this.tankStrageCookie="settings_tankStrage",this.invertMouseCookie="settings_invertMouse",this.rootUserCookie="data_userEnlil",this.adminUserCookie="data_userNanna",this.localUserMoved=!1,this.localUserTurned=!1,this.itemRunTime=60,this.itemGroupList=[],this.itemList={},this.itemListNames=[],this.itemBaseList=[],this.itemActiveList=[],this.itemInactiveCmd=[],this.itemActiveTimer=[],this.itemRotateRate=.65,this.itemBaseRotateRate=.1,this.itemBobRate=.35,this.itemBobMag=0,this.mPick=[],this.activeEffects={},this.lowGrav=0,this.lKing=0,this.lKingInactive=[.025,.018],this.lKingActive=[.35,.25],this.lKingWarp=0,this.lKingPass=null,this.sField=0,this.sFieldWarp=0,this.sFieldPass=null,this.iZoom=0,this.iZoomWarp=0,this.iZoomPass=null,this.gravityRate=0,this.gravityMax=5.44,this.gravityMPS=[.15,.05]}get getGravityMPS(){return this.gravityMPS[this.lowGrav]}checkItemWearOff(e){if(this.itemActiveList.length>0){if(this.itemActiveTimer[0]-e<=0){return this.itemInactiveCmd.shift()(),this.itemActiveTimer.shift(),this.itemActiveList.shift(),!0}}return!1}checkItemPickUp(e){return"LowGravity"==e?0==this.lowGrav&&(this.lowGrav=1,!0):"LizardKing"==e?0==this.lKing&&(this.lKing=1,this.lKingWarp.set(...this.lKingActive),this.lKingPass.enabled=!0,!0):"StarField"==e?0==this.sField&&(this.sField=1,this.sFieldPass.enabled=!0,!0):"InfinityZoom"==e?0==this.iZoom&&(this.iZoom=1,this.iZoomPass.enabled=!0,!0):void 0}toggleTankRotate(e=null){this.tankStrafe=null==e?!this.tankStrafe:e,this.tankStrageText=this.tankStrafe?"Left/Right Rotation":"Left/Right Strafe"}toggleMouseInf(e=null){this.invertMouse=null==e?!this.invertMouse:e,this.invertMouseText=this.invertMouse?"Revert Mouse":"Invert Mouse"}toggleFpsStats(){-1==pxlTimer.fpsStats?(pxlTimer.fpsStats=new Stats,document.body.appendChild(pxlTimer.fpsStats.domElement),pxlTimer.fpsStats.update(),this.fpsDisplayText="Hide FPS Stats"):(pxlTimer.fpsStats.domElement.remove(),pxlTimer.fpsStats=-1,this.fpsDisplayText="Display FPS Stats")}}class qu{constructor(e,t,i){this.projectTitle=e,this.pxlCore=t,this.pxlEnv=null,this.pxlTimer=null,this.pxlAudio=null,this.pxlUser=null,this.pxlCamera=null,this.pxlAutoCam=null,this.pxlGuiDraws=null,this.pxlQuality=null,this.allowCursorSwap=!1;let n=window.innerWidth,r=window.innerHeight;this.sW=n,this.sH=r,this.touchScreen=!1,this.x=.5*n,this.y=.5*r,this.screenRes=new Yh(1/n,1/r),this.screenAspect=new Yh(1,1),this.screenRatio=new Yh(n/r,r/n),this.origRes=new Yh(n,r),this.screenResDeltaPerc=new Yh(1,1),this.mapW=1,this.mapH=1,this.gammaCorrection=new Zh(1,1,1),this.firefox=/Firefox/i.test(navigator.userAgent),this.mobile=i,this.button=0,this.inputActive=!1,this.startPos=[0,0],this.endPos=[0,0],this.dragCount=0,this.dragTotal=0,this.latched=!1,this.windowHidden=!1,this.mouseX=n/2,this.mouseY=r/2,this.keyDownCount=[0,0,0],this.directionKeyDown=!1,this.directionKeysPressed=[0,0,0,0],this.shiftBoost=0,this.controlKey=!1,this.objectPercList=[],this.objectPercFuncList={},this.objectPerc={active:!1,object:null,left:0,top:0,width:0,height:0,startX:0,startY:0,offsetX:0,offsetY:0,percX:0,percY:0,offsetPercX:0,offsetPercY:0},this.canCursorLock="pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document,this.cursorLockActive=!1,this.cursorRightButtonLockActive=!1,this.gyroGravity=[0,0,0],this.touchMouseData={active:!1,lock:!1,mode:0,updated:0,button:0,dragCount:0,dragTotal:0,startPos:null,moveMult:new Yh(1,1),velocityEase:new Yh(0,0),velocityEasePrev:null,velocity:new Yh(0,0),mBlurVelInf:new Yh(2*this.screenRes.x,2*this.screenRes.y),prevDeltaPos:[0,0,0],endPos:null,latchMatrix:null,netDistance:new Yh(0,0),netDistYPerc:0,curDistance:new Yh(0,0),curFadeOut:new Yh(0,0),curStepDistance:new Yh(0,0),initialQuat:new ce,releaseTime:0},this.init()}setDependencies(e){this.pxlEnv=e.pxlEnv,this.pxlTimer=e.pxlTimer,this.pxlAudio=e.pxlAudio,this.pxlUser=e.pxlUser,this.pxlCamera=e.pxlCamera,this.pxlAutoCam=e.pxlAutoCam,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlQuality=e.pxlQuality}init(){this.setGammaCorrection();let e=this;document.addEventListener("mousedown",(t=>{e.onmousedown(e,t)}),!1),document.addEventListener("mousemove",(t=>{e.onmousemove(e,t)}),!1),document.addEventListener("mouseup",(t=>{e.onmouseup(e,t)}),!1),document.addEventListener("contextmenu",(t=>{e.oncontextmenu(t)}),!1),window.addEventListener("resize",(t=>{e.resizeRenderResolution()}),!1),document.addEventListener("touchstart",(function(t){e.touchstart(e,t)}),{passive:!0}),document.addEventListener("touchmove",(function(t){e.touchmove(e,t)}),{passive:!0}),document.addEventListener("touchend",(function(t){e.touchend(e,t)}),{passive:!0}),document.onkeydown=t=>{e.onkeydown(e,t)},document.onkeyup=t=>{e.onkeyup(e,t)};let t=this;document.addEventListener("visibilitychange",(function(e){t.windowHidden=document.hidden,t.directionKeysPressed=[0,0,0,0],t.directionKeyDown=!1,t.shiftBoost=0,t.pxlCamera.workerFunc("focus",!document.hidden),t.runHiddenCalcs()})),"object"==typeof window.onblur&&(window.onblur=e=>{t.resetUserInput(e)}),window.addEventListener("beforeunload",(e=>{if(1==t.controlKey)return e.preventDefault(),e.returnValue="Close tab?",t.controlKey=!1,t.mapLockCursor(!1,0),"Close tab?"}))}setGammaCorrection(e=null){if(null!=e)return void(this.gammaCorrection=new Zh(1/e,e,e));let t=1.5,i=1.2,n=.5;if(window&&window.navigator&&window.navigator.userAgent){let e=window.navigator.userAgent.match(/(windows|win32|win64|wince)/i);if(e&&e.length>0)t=2.2,i=1,n=0;else{let e=window.navigator.userAgent.match(/(macintosh|macintel|macppc|mac68k|iphone|ipad|ipod)/i);e&&e.length>0?(t=1.8,i=.97,n=.5):(t=1,i=.95,n=1)}}this.gammaCorrection=new Zh(1/t,i,n)}runHiddenCalcs(){this.windowHidden&&setTimeout((()=>{this.runHiddenCalcs()}),100)}resetUserInput(e){this.directionKeysPressed=[0,0,0,0],this.directionKeyDown=!1,this.shiftBoost=0,this.mapLockCursor(!1,0),this.pxlCamera.camJumpKey(!1),this.pxlCamera.deviceKey("space",!1),this.touchMouseData.active&&(this.touchScreen?this.endTouch(e):this.mapOnUp(e))}onmousemove(e,t){e.mapOnMove(t)}onmousedown(e,t){e.mapOnDown(t)}onmouseup(e,t){e.mapOnUp(t)}oncontextmenu(e){return e.preventDefault(),!1}touchstart(e,t){e.startTouch(t)}touchmove(e,t){e.doTouch(t)}touchend(e,t){e.endTouch(t)}onkeydown(e,t){e.keyDownCall(t)}onkeyup(e,t){e.keyUpCall(t)}get active(){return this.inputActive}set active(e){this.inputActive=!!e}preventDefault(e){(e=e||window.event).preventDefault(e)&&e.preventDefault(e)(),e.returnValue=!1}setCursor(e){this.allowCursorSwap&&("activeLatch"==e&&this.touchMouseData.button,document.body.style.cursor=e)}getMouseXY(e){if(this.mobile)try{touch=e.touches[0],this.mouseX=touch.pageX,this.mouseY=touch.pageY}catch(e){}else{let t=this.pxlQuality.settings.mouse?-1:1;this.cursorLockActive?(this.mouseX+=(e.movementX||e.mozMovementX||e.webkitMovementX||0)*t,this.mouseY+=(e.movementY||e.mozMovementY||e.webkitMovementY||0)*t):(this.mouseX=e.clientX,this.mouseY=e.clientY)}}mapLockCursor(e=!1,t){this.canCursorLock&&!this.mobile&&(2==t?(!e&&this.cursorRightButtonLockActive?this.cursorRightButtonLockActive=!1:e||this.cursorRightButtonLockActive||(this.cursorRightButtonLockActive=!0),e=e||this.cursorRightButtonLockActive):e||(this.cursorRightButtonLockActive=e),1==e?(this.pxlGuiDraws.pxlNavCanvas.focus(),this.pxlGuiDraws.pxlNavCanvas.requestPointerLock()):document.exitPointerLock(),this.cursorLockActive=e)}mapOnDown(e){let t=e.target;t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlTimer.active&&(this.pxlGuiDraws.chatMessageInput&&this.pxlGuiDraws.chatMessageInput.blur(),this.pxlGuiDraws.pxlNavCanvas.focus(),this.preventDefault(e),this.touchMouseData.button=e.which,this.touchMouseData.active=!0,this.touchMouseData.mode=this.touchMouseData.button,this.touchMouseData.startPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.curDistance=new Yh(0,0),this.touchMouseData.curStepDistance=new Yh(0,0),this.touchMouseData.dragCount=0,this.pxlAutoCam.touchBlender=!1,this.setCursor("grabbing"),this.mapLockCursor(!0,e.button))}mapOnMove(e){let t=e.target;if(t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlTimer.active||this.cursorLockActive)if(this.preventDefault(e),this.getMouseXY(e),(this.touchMouseData.active||this.cursorLockActive)&&this.touchMouseData.startPos){this.touchMouseData.dragCount++;let e=this.touchMouseData.endPos.clone();this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.curDistance=this.touchMouseData.startPos.clone().sub(this.touchMouseData.endPos),this.touchMouseData.curStepDistance=this.touchMouseData.endPos.clone().sub(e),this.touchMouseData.netDistance.add(this.touchMouseData.curStepDistance.clone()),this.touchMouseData.velocity.clone(),this.touchMouseData.velocity=this.touchMouseData.velocity.clone().multiplyScalar(3).add(this.touchMouseData.curStepDistance).multiplyScalar(.25),this.touchMouseData.netDistYPerc=8e-4*(this.touchMouseData.netDistance.y+this.touchMouseData.curDistance.y+250),this.touchMouseData.curFadeOut.add(e.sub(this.touchMouseData.endPos))}else this.pxlEnv.hoverUserDetect()}mapOnUp(e){let t=e.target;if(this.pxlAudio.djVolumeParentObj&&(this.pxlAudio.djVolumeParentObj.down=!1),t.getAttribute&&t.getAttribute("id")==this.pxlCore){if(this.pxlGuiDraws.checkFocus(t.getAttribute("id"),!0),!this.mobile)return this.preventDefault(e),this.touchMouseData.dragCount++,this.touchMouseData.dragTotal+=this.touchMouseData.dragCount,this.touchMouseData.active=!1,this.touchMouseData.releaseTime=this.pxlTimer.curMS,this.pxlAutoCam.touchBlender=!0,this.pxlAutoCam.setNextTrigger(),this.touchMouseData.dragCount<9&&this.pxlEnv.clickUserDetect(),this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+250)/1250,this.setCursor("grab"),this.mapLockCursor(!1,e.button),e.preventDefault(),!1;this.pxlAutoCam.getNextPath(!1,1)}}startTouch(e){this.touchScreen=!0;var t=e.touches[0];this.mouseX=t.pageX,this.mouseY=t.pageY,this.touchMouseData.active=!0,this.touchMouseData.mode=this.touchMouseData.button,this.touchMouseData.startPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.curDistance=new Yh(0,0),this.touchMouseData.curStepDistance=new Yh(0,0),this.touchMouseData.dragCount=0,this.pxlAutoCam.touchBlender=!1,this.touchMouseData.releaseTime=this.pxlTimer.curMS;let i=e.target;if(i.getAttribute){let t=i.getAttribute("id");if(this.objectPercList.includes(t)){"djPlayerVolume"==t&&(i=this.pxlAudio.djVolumeParentObj,t=i.getAttribute("id"));let n=i.getBoundingClientRect();this.objectPerc.active=!0,this.objectPerc.object=i,this.objectPerc.left=n.left,this.objectPerc.top=n.top,this.objectPerc.width=n.width,this.objectPerc.height=n.height,this.objectPerc.startX=this.mouseX-n.left,this.objectPerc.startY=this.mouseY-n.top,this.objectPerc.percX=(this.mouseX-this.objectPerc.left)/this.objectPerc.width,this.objectPerc.percY=(this.mouseY-this.objectPerc.top)/this.objectPerc.height,this.objectPerc.offsetX=0,this.objectPerc.offsetY=0,this.objectPerc.offsetPercX=0,this.objectPerc.offsetPercY=0,this.objectPercFuncList[t]&&this.objectPercFuncList[t](e)}}}doTouch(e){var t=e.touches[0];if(this.mouseX=t.pageX,this.mouseY=t.pageY,this.touchMouseData.active){if(this.touchMouseData.dragCount++,void 0!==e.touches[1])return e.touches[1],void(e.touches.length>1&&this.touchMouseData.dragCount>10&&(this.touchMouseData.lock=!0,t=e.touches[1],this.pxlEnv.setFogHue([this.mouseX,this.mouseY],[t.pageX,t.pageY])));let i=this.touchMouseData.endPos.clone();this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.curDistance=this.touchMouseData.startPos.clone().sub(this.touchMouseData.endPos),this.touchMouseData.curStepDistance=this.touchMouseData.endPos.clone().sub(i),this.touchMouseData.netDistance.add(this.touchMouseData.curStepDistance.clone()),this.touchMouseData.velocity.add(this.touchMouseData.curStepDistance).multiplyScalar(.5),this.touchMouseData.velocityEase.add(this.touchMouseData.curStepDistance).multiplyScalar(.5),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+this.touchMouseData.curDistance.y+250)/1250,this.touchMouseData.curFadeOut.add(i.sub(this.touchMouseData.endPos))}this.objectPerc.active&&(this.objectPerc.percX=(this.mouseX-this.objectPerc.left)/this.objectPerc.width,this.objectPerc.percY=(this.mouseY-this.objectPerc.top)/this.objectPerc.height,this.objectPerc.offsetX=this.mouseX-this.objectPerc.startX,this.objectPerc.offsetY=this.mouseY-this.objectPerc.startY,this.objectPerc.offsetPercX=this.objectPerc.offsetX/this.objectPerc.width,this.objectPerc.offsetPercY=this.objectPerc.offsetY/this.objectPerc.height)}endTouch(e){if(this.touchScreen=!1,this.touchMouseData.dragCount++,this.touchMouseData.dragTotal+=this.touchMouseData.dragCount,this.touchMouseData.active=!1,this.touchMouseData.endPos=new Yh(this.mouseX,this.mouseY),this.touchMouseData.netDistYPerc=(this.touchMouseData.netDistance.y+250)/1250,this.touchMouseData.curDistance.multiplyScalar(0),this.touchMouseData.curStepDistance.multiplyScalar(0),this.mobile&&this.touchMouseData.dragCount<10&&this.pxlTimer.curMS-this.touchMouseData.releaseTime>.5&&(this.pxlCamera.itemTrigger(),this.touchMouseData.lock=!0),this.touchMouseData.releaseTime=this.pxlTimer.curMS,this.touchMouseData.lock)return void(this.touchMouseData.lock=!1);this.pxlAutoCam.touchBlender=!0,this.pxlAutoCam.setNextTrigger();let t=e.target;this.touchMouseData.dragCount<10&&t.getAttribute&&t.getAttribute("id")==this.pxlCore&&this.pxlAutoCam.getNextPath(!1,0),this.objectPerc.active=!1,this.pxlAudio.djVolumeParentObj&&(this.pxlAudio.djVolumeParentObj.down=!1)}async keyDownCall(e){if(e.ctrlKey&&(this.controlKey=!0),null==document.activeElement.type&&this.pxlTimer.active){let t=e.keyCode||e.which;37!=t&&65!=t||(this.directionKeyDown=!0,this.keyDownCount[0]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[0]=1,this.pxlCamera.deviceKey(0,!0)),e.ctrlKey&&87==t&&1==this.directionKeysPressed[1]&&e.this.preventDefault(e)(),38!=t&&87!=t||(this.directionKeyDown=!0,this.keyDownCount[1]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[1]=1,this.pxlCamera.deviceKey(1,!0)),39!=t&&68!=t||(this.directionKeyDown=!0,this.keyDownCount[0]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[2]=1,this.pxlCamera.deviceKey(2,!0)),40!=t&&83!=t||(this.directionKeyDown=!0,this.keyDownCount[1]=this.pxlQuality.fpsCounter.z,this.directionKeysPressed[3]=1,this.pxlCamera.deviceKey(3,!0)),16!=t&&224!=t||(this.shiftBoost=7,this.pxlCamera.deviceKey("shift",!0)),32==t&&(this.pxlCamera.camJumpKey(!0),this.pxlCamera.deviceKey("space",!0))}}async keyUpCall(e){if(e.ctrlKey)return this.controlKey=!1,e.preventDefault(),!1;if(null==document.activeElement.type){let i=e.keyCode||e.which,n=e.code||e.which;if(!e.isTrusted)return!1;if(e.ctrlKey||e.altKey||e.code.includes("F"))return e.preventDefault(),!1;if("Backquote"==n)return void this.pxlGuiDraws.guiToggleVisibility();if(89==i&&this.pxlGuiDraws.toggleShaderEditor(),220==i){console.log("Saving screenshot");let e=this.pxlQuality.screenResPerc;this.pxlQuality.screenResPerc=1,this.pxlEnv.mapRender(!1);let i=this.pxlGuiDraws.pxlNavCanvas.toDataURL("image/png"),n=atob(i.split(",")[1]),r=n.length,s=new Uint8Array(r);for(var t=0;t<r;++t)s[t]=n.charCodeAt(t);let o=URL.createObjectURL(new Blob([s])),a=new Date,l=a.getDate(),c=a.getMonth()+1,h=a.getFullYear()+"-"+c+"-"+l+"_"+a.getHours()+"-"+a.getMinutes()+"-"+a.getSeconds(),u=document.createElement("a");return u.download=this.projectTitle+"_"+h+".png",u.href=o,document.body.appendChild(u),u.click(),u.parentNode.removeChild(u),this.pxlQuality.screenResPerc=e,void this.pxlEnv.mapRender(!1)}if(this.pxlTimer.active){if(37!=i&&65!=i||(this.directionKeysPressed[0]=0,this.pxlAutoCam.getNextPath(!1,-1),this.pxlCamera.deviceKey(0,!1)),38!=i&&87!=i||(this.directionKeysPressed[1]=0,this.pxlAutoCam.active&&(this.pxlAutoCam.step(!0),this.pxlCamera.deviceKey(1,!1))),39!=i&&68!=i||(this.directionKeysPressed[2]=0,this.pxlAutoCam.getNextPath(!1,1),this.pxlCamera.deviceKey(2,!1)),40!=i&&83!=i||(this.directionKeysPressed[3]=0,this.pxlAutoCam.active&&(this.pxlAutoCam.setRoom(!0),this.pxlCamera.deviceKey(3,!1))),this.directionKeysPressed.includes(1)||(this.directionKeyDown=!1),16==i||224==i)return this.shiftBoost=0,void this.pxlCamera.deviceKey("shift",!1);if(32==i)return this.pxlCamera.camJumpKey(!1),void this.pxlCamera.deviceKey("space",!1);if(!this.directionKeyDown){if(49==i||97==i)return void this.pxlCamera.fastTravel(0);if(50==i||98==i)return void this.pxlCamera.fastTravel(1);if(51==i||99==i)return void this.pxlCamera.fastTravel(2);if(52==i||100==i)return void this.pxlCamera.fastTravel(3);if(53==i||101==i)return void this.pxlAutoCam.preAutoCamToggle()}if(221==i)return void(this.pxlUser?.itemInactiveCmd?.length>0&&console.log(this.pxlUser.itemInactiveCmd.pop()))}if(27==i||13==i&&!e.ctrlKey)return this.pxlGuiDraws.toggleHudBlock(!1,!0),void this.pxlGuiDraws.toggleGuiWindowContainer(!1,!1,!0);if(e.altKey||e.ctrlKey||e.shiftKey)return;if(73==i)return void this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.infoIcon,"info");if(71==i)return void this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.settingsIcon,"settings");if(66==i)return void this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.musicIcon,"musicToggle");if(78==i)return void this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.speakerIcon,"speakerToggle");if(191==i)return void this.pxlGuiDraws.iconEvent("click",this.pxlGuiDraws.hudIcons.helpIcon,"help");if(80==i)return this.directionKeysPressed=[0,0,0,0],this.directionKeyDown=!1,this.pxlTimer.pause(),this.pxlTimer.active&&this.pxlEnv.mapRender(),void this.pxlCamera.workerFunc("activeToggle",this.pxlTimer.active)}}resizeRenderResolution(e=null,t=null){if(e=e||window.innerWidth,t=t||window.innerHeight,this.mapW=(this.sW=e)*this.pxlQuality.screenResPerc,this.mapH=(this.sH=t)*this.pxlQuality.screenResPerc,this.screenRes.x=1/this.mapW,this.screenRes.y=1/this.mapH,this.screenRatio.x=this.sW/this.sH,this.screenRatio.y=this.sH/this.sW,this.pxlEnv.geoList.HDRView){let e=this.mapW>this.mapH?1:this.mapW/this.mapH;this.pxlEnv.geoList.HDRView.material.uniforms.ratioU.value=e}if(this.touchMouseData.mBlurVelInf=new Yh(2*this.screenRes.x,2*this.screenRes.y),!this.pxlEnv.mapGlowPass)return;this.pxlEnv.scene.renderTarget.setSize(this.mapW*this.pxlQuality.bufferPercMult,this.mapH*this.pxlQuality.bufferPercMult),this.pxlEnv.scene.renderWorldPos.setSize(this.mapW*this.pxlQuality.bufferPercMult,this.mapH*this.pxlQuality.bufferPercMult),this.pxlEnv.mapComposer.setSize(this.mapW,this.mapH),this.pxlEnv.mapComposerGlow.setSize(this.mapW,this.mapH),this.pxlEnv.roomComposer.setSize(this.mapW,this.mapH),this.pxlEnv.roomGlowPass.setSize(this.mapW*this.pxlQuality.bloomPercMult,this.mapH*this.pxlQuality.bloomPercMult),this.pxlEnv.delayComposer.setSize(this.mapW,this.mapH),this.pxlEnv.mapGlowPass.setSize(this.mapW*this.pxlQuality.bloomPercMult,this.mapH*this.pxlQuality.bloomPercMult),this.pxlEnv.mapMotionBlurPass.setSize(this.mapW*this.pxlQuality.mBlurPercMult,this.mapH*this.pxlQuality.mBlurPercMult),this.pxlEnv.mapOverlayHeavyPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlayPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlaySlimPass.setSize(this.mapW,this.mapH),this.pxlEnv.mapOverlayHeavyPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlEnv.mapOverlayPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlEnv.mapOverlaySlimPass.uniforms.ratio.value=Math.min(1,this.mapW/this.mapH),this.pxlGuiDraws.pxlNavCanvas.width=this.sW,this.pxlGuiDraws.pxlNavCanvas.height=this.sH,this.pxlGuiDraws.loading=!0,this.pxlEnv.engine.setPixelRatio(window.devicePixelRatio*this.pxlQuality.screenResPerc),this.pxlEnv.engine.setSize(this.sW,this.sH);var i=this.mapW/this.mapH;this.pxlCamera.camera.aspect=i,this.pxlCamera.camera.updateProjectionMatrix();let n=[this.sW/this.sH,this.sH/this.sW];var r=[1,1];r[0]=i>n[0]?1:this.sW/(this.sH*n[0]),r[1]=i>n[1]?this.sH/(this.sW*n[1]):1,r[0]>1?(r[1]*=1/r[0],r[0]=1):r[1]>1&&(r[0]*=1/r[1],r[1]=1),this.screenAspect.x=r[0]*(1/.5**.5),this.screenAspect.y=r[1],this.screenResDeltaPerc.x=this.sW/this.origRes.x,this.screenResDeltaPerc.y=this.sH/this.origRes.y,this.pxlEnv.roomSubList.Lobby&&this.pxlEnv.roomSubList.Lobby.setShaders(),this.pxlEnv.updateCompUniforms(),this.pxlGuiDraws.resize(),this.pxlEnv.roomNameList.forEach((e=>{this.pxlEnv.roomSceneList[e].pxlCamAspect=i,this.pxlEnv.roomSceneList[e]?.resize&&this.pxlEnv.roomSceneList[e].resize(this.mapW,this.mapH)})),this.pxlTimer.active||this.pxlEnv.mapRender(!1)}}class Yu{constructor(e=null,t=null){this.pxlEnv=null,this.assetPath=e,this.verbose=!1,this.animInitEntry={rig:null,mesh:null,mixer:null,clips:{},state:null,hasConnection:!1,prevTime:-1,connected:[],connections:{}},this.objNames=[],this.objects={},this.animMixer={},this.msRunner=t,this.clock=new hc}setDependencies(e){this.pxlEnv=e}log(e){this.verbose&&console.log(e)}initObject(e,t){let i=null,n=null,r=t.children.length,s=0,o=[...t.children],a=0,l=0,c=0,h=0;for(;s<r;){let e=o[s];switch(e.type){case"Bone":++l,i=e;break;case"Mesh":++a,e.visible=!1;break;case"SkinnedMesh":++c,n=e;break;case"Group":++h,o=o.concat(e.children),r=o.length}++s}let u=!1;if(i||(this.log("Error, No Bone/Rig Root Found; Please move your rig to the scene's root. Grouped rigs aren't supported yet."),u=!0),n||(this.log("Error, No SkinnedMesh Found; Please ensure your rig has a mesh to animate."),u=!0),u)return console.log("Unable to prepare '"+e+"' for animation"),console.log("Group Count: "+h),console.log("Bone Root Found : "+(l>0)),console.log("Bone Count : "+l),console.log("Mesh Count: "+a),void console.log("SkinnedMesh Count: "+c);if(!this.objNames.includes(e)){this.objNames.push(e);let t=Object.assign({},this.animInitEntry);t.rig=i,t.mesh=n,this.animMixer[e]=new kc(i),t.mixer=this.animMixer[e],this.objects[e]=t;let r=new _a({skinning:!0});r.map=n.material.map,n.material=r}}addClips(e,t,i){if(!this.objNames.includes(e))return void this.log("Error, '"+e+"' not found in Animation Manager");Object.keys(this.objects[e].clips).includes(t)&&this.log("Warning, '"+t+"' already exists in '"+e+"'");let n=this.animMixer[e].clipAction(i.animations[0]);this.objects[e].clips[t]=n}hasClip(e,t){if(this.objNames.includes(e)){return Object.keys(this.objects[e].clips).includes(t)}return!1}getMixer(e){return this.objNames.includes(e)?this.animMixer[e]:null}getRig(e){return this.objNames.includes(e)?this.objects[e].rig:null}getMesh(e){return this.objNames.includes(e)?this.objects[e].mesh:null}playClip(e,t){if(this.objNames.includes(e)){if(Object.keys(this.objects[e].clips).includes(t)){let i=this.objects[e].clips[t];this.objects[e].state=t,this.objects[e].prevTime=-1,this.objects[e].hasConnection=this.objects[e].connected.includes(t),this.setWeight(e,t,1,!0),i.reset(),i.play()}}}setWeight(e,t,i,n=!1){if(this.objNames.includes(e)){let r=Object.keys(this.objects[e].clips);if(r.includes(t)){let s=this.objects[e].clips[t];s.enabled=!0,s.setEffectiveTimeScale(1),s.setEffectiveWeight(i),n&&r.forEach((i=>{if(i!=t){let t=this.objects[e].clips[i];t.enabled=!1,t.setEffectiveTimeScale(1),t.setEffectiveWeight(0)}}))}}}setStateConnections(e,t){if(this.objNames.includes(e)){let i=Object.keys(t);this.objects[e].connected=i,this.objects[e].connections=t}}step(e){if(this.objNames.includes(e)){if(!this.objects[e].hasConnection)return void this.animMixer[e].update(this.clock.getDelta());let t=this.objects[e].state;if(t){let i=this.objects[e].clips[t].time;if(this.objects[e].prevTime>i){let i=this.objects[e].connections[t],n=i[Math.floor(Math.random()*i.length)];this.playClip(e,n)}else this.animMixer[e].update(this.clock.getDelta()),this.objects[e].prevTime=i}else this.animMixer[e].update(this.clock.getDelta())}}destroy(e){if(this.objNames.includes(e)){this.animMixer[e].stopAllAction(),delete this.animMixer[e],delete this.objects[e];let t=this.objNames.indexOf(e);this.objNames.splice(t,1)}}}var Zu,Ku,Qu,Ju={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tgl_FragColor = opacity * texel;","}"].join("\n")};function $u(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}Object.assign($u.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),$u.FullScreenQuad=(Zu=new Ol(-1,1,1,-1,0,1),Ku=new Zi(2,2),Qu=function(e){this._mesh=new Mi(Ku,e)},Object.defineProperty(Qu.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(Qu.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(e){e.render(this._mesh,Zu)}}),Qu);var ed=function(e,t){$u.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof Ui?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Oi.clone(e.uniforms),this.material=new Ui({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new $u.FullScreenQuad(this.material)};ed.prototype=Object.assign(Object.create($u.prototype),{constructor:ed,render:function(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}});var td=function(e,t){$u.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1};td.prototype=Object.assign(Object.create($u.prototype),{constructor:td,render:function(e,t,i){var n,r,s=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(n=0,r=1):(n=1,r=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),o.buffers.stencil.setFunc(s.ALWAYS,n,4294967295),o.buffers.stencil.setClear(r),o.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(s.EQUAL,1,4294967295),o.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),o.buffers.stencil.setLocked(!0)}});var id=function(){$u.call(this),this.needsSwap=!1};id.prototype=Object.create($u.prototype),Object.assign(id.prototype,{render:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}});var nd=function(e,t){if(this.renderer=e,void 0===t){var i={minFilter:w,magFilter:w,format:L,stencilBuffer:!1},n=e.getSize(new ee);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,(t=new ae(this._width*this._pixelRatio,this._height*this._pixelRatio,i)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===Ju&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===ed&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new ed(Ju),this.clock=new hc};Object.assign(nd.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());var t,i,n=this.renderer.getRenderTarget(),r=!1,s=this.passes.length;for(i=0;i<s;i++)if(!1!==(t=this.passes[i]).enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var o=this.renderer.getContext(),a=this.renderer.state.buffers.stencil;a.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==td&&(t instanceof td?r=!0:t instanceof id&&(r=!1))}this.renderer.setRenderTarget(n)},reset:function(e){if(void 0===e){var t=this.renderer.getSize(new ee);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(i,n)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var rd=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};Object.assign(rd.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),rd.FullScreenQuad=function(){var e=new Ol(-1,1,1,-1,0,1),t=new Zi(2,2),i=function(e){this._mesh=new Mi(t,e)};return Object.defineProperty(i.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(i.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),i}();var sd=function(e,t,i,n,r){$u.call(this),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1};sd.prototype=Object.assign(Object.create($u.prototype),{constructor:sd,render:function(e,t,i){var n,r,s,o=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(n=e.getClearColor().getHex(),r=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(n,r),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=s),e.autoClear=o}});var od={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new At(0)},defaultOpacity:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tvec3 luma = vec3( 0.299, 0.587, 0.114 );","\tfloat v = dot( texel.xyz, luma );","\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","\tgl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")},ad=function(e,t,i,n){$u.call(this),this.strength=void 0!==t?t:1,this.radius=i,this.threshold=n,this.resolution=void 0!==e?new ee(e.x,e.y):new ee(256,256),this.clearColor=new At(0,0,0);var r={minFilter:w,magFilter:w,format:L};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var s=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new ae(s,o,r),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var a=0;a<this.nMips;a++){var l=new ae(s,o,r);l.texture.name="UnrealBloomPass.h"+a,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var c=new ae(s,o,r);c.texture.name="UnrealBloomPass.v"+a,c.texture.generateMipmaps=!1,this.renderTargetsVertical.push(c),s=Math.round(s/2),o=Math.round(o/2)}void 0===od&&console.error("UnrealBloomPass relies on LuminosityHighPassShader");var h=od;this.highPassUniforms=Oi.clone(h.uniforms),this.highPassUniforms.luminosityThreshold.value=n,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new Ui({uniforms:this.highPassUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var u=[3,5,7,9,11];for(s=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2),a=0;a<this.nMips;a++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(u[a])),this.separableBlurMaterials[a].uniforms.texSize.value=new ee(s,o),s=Math.round(s/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new de(1,1,1),new de(1,1,1),new de(1,1,1),new de(1,1,1),new de(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===Ju&&console.error("UnrealBloomPass relies on CopyShader");var d=Ju;this.copyUniforms=Oi.clone(d.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new Ui({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:2,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new At,this.oldClearAlpha=1,this.basic=new Nt,this.fsQuad=new $u.FullScreenQuad(null)};ad.prototype=Object.assign(Object.create($u.prototype),{constructor:ad,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var i=Math.round(e/2),n=Math.round(t/2);this.renderTargetBright.setSize(i,n);for(var r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(i,n),this.renderTargetsVertical[r].setSize(i,n),this.separableBlurMaterials[r].uniforms.texSize.value=new ee(i,n),i=Math.round(i/2),n=Math.round(n/2)},render:function(e,t,i,n,r){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var s=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),r&&e.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=i.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,a=0;a<this.nMips;a++)this.fsQuad.material=this.separableBlurMaterials[a],this.separableBlurMaterials[a].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[a].uniforms.direction.value=ad.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[a]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[a].uniforms.colorTexture.value=this.renderTargetsHorizontal[a].texture,this.separableBlurMaterials[a].uniforms.direction.value=ad.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[a]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[a];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&e.state.buffers.stencil.setTest(!0),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(i),this.fsQuad.render(e)),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=s},getSeperableBlurMaterial:function(e){return new Ui({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new ee(.5,.5)},direction:{value:new ee(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new Ui({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),ad.BlurDirectionX=new ee(1,0),ad.BlurDirectionY=new ee(0,1);var ld={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new ee(.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvec2 imageCoord = vUv;","\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","\t\timageCoord += uImageIncrement;","\t}","\tgl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){function t(e,t){return Math.exp(-e*e/(2*t*t))}var i,n,r,s,o=2*Math.ceil(3*e)+1;for(o>25&&(o=25),s=.5*(o-1),n=new Array(o),r=0,i=0;i<o;++i)n[i]=t(i-s,e),r+=n[i];for(i=0;i<o;++i)n[i]/=r;return n}},cd=function(e,t,i,n){$u.call(this),e=void 0!==e?e:1,t=void 0!==t?t:25,i=void 0!==i?i:4,n=void 0!==n?n:256;var r={minFilter:w,magFilter:w,format:L};this.renderTargetX=new ae(n,n,r),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new ae(n,n,r),this.renderTargetY.texture.name="BloomPass.y",void 0===Ju&&console.error("BloomPass relies on CopyShader");var s=Ju;this.copyUniforms=Oi.clone(s.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new Ui({uniforms:this.copyUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,blending:2,transparent:!0}),void 0===ld&&console.error("BloomPass relies on ConvolutionShader");var o=ld;this.convolutionUniforms=Oi.clone(o.uniforms),this.convolutionUniforms.uImageIncrement.value=cd.blurX,this.convolutionUniforms.cKernel.value=ld.buildKernel(i),this.materialConvolution=new Ui({uniforms:this.convolutionUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,defines:{KERNEL_SIZE_FLOAT:t.toFixed(1),KERNEL_SIZE_INT:t.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new $u.FullScreenQuad(null)};cd.prototype=Object.assign(Object.create($u.prototype),{constructor:cd,render:function(e,t,i,n,r){r&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=i.texture,this.convolutionUniforms.uImageIncrement.value=cd.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=cd.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,r&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(i),this.clear&&e.clear(),this.fsQuad.render(e)}}),cd.blurX=new ee(.001953125,0),cd.blurY=new ee(0,.001953125);class hd{constructor(e="Default",t="pxlRooms",i,n){this.verbose=i,this.engine=null,this.scene=null,this.parentGroupList={},this.parentGroupList[e]=[],this.parentNameList=[],this.prevRenderMS=0,this.nextRenderMS=0,this.fps=n?30:60,this.renderInterval=1/this.fps,this.pxlRoomAbsRoot=t;let r=t.split("/");r.splice(0,1),r=r.join("/"),this.pxlRoomLclRoot="../../"+t.split("/").pop(),this.mainRoom=e,this.bootRoom=e,this.bootLocation=null,this.currentRoom=e,this.roomNameList=[e],this.roomSubList={},this.roomSceneList={},this.roomSceneList[e]=this,this.roomPostGuiCalls=[],this.jmaCheckConnection=!1,this.checkContext=0,this.activeContext=!1,this.warpPortalTextures={},this.warpZoneRenderTarget=null,this.currentAudioZone=0,this.pxlUtils=null,this.pxlTimer=null,this.pxlAnim=null,this.pxlAutoCam=null,this.pxlAudio=null,this.pxlFile=null,this.pxlVideo=null,this.pxlQuality=null,this.pxlUser=null,this.pxlShaders=null,this.pxlDevice=null,this.pxlCamera=null,this.pxlGuiDraws=null,this.renderLayerEnum={SCENE:0,PARTICLES:1,GLOW:2,SKY:3},this.cloud3dTexture=null,this.softNoiseTexture=null,this.detailNoiseTexture=null,this.chroAberUVTexture=null,this.blockAnimTexture=null,this.userScreenIntensity=new ee(0,.8),this.portaluserScreenIntensity=new ee(1,0),this.portalMtlRate=.7,this.mobile=n,this.camNear=.1,this.camFar=5e3,this.fogMult=new ee(0,0),this.fogColor=new At(.07,.07,.1),this.fogColorSky=new At(.1,.1,.12),this.fogExp=3e-4,this.fog=new ts(this.fogColor,this.fogExp),this.listener=null,this.posted=!1,this.postIntro=!1,this.camInitPos=new de(0,15,0),this.camInitLookAt=new de(0,15,0),this.camThumbPos=new de(0,0,0),this.camThumbLookAt=new de(0,20,0),this.camReturnPos=new de(0,0,0),this.camReturnLookAt=new de(0,0,0),this.camLobbyPos=new de(0,15,0),this.camLobbyLookAt=new de(0,15,-100),this.pxlCamFOV=n?80:60,this.pxlCamZoom=1,this.pxlCamAspect=1,this.pxlCamNearClipping=this.camNear,this.pxlCamFarClipping=this.camFar,this.groupList=[],this.geoList=[],this.geoLoadList=[],this.geoLoadListComplete=0,this.lightList=[],this.returnPortalGlowList=[],this.roomWarpVisuals={},this.proximityGeo=null,this.userAvatarGroup=new Zr,this.warpVisualActive=!1,this.warpVisualMaxTime=[1.5,1],this.warpVisualStartTime=0,this.warpVisualFader=new ee(0,1),this.warpVisualCmd=null,this.stepShaderFuncArr=[],this.mapMotionBlurPass=null,this.mapCopyMotionBlurPass=null,this.mapOverlayHeavyPass=null,this.mapOverlayPass=null,this.mapOverlaySlimPass=null,this.mapBoxAAPass=null,this.mapCrossAAPass=null,this.mapWorldPosMaterial=null,this.mapGlowPass=null,this.mapGlowMotionBlur=null,this.mapComposer=null,this.mapComposerMotionBlur=null,this.mapComposerBloom=null,this.mapComposerGlow=null,this.chroAberrationPass=null,this.chroAberrationRoomPass=null,this.lizardKingPass=null,this.lizardKingRoomPass=null,this.mapComposerWarpPass=null,this.blurScreenMerge=null,this.pxlRenderSettings={exposure:1,mult:n?1.5:1,bloomStrength:.5,bloomThresh:.6,bloomRadius:.05},this.exposureShiftActive=!1,this.delayComposer=null,this.delayPass=null,this.chroAberMult=new ee(1,0),this.blurDirCur=new ee(0,0),this.blurDirPrev=new ee(0,0),this.shaderPasses={},this.roomComposer=null,this.roomRenderPass=null,this.roomBloomPass=null,this.roomGlowPass=null,this.blurComposer=null,this.glowPassMask=new ee(1,0),this.objectClickable=[],this.objectClickableObjectList={},this.clickablePrevActiveObject=null,this.promoClickable=[],this.promoClickableObjectList={},this.promoPrevActiveObject=null,this.promoClickableLinks={},this.remoteVideoTextureList=[],this.remoteUserNameList=[],this.remoteUserMediaList={},this.remoteUserVideoList=[],this.remoteUserAudioList=[],this.camScreenData={count:0,prevCount:0,checkUserCount:!0,checkVideoStatus:!0,findCamCount:()=>{},videoObjectList:[],screenGeoList:[],screenClickable:[],screenMtlUniforms:[],userDataList:[],camFindInfoList:[]},this.curUserCount=0,this.prevUserCount=0,this.emit=(e,t)=>{}}setDependencies(e){this.scene=e.scene,this.pxlUtils=e.pxlUtils,this.pxlTimer=e.pxlTimer,this.pxlAnim=e.pxlAnim,this.pxlAutoCam=e.pxlAutoCam,this.pxlAudio=e.pxlAudio,this.pxlFile=e.pxlFile,this.pxlVideo=e.pxlVideo,this.pxlQuality=e.pxlQuality,this.pxlUser=e.pxlUser,this.pxlShaders=e.pxlShaders,this.pxlDevice=e.pxlDevice,this.pxlCamera=e.pxlCamera,this.pxlGuiDraws=e.pxlGuiDraws,this.emit=e.emit.bind(e)}init(){let e=Object.keys(this.roomSubList);console.log("subList",e),e.forEach((e=>{this.roomSubList[e].init()}))}boot(){}setBootRoom(e,t){console.log(e,t),this.bootRoom=e,this.bootLocation=t}postBoot(){this.pxlGuiDraws.togglePageDisplay(),this.roomSceneList[this.bootRoom].start(),this.posted=!0}postHelpIntro(){this.pxlDevice.mobile||this.pxlAutoCam.enabled?(this.pxlCamera.colliderValid=!0,this.pxlCamera.eventCheckStatus=!0,this.pxlCamera.colliderShiftActive=!0,this.pxlCamera.nearestFloorObjName="mobile",this.pxlCamera.colliderCurObjHit="AudioTrigger_2",this.pxlCamera.proximityScaleTrigger=!0,this.exposureShiftActive=!0,this.pxlDevice.mobile||(this.pxlAudio.play(),setTimeout((()=>{this.pxlAudio.initPlay()}),100))):this.pxlCamera.jogServerMemory(),this.postIntro=!0}start(){this.init()}step(){if(this.pxlTimer.step(),this.pxlAudio.step(),this.pxlQuality.step(),this.pxlAutoCam.step()&&this.pxlCamera.step(),this.pxlGuiDraws.step(),this.stepWarpPass(),this.pxlTimer.msRunner.x>this.checkContext&&this.activeContext){this.checkContext=this.pxlTimer.msRunner.x+1;let e=document.createElement("canvas");try{e.getContext("webgl")}catch(e){this.activeContext=!0,this.pxlGuiDraws.pxlNavCanvas.style.display="none"}}this.pxlDevice.mobile&&this.exposureShiftActive}async stop(){this.setExposure(0),Object.keys(this.roomSubList).forEach((e=>{this.roomSubList[e].stop()}))}loadRoom(e){return new Promise(((t,i)=>{this.verbose>2&&console.log("Loading Room - ",e),import(`${this.pxlRoomLclRoot}/${e}/${e}.js`).then((i=>{let n=new i[e](e,`../${this.pxlRoomLclRoot}/${e}/`,this.pxlFile,this.pxlAnim,this.pxlUtils,this.pxlDevice,this,this.pxlTimer.msRunner,null,null,this.cloud3dTexture);n.camera=this.pxlCamera.camera,n.scene=new Ge,n.userAvatarGroup||(n.userAvatarGroup=new Zr),n.scene.add(n.userAvatarGroup);var r={format:L,antialias:!1,sortObjects:!0,alpha:!0,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?P:E};n.scene.renderTarget=new ae(this.pxlDevice.sW*this.pxlQuality.screenResPerc,this.pxlDevice.sH*this.pxlQuality.screenResPerc,r),n.scene.renderTarget.texture.format=L,n.scene.renderTarget.texture.minFilter=w,n.scene.renderTarget.texture.magFilter=w,n.scene.renderTarget.texture.generateMipmaps=!1,n.scene.renderTarget.depthBuffer=!0,n.scene.renderTarget.depthTexture=new io(this.pxlDevice.sW*this.pxlQuality.screenResPerc,this.pxlDevice.sH*this.pxlQuality.screenResPerc),n.scene.renderTarget.depthTexture.format=R,n.scene.renderTarget.depthTexture.type=C,n.cloud3dTexture=this.cloud3dTexture,this.roomNameList.includes(e)||this.roomNameList.push(e),this.roomSceneList[e]=n,t(!0)}))}))}startAllRooms(){this.roomNameList.forEach((e=>{this.startRoom(this.roomSceneList[e])}))}startRoom(e){e.active=!1,e.startTime=this.pxlTimer.msRunner.x}newSubRoom(e){this.roomSubList[e.roomName]=e}addToRooms(e){let t={};return this.roomNameList.forEach((i=>{let n=e.clone();this.roomSceneList[i].scene.add(n),t[i]=n})),t}addToRoomLayers(e,t=1){let i={};return this.roomNameList.forEach((n=>{let r=e.clone();this.roomSceneList[n].scene.add(r),i[n]=r,r.layers.set(t)})),i}addToRoomParents(e,t){let i={};return this.parentNameList.includes(t)||this.parentNameList.push(t),this.roomNameList.forEach((n=>{let r=e.clone();if(this.parentGroupList[n]||(this.parentGroupList[n]={}),!this.parentGroupList[n][t]){let e=new Zr;this.parentGroupList[n][t]=e,this.roomSceneList[n].scene.add(e)}this.parentGroupList[n][t].add(r),i[n]=r})),i}buildRoomEnvironments(){this.roomNameList.forEach((e=>{this.roomSceneList[e].init(),this.roomSceneList[e].build()}))}getArtistInfo(){return null}setFogHue(e=[0,0],t=[1,1]){this.fog.color.getHSL();let i=[t[0]-e[0],t[1]-e[1]],n=Math.abs(.3183098861837907*Math.atan2(i[0],i[1])),r=(i[0]**2+i[1]**2)**.5/Math.max(this.pxlDevice.sW,this.pxlDevice.sH);this.fog.color.setHSL(n,.5*r+.3,.5*r),this.roomSceneList[this.currentRoom]&&this.roomSceneList[this.currentRoom].setFog&&this.roomSceneList[this.currentRoom].setFog(this.fog.color)}readShader(e=""){if("script_fog"==e){if(this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,1==this.mapOverlayHeavyPass.enabled)return this.mapOverlayHeavyPass.material;if(1==this.mapOverlayPass.enabled)return this.mapOverlayPass.material;if(1==this.mapOverlaySlimPass.enabled)return this.mapOverlaySlimPass.material}else{if("script_dArrows"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.geoList.dArrows[0].material;if("script_userScreens"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.camScreenData.screenGeoList[0].material;if("script_warpZonePortals"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.returnPortalGlowList[0].material;if("script_lizardking"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.lizardKingPass.material;if("script_majorTom"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.pxlUser.sFieldPass.material;if("script_fractalSubstrate"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.pxlUser.iZoomPass.material;if("script_fractalEcho"==e)return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.delayPass.material;{let t=e.split("_");if(t.shift(),t=t.join("_"),this.geoList[t])return this.pxlGuiDraws.guiWindows.shaderGui.currentShader=e,this.geoList[t].material}}}setShader(e,t,i){let n,r=this.pxlGuiDraws.guiWindows.shaderGui.currentShader;if("script_fog"==r)1==this.mapOverlayHeavyPass.enabled?n=this.mapOverlayHeavyPass.material:1==this.mapOverlayPass.enabled?n=this.mapOverlayPass.material:1==this.mapOverlaySlimPass.enabled&&(n=this.mapOverlaySlimPass.material);else{if("script_dArrows"==r)return void this.geoList.dArrows.forEach((e=>{n=e.material,n.vertexShader=t,n.fragmentShader=i,n.needsUpdate=!0}));if("script_userScreens"==r)return void this.camScreenData.screenGeoList.forEach((e=>{n=e.material,n.vertexShader=t,n.fragmentShader=i,n.needsUpdate=!0}));if("script_warpZonePortals"==r)return void this.returnPortalGlowList.forEach((e=>{n=e.material,n.vertexShader=t,n.fragmentShader=i,n.needsUpdate=!0}));if("script_lizardking"==r)n=this.lizardKingPass.material;else if("script_majorTom"==r)n=this.pxlUser.sFieldPass.material;else if("script_fractalSubstrate"==r)n=this.pxlUser.iZoomPass.material;else if("script_fractalEcho"==r)n=this.delayPass.material;else{let e=r.split("_");e.shift(),e=e.join("_"),this.geoList[e]&&(n=this.geoList[e].material)}}n&&(n.vertexShader=t,n.fragmentShader=i,n.needsUpdate=!0)}buildSnow(){let e=new ri,t=[],i=[],n=[];const r=()=>.25*Math.floor(4e3*Math.random()%4);for(let e=0;e<12e3;++e)t.push(0,0,0),i.push(Math.random(),Math.random(),2*Math.random()-1,.5*Math.random()+.5),n.push(r(),r());let s=new qt(t,3),o=new qt(i,4),a=new qt(n,2);e.setAttribute("position",s),e.setAttribute("seeds",o),e.setAttribute("atlas",a);let l={snowTexture:{type:"t",value:this.pxlUtils.loadTexture(this.pxlUtils.assetRoot+"snow.jpg",1,{magFilter:x,minFilter:y})},pointScale:{type:"f",value:12*this.pxlQuality.screenResPerc},intensity:{type:"f",value:1},rate:{type:"f",value:.035}},c=this.pxlFile.pxlShaderBuilder(l,this.pxlShaders.particles.snowVert(this.mobile),this.pxlShaders.particles.snowFrag());c.side=2,c.transparent=!0,c.blending=2,c.depthTest=!0,c.depthWrite=!1;let h=new Qs(e,c);h.sortParticles=!1,h.frustumCulled=!1,this.scene.add(h),h.layers.set(1),h.pBaseScale=12,this.geoList.snow=h}buildBackgroundObject(e={},t=null,i=null){let n=new Zi,r={};Object.assign(r,e),null!=t&&"string"==typeof t||(t=this.pxlShaders.scene.bgScreenVert()),null!=i&&"string"==typeof i||(i=this.pxlShaders.scene.bgScreenFrag());let s=this.pxlFile.pxlShaderBuilder(r,t,i);s.side=2,s.depthTest=!0,s.depthWrite=!1;let o=new Mi(n,s);return o.frustumCulled=!1,o}clickUserDetect(){if(this.roomSceneList[this.currentRoom].castRay&&this.roomSceneList[this.currentRoom].castRay(!0,this.pxlDevice.touchMouseData.button),this.pxlDevice.mobile)return;let e=null,t=new ee(this.pxlDevice.mouseX/this.pxlDevice.sW*2-1,-this.pxlDevice.mouseY/this.pxlDevice.sH*2+1);this.pxlCamera.objRaycast.setFromCamera(t,this.pxlCamera.camera);var i=[];if(this.objectClickable.length>0&&(i=this.pxlCamera.objRaycast.intersectObjects(this.objectClickable)),i.length>0){let t=99999;for(var n=0;n<i.length;++n){let r=(s=i[n]).distance;r<t&&(e=s.object,t=Math.min(t,r))}}e&&this.clickableActions(e.name);let r=null;if(this.promoClickable.length>0&&(i=this.pxlCamera.objRaycast.intersectObjects(this.promoClickable)),i.length>0){let e=99999;for(n=0;n<i.length;++n){var s;let t=(s=i[n]).distance;t<e&&(r=s.object,e=Math.min(e,t))}}r&&this.promoActions(r)}clickableActions(e=null){"CallToAction"==e&&this.clickablePrevActiveObject&&(this.pxlGuiDraws.ctaBuildPopup(),this.objectClickableObjectList[this.clickablePrevActiveObject].Inactive.visible=!0,this.objectClickableObjectList[this.clickablePrevActiveObject].Hover.visible=!1,this.clickablePrevActiveObject=null)}promoActions(e=null){let t=e.userData.video;(e.name,this.promoClickableLinks.hasOwnProperty(t))&&window.open(this.promoClickableLinks[t],"_blank").focus()}hoverUserDetect(){this.roomSceneList[this.currentRoom].castRay&&this.roomSceneList[this.currentRoom].castRay(!1,this.pxlDevice.touchMouseData.button);let e=null,t=new ee(this.pxlDevice.mouseX/this.pxlDevice.sW*2-1,-this.pxlDevice.mouseY/this.pxlDevice.sH*2+1);this.pxlCamera.objRaycast.setFromCamera(t,this.pxlCamera.camera);var i=[];if(this.objectClickable.length>0&&(i=this.pxlCamera.objRaycast.intersectObjects(this.objectClickable)),i.length>0){let t=99999;for(var n=0;n<i.length;++n){let r=(s=i[n]).distance;r<t&&(e=s.object,t=Math.min(t,r))}}if(e)return this.pxlDevice.setCursor("help"),void(this.objectClickableObjectList[e.name]&&(null==this.clickablePrevActiveObject&&(this.clickablePrevActiveObject=e.name),this.objectClickableObjectList[e.name].Inactive.visible=!1,this.objectClickableObjectList[e.name].Hover.visible=!0));this.clickablePrevActiveObject&&(this.objectClickableObjectList[this.clickablePrevActiveObject].Inactive.visible=!0,this.objectClickableObjectList[this.clickablePrevActiveObject].Hover.visible=!1,this.clickablePrevActiveObject=null),this.pxlDevice.setCursor("grab");let r=null;if(this.promoClickable.length>0&&(i=this.pxlCamera.objRaycast.intersectObjects(this.promoClickable)),i.length>0){let e=99999;for(n=0;n<i.length;++n){var s;let t=(s=i[n]).distance;t<e&&(r=s.object,e=Math.min(e,t))}}r?(this.pxlDevice.setCursor("alias"),this.promoClickableObjectList[r.name]&&(null==this.promoPrevActiveObject&&(this.promoPrevActiveObject=r.name),this.promoClickableObjectList[r.name].x=1)):(this.promoPrevActiveObject&&(this.promoClickableObjectList[this.promoPrevActiveObject].x=.1,this.promoPrevActiveObject=null),this.pxlDevice.setCursor("grab"))}updateCompUniforms(e=null){e&&(this.pxlRenderSettings.exposure=e*this.pxlRenderSettings.mult),this.mapOverlayPass&&(this.mapMotionBlurPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlayHeavyPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlayPass.uniforms.exposure.value=this.pxlRenderSettings.exposure,this.mapOverlaySlimPass.uniforms.exposure.value=this.pxlRenderSettings.exposure)}sendRoomMessage(e,t,i){this.roomSceneList[e]&&this.roomSceneList[e].onMessage(t,i)}buildComposers(){this.mapWorldPosMaterial=new Ui({uniforms:{camNear:{type:"f",value:this.pxlCamera.camera.near},camFar:{type:"f",value:this.pxlCamera.camera.far}},vertexShader:this.pxlShaders.rendering.worldPositionVert(),fragmentShader:this.pxlShaders.rendering.worldPositionFrag()}),this.mapWorldPosMaterial.side=0,this.blurComposer=new nd(this.engine),this.shaderPasses.blurXShaderPass=new ed(new Ui({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:this.scene.renderGlowTarget.texture},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.directionalBlurPass("pDiffuse",[1,0],14,1.8),defines:{}}),"tDiffuse"),this.shaderPasses.blurXShaderPass.material.transparent=!0,this.shaderPasses.blurXShaderPass.needsSwap=!0,this.blurComposer.addPass(this.shaderPasses.blurXShaderPass);let e=new ed(Ju);this.blurComposer.addPass(e),this.shaderPasses.blurYShaderPass=new ed(new Ui({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:this.scene.renderGlowTarget.texture},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.directionalBlurPass("pDiffuse",[0,1],14,1.3),defines:{}}),"tDiffuse"),this.shaderPasses.blurYShaderPass.material.transparent=!0,this.blurComposer.addPass(this.shaderPasses.blurYShaderPass),this.shaderPasses.scatterMixShaderPass=new ed(new Ui({uniforms:{time:{value:this.time},tDiffuse:{value:null},pDiffuse:{value:this.scene.renderGlowTarget.texture},resUV:{value:this.pxlDevice.screenRes}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.mixBlurShaderPass(),defines:{}}),"tDiffuse"),this.shaderPasses.scatterMixShaderPass.material.transparent=!0,this.blurComposer.addPass(this.shaderPasses.scatterMixShaderPass),this.mapComposerMotionBlur=new nd(this.engine),this.mapMotionBlurPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},rDiffuse:{value:this.scene.renderTarget.texture},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camRotXYZ:{value:this.pxlCamera.camRotXYZ},blurDirCur:{type:"f",value:this.blurDirCur},blurDirPrev:{type:"f",value:this.blurDirPrev},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.motionBlurPostProcess(this.pxlDevice.screenRes,this.pxlDevice.mobile),defines:{}}),"tDiffuse"),this.mapMotionBlurPass.needsSwap=!0,this.mapComposerMotionBlur.addPass(this.mapMotionBlurPass),this.mapMotionBlurPass.enabled=!1,this.mapComposerMotionBlur.renderToScreen=!1,this.mapComposerGlow=new nd(this.engine);let t=new sd(this.scene,this.pxlCamera.camera);this.mapComposerGlow.addPass(t),this.blurScreenMerge=new ed(new Ui({uniforms:{tDiffuse:{value:null},rDiffuse:{value:this.scene.renderTarget.texture},mtDiffuse:{value:this.scene.renderTarget.texture},exposure:{type:"f",value:this.pxlRenderSettings.exposure}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.compLayersPostProcess(),defines:{}}),"tDiffuse"),this.blurScreenMerge.needsSwap=!0,this.mapComposerGlow.addPass(this.blurScreenMerge);let i=new ed(Ju);this.mapComposerGlow.addPass(i),this.mapComposerGlow.renderToScreen=!1,this.mapComposerGlow.autoClear=!0,this.mapOverlayHeavyPass=new ed(new Ui({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:this.scene.renderTarget.texture},bloomTexture:{value:this.mapComposerGlow.renderTarget2.texture},sceneDepth:{value:this.scene.renderTarget.depthTexture},scenePos:{value:this.scene.renderWorldPos.texture},noiseTexture:{value:this.cloud3dTexture},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlayHeavyShader(),defines:{}}),"tDiffuse"),this.mapOverlayHeavyPass.needsSwap=!0,this.mapOverlayPass=new ed(new Ui({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:this.scene.renderTarget.texture},bloomTexture:{value:this.mapComposerGlow.renderTarget2.texture},sceneDepth:{value:this.scene.renderTarget.depthTexture},scenePos:{value:this.scene.renderWorldPos.texture},noiseTexture:{value:this.cloud3dTexture},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlayShader(),defines:{}}),"tDiffuse"),this.mapOverlayPass.needsSwap=!0,this.mapOverlaySlimPass=new ed(new Ui({uniforms:{gamma:{type:"f",value:this.pxlDevice.gammaCorrection},exposure:{type:"f",value:this.pxlRenderSettings.exposure},time:{value:this.pxlTimer.msRunner},camPos:{value:this.pxlCamera.camera.position},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:this.scene.renderTarget.texture},bloomTexture:{value:this.mapComposerGlow.renderTarget2.texture},sceneDepth:{value:this.scene.renderTarget.depthTexture},fogMult:{value:this.fogMult},proximityMult:{value:1}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.finalOverlaySlimShader(),defines:{}}),"tDiffuse"),this.mapOverlaySlimPass.needsSwap=!0,this.mapGlowPass=new ed(new Ui({uniforms:{time:{value:this.pxlTimer.msRunner},ratio:{type:"f",value:1},tDiffuse:{value:null},rDiffuse:{value:this.scene.renderGlowTarget.texture},sceneDepth:{value:this.scene.renderTarget.depthTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.glowPassPostProcess(),defines:{}}),"tDiffuse"),this.mapGlowPass.needsSwap=!0,this.mapComposer=new nd(this.engine),this.mapComposer.addPass(this.mapOverlayHeavyPass),this.mapComposer.addPass(this.mapOverlayPass),this.mapComposer.addPass(this.mapOverlaySlimPass),this.mapComposer.addPass(this.mapGlowPass),this.mapOverlayHeavyPass.enabled=!1,this.mapOverlayPass.enabled=!1,this.pxlUser.lKingWarp=new ee(...this.pxlUser.lKingInactive),this.lizardKingPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.lKingPostProcess(),defines:{}}),"tDiffuse"),this.pxlUser.lKingPass=this.lizardKingPass,this.lizardKingPass.enabled=!1,this.pxlUser.sFieldPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture},starTexture:{value:this.pxlUtils.loadTexture(this.pxlUtils.assetRoot+"starNoise_1k.jpg")}},vertexShader:this.pxlShaders.rendering.sFieldPostProcessVert(),fragmentShader:this.pxlShaders.rendering.sFieldPostProcessFrag(),defines:{}}),"tDiffuse"),this.pxlUser.sFieldPass.enabled=!1,this.pxlUser.iZoomPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},tDiffusePrev:{type:"t",value:null},time:{value:this.pxlTimer.msRunner},ratio:{value:this.pxlDevice.screenRes},noiseTexture:{value:this.cloud3dTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.iZoomPostProcess(),defines:{}}),"tDiffuse"),this.pxlUser.iZoomPass.enabled=!1,this.chroAberrationPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},ratio:{value:this.pxlDevice.screenRes},warpMult:{value:this.chroAberMult},chroAberUVTexture:{value:this.chroAberUVTexture},lKing:{value:this.pxlUser.lKingWarp}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.chroAberPostProcess(),defines:{}}),"tDiffuse"),this.chroAberrationPass.enabled=!1,this.mapComposer.addPass(this.chroAberrationPass),this.mapComposer.addPass(this.lizardKingPass),this.mapComposer.addPass(this.pxlUser.sFieldPass),this.mapComposer.addPass(this.pxlUser.iZoomPass),this.mapComposerWarpPass=new ed(new Ui({uniforms:{time:{value:this.pxlTimer.msRunner},fader:{value:this.warpVisualFader},tDiffuse:{value:null},noiseTexture:{value:this.cloud3dTexture},animTexture:{value:this.blockAnimTexture}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.warpPostProcess(),defines:{}}),"tDiffuse"),this.mapComposerWarpPass.needsSwap=!0,this.mapComposerWarpPass.enabled=!1,this.mapComposer.addPass(this.mapComposerWarpPass),this.mapBoxAAPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},resUV:{type:"f",value:this.pxlDevice.screenRes},ratio:{type:"f",value:1},gamma:{type:"f",value:this.pxlDevice.gammaCorrection}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.boxAntiAliasPass(),defines:{}}),"tDiffuse"),this.mapBoxAAPass.enabled=!1,this.mapComposer.addPass(this.mapBoxAAPass),this.mapCrossAAPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},resUV:{type:"f",value:this.pxlDevice.screenRes},ratio:{type:"f",value:1},gamma:{type:"f",value:this.pxlDevice.gammaCorrection}},vertexShader:this.pxlShaders.core.camPosVert(),fragmentShader:this.pxlShaders.rendering.crossAntiAliasPass(),defines:{}}),"tDiffuse"),this.mapCrossAAPass.enabled=!1,this.mapComposer.addPass(this.mapCrossAAPass),this.mapComposer.autoClear=!0;let n=this.roomSceneList[this.bootRoom].scene;this.roomComposer=new nd(this.engine),this.roomRenderPass=new sd(n,this.pxlCamera.camera),this.roomComposer.addPass(this.roomRenderPass),this.roomNameList.forEach((e=>{if(e!=this.mainRoom){let t=this.roomSceneList[e].applyRoomPass(this.roomComposer);t&&(t.enabled=!1,this.roomComposer.addPass(t))}})),this.roomBloomPass=new ad(new ee(.5*this.pxlDevice.mapW,.5*this.pxlDevice.mapH),1.5,.8,.85),this.roomBloomPass.threshold=this.pxlRenderSettings.bloomThresh,this.roomBloomPass.strength=this.pxlRenderSettings.bloomStrength,this.roomBloomPass.radius=this.pxlRenderSettings.bloomRadius,this.roomComposer.addPass(this.roomBloomPass),this.roomGlowPass=new ed(new Ui({uniforms:{time:{value:this.pxlTimer.msRunner},ratio:{type:"f",value:1},tDiffuse:{value:null},gDiffuse:{value:this.blurComposer.writeBuffer.texture},rDiffuse:{value:this.blurComposer.renderTarget2.texture},sceneDepth:{value:this.scene.renderTarget.depthTexture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.glowPassPostProcess(),defines:{}}),"tDiffuse"),this.roomGlowPass.needsSwap=!0,this.roomComposer.addPass(this.roomGlowPass),this.roomComposer.addPass(this.chroAberrationPass),this.roomComposer.addPass(this.lizardKingPass),this.roomComposer.addPass(this.pxlUser.sFieldPass),this.roomComposer.addPass(this.pxlUser.iZoomPass),this.roomComposer.addPass(this.mapComposerWarpPass),this.roomComposer.addPass(this.mapCrossAAPass),this.roomComposer.addPass(this.mapBoxAAPass),this.roomComposer.autoClear=!0,this.delayComposer=new nd(this.engine),new sd(this.scene,this.pxlCamera.camera),this.delayPass=new ed(new Ui({uniforms:{tDiffuse:{value:null},roomComposer:{type:"f",value:0},tDiffusePrev:{value:this.mapComposer.renderTarget1.texture},tDiffusePrevRoom:{value:this.roomComposer.renderTarget1.texture}},vertexShader:this.pxlShaders.core.defaultVert(),fragmentShader:this.pxlShaders.rendering.textureStorePass(),defines:{}}),"tDiffuse"),this.delayPass.clear=!1,this.delayComposer.addPass(this.delayPass),this.delayComposer.renderToScreen=!1,this.delayComposer.autoClear=!1,this.pxlUser.iZoomPass.uniforms.tDiffusePrev.value=this.delayComposer.renderTarget2.texture}setExposure(e){e*=1,this.pxlCamera.uniformScalars.exposureUniformBase=e,this.updateCompUniforms(e)}stepWarpPass(){if(this.warpVisualActive){let e=(this.pxlTimer.curMS-this.warpVisualStartTime)/this.warpVisualMaxTime[this.pxlCamera.warpType],t=Math.min(1,3*e),i=Math.min(1,3-3*e);1==t&&1==i&&this.pxlCamera.warpActive&&this.pxlCamera.warpCamRun(),this.warpVisualFader.x=t,this.warpVisualFader.y=i,i<=0&&this.stopWarpVisual()}}checkUserVideoStatus(e){}remoteUserUpdateMedia(e,t=!1,i=null){}userRemoveRemoteData(e){}stepShaderValues(){this.stepShaderFuncArr.forEach((e=>{"object"==typeof e?e.step():"string"==typeof e&&(console.log("Does this trigger?"),console.log(e))}))}stepAnimatedObjects(){this.pxlUser.itemListNames.length>0&&this.pxlUser.itemListNames.forEach((e=>{this.pxlUser.itemList[e].rotation.y=this.pxlTimer.msRunner.x*this.pxlUser.itemRotateRate}))}initWarpVisual(e){this.warpVisualActive=!0,this.warpVisualFader.x=0,this.warpVisualFader.y=1,this.warpVisualStartTime=this.pxlTimer.curMS,this.mapComposerWarpPass.enabled=!0}stopWarpVisual(){this.warpVisualActive=!1,this.warpVisualFader.x=1,this.warpVisualFader.y=0,this.mapComposerWarpPass.enabled=!!this.pxlUser.iZoom}prepPortalRender(){}cleanupPortalRender(){}setPortalTexture(e,t){this.roomWarpVisuals[t].material.map=e}warpPortalQueue(){return Object.keys(this.roomSceneList).reverse()}getSceneSnapshot(e){let t=this.roomSceneList[e];this.engine.setRenderTarget(t.warpZoneRenderTarget),t.prepPortalRender(),this.engine.render(t.scene||t.scene,this.pxlCamera.camera),t.cleanupPortalRender(),this.engine.setRenderTarget(null)}mapRender(e=!0){if(this.pxlTimer.active&&this.step(),this.pxlTimer.curMS>this.nextRenderMS||0==e){this.prevRenderMS=this.nextRenderMS,this.nextRenderMS=this.pxlTimer.curMS+this.renderInterval,this.stepShaderValues(),this.stepAnimatedObjects();let e=this.roomSceneList[this.currentRoom];e&&e.booted&&(e.step(),e.camera.layers.disable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(e.scene.renderTarget),this.engine.clear(),this.engine.render(e.scene,e.camera),this.engine.setRenderTarget(null),e.camera.layers.enable(this.renderLayerEnum.SKY),this.mapComposerGlow&&(this.pxlQuality.settings.bloom||this.pxlQuality.settings.fog)&&this.mapComposerGlow.render(),this.mapRenderBlurStack(e,e.camera,e.scene,this.scene.renderGlowTarget),this.roomComposer.render()),this.pxlUser.iZoom&&this.delayComposer.render()}this.pxlTimer.active&&e&&requestAnimationFrame((()=>{this.mapRender()}))}mapRenderBlurStack(e,t,i,n){if(this.blurComposer){e.geoList.GlowPass&&(e.geoList.GlowPass.forEach((e=>{if(e.userData.hasOwnProperty("GlowPerc")){let t=e.userData.GlowPerc;e.material.hasOwnProperty("uniforms")&&e.material.uniforms.mult&&(e.material.uniforms.mult.value=t)}})),e.geoList.hasOwnProperty("GlowPassMask")&&e.geoList.GlowPassMask.forEach((e=>{e.material.uniforms&&e.material.uniforms.cdMult&&(e.material.uniforms.cdMult.value=0)}))),t.layers.disable(this.renderLayerEnum.SCENE),t.layers.disable(this.renderLayerEnum.PARTICLES),t.layers.disable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(n);let r=0,s=i.background.clone();i.background.set(r),this.engine.setClearColor(r,0),this.engine.render(i,t),i.background.r=s.r,i.background.g=s.g,i.background.b=s.b,t.layers.enable(this.renderLayerEnum.SCENE),t.layers.enable(this.renderLayerEnum.PARTICLES),t.layers.enable(this.renderLayerEnum.SKY),this.engine.setRenderTarget(null),e.geoList.GlowPass&&(e.geoList.GlowPass.forEach((e=>{e.userData.hasOwnProperty("GlowPerc")&&e.material.hasOwnProperty("uniforms")&&e.material.uniforms.mult&&(e.material.uniforms.mult.value=1)})),e.geoList.hasOwnProperty("GlowPassMask")&&e.geoList.GlowPassMask.forEach((e=>{e.material.uniforms&&e.material.uniforms.cdMult&&(e.material.uniforms.cdMult.value=1)}))),this.blurComposer.render(),this.roomBloomPass.enabled=!1}}}class ud{static svgPromise(e,t,i=null,n=null){let r={},s=document.getElementById(t);if(!s)return;null!=i&&s.classList.add(i);let o=Promise.resolve(ju.getURLContent(e));return o.then((e=>{s.innerHTML=e,r.svg=s.getElementsByTagName("svg")[0],null!=n&&r.svg.classList.add(n)})),r.promise=o,r}static svgRawPromise(e){let t={};return Promise.resolve(ju.getURLContent(e)).then((e=>{let i=document.createElement("div");i.innerHTML=e,t.svg=i.getElementsByTagName("svg")[0]})),t}static svgIconPromise(e,t,i,n=null,r=null){let s=this,o={hover:null,mute:null,caret:null,indicator:null,waiting:[],state:null};o.eventType=i;let a=document.getElementById(t);if(!a)return;r?a.classList.add(r):a.classList.add("iconStyle"),o.parent=a.parentNode,o.parent.classList.add("iconHover"),o.parent.addEventListener("click",(e=>{s.iconEvent("click",o,i)}));let l=Promise.resolve(ju.getURLContent(e));return l.then((e=>{if(a.innerHTML=e,o.svg=a.getElementsByTagName("svg")[0],o.svg){r?o.svg.classList.add(r):o.svg.classList.add("iconStyle");let e=o.svg.children,i=o.svg.getAttribute("xmlns"),s=o.svg.getAttribute("height"),l=o.svg.getAttribute("width");for(let r=0;r<e.length;++r){let c=e[r];if("speakerIcon"==t){let e=a.getAttribute("xmlns"),t=document.createElementNS(e,"rect");t.setAttribute("x",-1),t.setAttribute("y",-1),t.setAttribute("fill","white"),t.setAttribute("fill-opacity",0),t.setAttribute("height",s+2),t.setAttribute("width",l+2),t.setAttribute("z-index",-1),a.appendChild(t),o.hover=t,o.svg.setAttribute("fill-opacity",this.toggleOpacity[0])}let h=c.getAttribute("id");if("mute"==h){o.mute=c,o.mute.style.transformOrigin="50% 50%",o.mute.style.filter="alpha(opacity=0)",o.mute.style.opacity="0",o.mute.style.transform="scale(0,0)",o.mute.style.transition="scale 1s, opacity .5s, filter .5s";let e=document.createElement("style");e.type="text/css",e.innerHTML="\n                                @keyframes loadingSpinner{\n                                    0%{\n                                        transform: rotate(0deg);\n                                    }\n                                    100%{\n                                        transform: rotate(360deg);\n                                    }\n                                }\n                            ",o.svg.appendChild(e);let t=Math.max(2,.25*Math.min(s,l)),r=.5*l,a=.5*s,h=document.createElementNS(i,"path");h.setAttribute("d",` M ${r} ${a-t} A ${t} ${t} 0 1 1 ${r-t} ${a} `),h.setAttribute("stroke","white"),h.setAttribute("stroke-width","2"),h.style.display="none",h.style.transformOrigin="50% 50%",h.style.animation="loadingSpinner 1s linear infinite",h.style.animationDuration="2s",h.style.animationPlayState="paused",o.indicator=h,o.svg.appendChild(h),this.toggleIcon(o,n)}else"caret"==h?(o.caret=c,o.caret.style.transformOrigin="50% 50%",o.caret.style.transition="transform .5s",this.flipIcon(o,!1)):"state"==h?(c.style.display="none",o.state=c):o.waiting.push(c)}let c=document.createElementNS(i,"rect");c.classList.add("iconHover"),c.setAttribute("x",0),c.setAttribute("y",0),c.setAttribute("height",s),c.setAttribute("width",l),o.svg.appendChild(c)}})),o.promise=l,o}static svgButtonPromise(e,t,i=null,n=!1,r=null){if("string"==typeof t&&!(t=document.getElementById(t)))return;let s=this;Promise.resolve(ju.getURLContent(e)).then((e=>{t.innerHTML=e;let o=t.getElementsByTagName("svg");if(o.length>0&&(o=o[0],i&&(i="string"==typeof i?[i]:i).forEach((e=>{o.classList.add(e)})),n)){let e=o.getAttribute("xmlns"),t=parseInt(o.getAttribute("height")),i=parseInt(o.getAttribute("width")),n=document.createElementNS(e,"rect");n.setAttribute("x",-1),n.setAttribute("y",-1),n.setAttribute("fill","white"),n.setAttribute("fill-opacity",0),n.setAttribute("height",t+2),n.setAttribute("width",i+2),n.setAttribute("z-index",-1),o.appendChild(n);let a=o.getElementById("state");a&&a.setAttribute("fill-opacity",this.toggleOpacity[0]),r&&(o.onclick=e=>{s.svgCheckClick(e,r)},s.pxlDevice.mobile?(o.ontouchstart=e=>{s.svgStylize(e,!0)},o.ontouchend=e=>{s.svgStylize(e,!1)}):(o.onmouseover=e=>{s.svgStylize(e,!0)},o.onmouseout=e=>{s.svgStylize(e,!1)}))}}))}}class dd{constructor(e,t="Metal-Asylum",i="images/assets/",n="images/GUI/"){this.projectTitle=t,this.verbose=e,this.sW=window.innerWidth,this.sH=window.innerHeight,this.mobile=!1,this.pxlFile=null,this.pxlCookie=null,this.pxlTimer=null,this.pxlAudio=null,this.pxlUtils=null,this.pxlUser=null,this.pxlDevice=null,this.pxlAutoCam=null,this.pxlCamera=null,this.pxlNavCanvas=null,this.pxlQuality=null,this.pxlEnv=null,this.assetRoot=i,this.guiRoot=n,this.introHelpActive=!0,this.branding={title:t,loader:n+".svg",logo:n+".svg",medalion:n+".svg",stack:n+".svg"},this.loaderPhrases=["Loading..."],this.lableBoxSize=40,this.optionWidthRound=10,this.optionWidthAdd=25,this.deviceOptionHeight=[0,300],this.pxlLoader=null,this.pxlLoaderCount=0,this.pxlLoaderTotal=5,this.hudBlock={obj:null,active:!1},this.userControlBlock=null,this.hudVisibility=!0,this.hudIcons={},this.hudElements={},this.guiWindows={},this.msgCount=0,this.hudMedalionBar=null,this.userProfileMessageInput=null,this.userProfileReturnMessage=null,this.userCountObj=null,this.userCountCur=0,this.messageCountObj=null,this.messageCountCur=0,this.chatMessageDisplay=null,this.chatMessageInput=null,this.camChoicesActive=!1,this.micChoicesActive=!1,this.pxlNavData={active:!1,gui:null,height:null,fpsSet:0,fps:null,dl:null,ul:null},this.djPlayerObj=null,this.buildGuiStatus={hud:!1,userTopBar:!1,bottomBar:!1,djPlayer:!1,roomControls:!1,verseList:!1,medalion:!0,loadingBranding:!1},this.requestVerseList=!1,this.verseList=[],this.verseUserCounts={},this.verseTitlePrefix="",this.verseTitleSuffix="'s Room",this.multiverseData={fromVerse:null,toVerse:null,electedVerse:null,mitosisState:!1,mitosisBufferTime:15,mitosisTime:0,mitosisUpdateTime:0},this.textDescriptions={chatIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">C</span> )</span><br>chat',pos:[1,-1.5]},multiverseIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">U</span> )</span><br>multiverse<br>selection',pos:[0,-1.3]},djPlayerVolumeParent:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">B</span> )</span><br>music volume',pos:[0,-1.5]},speakerIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute people<br>pick audio output',pos:[0,-1.5]},micIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">M</span> )</span><br>mute/pick<br>mic input',pos:[0,-1.5]},camIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">V</span> )</span><br>enable/pick<br>video input',pos:[0,-1.5]},helpIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">?</span> )</span><br>help &<br>instructions',pos:[0,-1.5]},infoIconParent:{text:'Info <span class="helpHotKeyParent">( <span class="helpHotKey">I</span> )</span>',pos:[-1,0],offset:[-10,0]},settingsIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">G</span> )</span><br>graphics &<br>navigation',pos:[0,-1.5]},muteAllIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute all users',pos:[1,0]},fullScreenIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">F</span> )</span><br>toggle full screen',pos:[-1,0]},videoQualityIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">H</span> )</span><br>video quality settings',pos:[-1,0]},statsIcon:{text:"jitsi connection status; toggle connection ",pos:[1,0]},usersIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">T</span> )</span> user moderator tools',pos:[1,0]},ft2Button:{text:"Environment",pos:[-1,0],offset:[-10,0]},ft3Button:{text:"Invite Friends",pos:[-1,0],offset:[-10,0]},hud_userCount:{text:"# of People",pos:[-1,0],offset:[-10,0]}},this.loading=!0,this.disclaimer=!1,this.mapPrompt=null,this.mapPromptBG=null,this.delayLoadChatWindow=!1,this.renderSettings=null,this.controlSettings=null,this.shaderEditorDisplay=null,this.radioControls=[],this.controlState=[!0,!1,!1,!1],this.controlToggle=[!0,!0,!1,!1],this.buttonPadding=6,this.toggleOpacity=[.6,1],this.qualityText=["Netbook","Laptop","Desktop Computer","Gamer Rig"],this.activeItem=null,this.jmaWindowVis=!1,this.actionPopUp=null,this.ctaLocalDocURL={},this.ctaContentLoading=!1,this.googleDocHTML=null,this.googleDocURL=""}setDependencies(e){this.pxlFile=e.pxlFile,this.pxlCookie=e.pxlCookie,this.pxlTimer=e.pxlTimer,this.pxlAudio=e.pxlAudio,this.pxlUtils=e.pxlUtils,this.pxlUser=e.pxlUser,this.pxlDevice=e.pxlDevice,this.pxlAutoCam=e.pxlAutoCam,this.pxlCamera=e.pxlCamera,this.pxlNavCanvas=e.pxlNavCanvas,this.pxlQuality=e.pxlQuality,this.pxlEnv=e.pxlEnv,this.mobile=e.mobile,this.renderSettings=this.pxlCookie.readCookie(this.pxlUser.renderSettingsCookie),this.controlSettings=this.pxlCookie.readCookie(this.pxlUser.controlModeCookie),super.setDependencies(e)}init(){this.cssBuildClasses(),this.buildConsole()}prepLoader(){this.mapPromptBG=document.createElement("div"),this.mapPromptBG.classList.add("mapPromptBackgroundStyle"),document.body.appendChild(this.mapPromptBG),this.mapPrompt=document.createElement("div"),this.mapPrompt.setAttribute("id","mapPrompt"),this.mapPrompt.classList.add("mapPromptStyle"),this.mapPrompt.classList.add("fader"),this.mapPrompt.classList.add("visOn"),this.mapPrompt.innerHTML=`\n            <div id="loaderLogoBranding" class='pxlLoaderLogo'></div>\n            <div class='loadStyleParent'>\n              <div id='pxlLoader' class='loadStyle'></div>\n              <div id='pxlLoaderBackground' class='loadStyleBackground'></div>\n            </div>\n            <div id="loaderBranding" class='pxlLoaderTitle'>${this.projectTitle}</div>\n            <div id="loaderMessage" class='pxlLoaderMessage'></div>\n          `,document.body.appendChild(this.mapPrompt);let e=document.getElementById("loaderMessage");if(e){let t=this.loaderPhrases[Math.floor(Math.random()*this.loaderPhrases.length)];e.innerHTML=t}this.buildGuiStatus.loadingBranding&&ud.svgPromise(this.branding.loader,"loaderBranding","pxlLoaderTitle","loadBrandingLogo"),this.pxlLoader=document.getElementById("pxlLoader"),this.pxlLoader.style.width="2%";let t=document.createElement("div");t.classList.add("canvasCrashPromptBackgroundStyle"),document.body.appendChild(t);let i,n=document.createElement("div");n.classList.add("canvasCrashPromptStyle"),t.appendChild(n),this.pxlQuality&&(i=0==parseInt(this.pxlQuality.detailLimit)?`Looks like your computer is having a hard time, but we’ve got your fix.\n          <br>Please click <a id="crashLink" class="crashLink">HERE</a> to reload ${this.projectTitle}.\n          <br>If you’re still having issues, drop us a line in the chat.`:`Looks like your computer is still having trouble, but we’ve got another fix for ya.\n          <br>Please click <a id="crashLink" class="crashLink">HERE</a> to reload ${this.projectTitle} again.\n          <br>Again, if you’re still having issues, drop us a line in the chat.`),n.innerHTML=i;let r=document.getElementById("crashLink"),s=this;r&&(r.onclick=e=>{s.crashLinkTrigger(e,s)})}stepLoader(e=""){this.pxlLoaderCount+=1;let t=Math.min(100,this.pxlLoaderCount/(this.pxlLoaderTotal-1)*100);100==t&&(this.pxlLoader.style.borderRadius="5px"),this.pxlLoader.style.width=t+"%",this.verbose>=$h&&console.log("Loader",this.pxlLoaderCount,this.pxlLoader.style.width,"; "+e)}setLoaderPhrases(e,t=!0){e&&e.length>0&&(t&&(this.loaderPhrases=[]),this.loaderPhrases=this.loaderPhrases.concat(e),this.setLoaderObjMessage())}setLoaderObjMessage(){let e=document.getElementById("loaderMessage");if(e){let t=Math.floor(17391.537193*Math.random()*this.loaderPhrases.length%this.loaderPhrases.length),i=this.loaderPhrases[t];e.innerHTML=i}}booted(){this.buildHudBlock(),this.buildTopBar(),this.buildBottomBar(),this.buildGuiWindowContainer(),this.buildUserControlBlock(),this.buildRawHtml(),this.prepPageDisplay()}step(){this.updateGuiPositions(),this.pxlUser?.checkItemWearOff(this.pxlTimer.prevMS)&&this.hideItemHud(),this.pxlNavDataUpdate()}resize(){this.sW=window.innerWidth,this.sH=window.innerHeight,this.resetHelpTextPlacement();["videoinput","audioinput","audiooutput"].forEach((e=>{let t=null,i=null;"videoinput"==e?(t="camChoiceOptionsBlock",i=this.hudIcons.camChoiceIcon):"audioinput"==e?(t="micChoiceOptionsBlock",i=this.hudIcons.micChoiceIcon):"audiooutput"==e&&(t="speakerChoiceOptionsBlock",i=this.hudIcons.speakerChoiceIcon);let n=document.getElementById(t);if(n&&i){let e=n.getBoundingClientRect().width,t=i.parent.getBoundingClientRect();n.style.left=t.x-.5*e,n.style.bottom=this.sH-this.hudBottomBar.getBoundingClientRect().y}})),this.setUserControlPosition(),this.inviteUserPosition(),this.setArtistInfoSizing()}resetHelpTextPlacement(){Object.keys(this.textDescriptions).forEach((e=>{let t=this.textDescriptions[e];if(t){let i=document.getElementById("helpText_"+e);if(!i)return;let n=document.getElementById(e);if(n){let e=2,r=t.pos,s=t.offset?t.offset:[0,0],o=n.getBoundingClientRect(),a=i.getBoundingClientRect(),l=0,c=0,h=!1;r[1]<0?(c=o.y+a.height*r[1],h=!0):0==r[1]?c=o.y+.5*o.height-.5*a.height:r[1]>0&&(c=o.y+o.height+a.height*(r[1]-1),h=!0),h?r[0]<0?l=o.x+o.width+a.width*r[0]:0==r[0]?l=o.x+.5*o.width-.5*a.width:r[0]>0&&(l=o.x+o.width*(r[0]-1)):r[0]<0?l=o.x+a.width*r[0]:0==r[0]?l=o.x+.5*o.width-.5*a.width:r[0]>0&&(l=o.x+2*o.width*r[0]),l+=s[0],l+a.width>this.sW-e?l=this.sW-e-a.width:l<e&&(l=e),c+=s[1],i.style.left=l,i.style.top=c}else i.style.display="none"}}))}crashLinkTrigger(e,t){let i=location.search.match(/[a-zA-Z0-9=]+/g),n="?";i.forEach((e=>{let t=e.split("=");"dlimit"==t[0]?n+=t[0]+"="+(parseInt(t[1])+1)+"&":n+=e+"&"})),location.search=n}guiToggleVisibility(e=null){if(e=null==e?!this.hudVisibility:e,this.hudVisibility=e,this.hudTopBar&&!this.hudTopBar.origDisplay&&(this.hudTopBar.origDisplay=this.hudTopBar.style.display),this.fastTravelBar&&!this.fastTravelBar.origDisplay&&(this.fastTravelBar.origDisplay=this.fastTravelBar.style.display),this.hudBottomBar&&!this.hudBottomBar.origDisplay&&(this.hudBottomBar.origDisplay=this.hudBottomBar.style.display),e){if(this.hudTopBar&&this.hudTopBar.removeAttribute("style"),this.fastTravelBar&&this.fastTravelBar.removeAttribute("style"),this.hudBottomBar&&this.hudBottomBar.removeAttribute("style"),this.userControlBlock){let e=this.userControlBlock.gui.style.top;this.userControlBlock.gui.removeAttribute("style"),this.userControlBlock.gui.style.top=e}}else this.hudTopBar&&(this.hudTopBar.style.display="none"),this.fastTravelBar&&(this.fastTravelBar.style.display="none"),this.hudBottomBar&&(this.hudBottomBar.style.display="none"),this.userControlBlock&&(this.userControlBlock.gui.style.display="none");this.hudElements.artistInfo&&(this.hudElements.artistInfo.parent.style.display=e?"grid":"none")}cssBuildClasses(){let e=document.createElement("style");e.type="text/css",e.innerHTML="\n\t\t\t.fader{\n\t\t\t\ttransition: opacity .8s, filter .8s;\n\t\t\t}\n\t\t\t.visOn{\n\t\t\t\tfilter:alpha(opacity=100);\n\t\t\t\topacity:1.0;\n\t\t\t}\n\t\t\t.visOff{\n\t\t\t\tfilter:alpha(opacity=0);\n\t\t\t\topacity:0.0;\n\t\t\t}\n\t\t",document.getElementsByTagName("head")[0].appendChild(e)}prepPromptFader(e,t=!1){let i=e;("string"!=typeof i||(i=document.getElementById(i),i))&&(i.classList.add("fader"),i.classList.add(t?"visOn":"visOff"),i.style.display=t?"inline-block":"none")}promptFader(e,t,i=null,n=!1){if("string"!=typeof e||(e=document.getElementById(e)))if(e.classList.value.indexOf("fader")<0&&e.classList.add("fader"),t)e.style.display="inline-block",setTimeout((()=>{e.classList.contains("visOff")&&(e.classList.remove("visOff"),e.classList.add("visOn"),null!=i&&(e.setAttribute("fadeOut",clockTime+1e3*i),fadeOutList.push(e)))}),50);else if(e.classList.remove("visOn"),e.classList.add("visOff"),n){["webkitTransitionEnd","otransitionend","oTransitionEnd","msTransitionEnd","transitionend"].forEach((t=>{e.addEventListener(t,(()=>{let t=e.parentNode;t&&t.removeChild(e)}))}))}else setTimeout((()=>{e.classList.contains("visOff")&&(e.style.display="none")}),1e3)}buildConsole(){let e=document.createElement("div");e.id="consoleBlock",e.classList.add("consoleBlockStyle"),document.body.appendChild(e),this.guiWindows.consoleBlock={active:!1,gui:e}}buildMessageBlock(e,t="Info"){let i=document.createElement("div");this.msgCount++,i.id="messageBlock-"+this.msgCount,i.classList.add("messageBlockStyle"),i.classList.add("message"+t);let n=this,r=document.createElement("div");r.classList.add("messageCloseBtn"),r.innerHTML="X",r.addEventListener("click",(function(){n.removeMessage(i)}));let s=document.createElement("div");s.classList.add("messageTopBarStyle");let o=document.createElement("div");o.classList.add("messageHeaderStyle"),o.innerHTML=t,s.appendChild(o),s.appendChild(r),i.appendChild(s);let a=document.createElement("div");return a.classList.add("messageContentStyle"),a.innerHTML=e,i.appendChild(a),i}print(e){this.guiWindows.consoleBlock||this.buildConsole(),this.guiWindows.consoleBlock.active||(this.guiWindows.consoleBlock.active=!0,this.promptFader(this.guiWindows.consoleBlock.gui,!0));let t=this.guiWindows.consoleBlock.gui,i=this.buildMessageBlock(e);t.appendChild(i)}buildHudBlock(){if(!this.buildGuiStatus.hud)return;let e=document.createElement("div");e.id="hudBlock",e.classList.add("hudBlockStyle"),this.hudBlock.obj=e,document.body.appendChild(this.hudBlock.obj),this.hudBlock.obj.style.display="none";let t=this;this.hudBlock.obj.addEventListener("click",(e=>{t.toggleHudBlock(!1,!0)}))}toggleHudBlock(e=null,t=!1){if(!this.hudBlock)return;e=null==e?!this.hudBlock.active:e,this.hudBlock.active=e;let i=!1;e?i="inline-block":this.checkOpenWindows(t)||(i="none",this.pxlNavCanvas&&this.pxlNavCanvas.focus()),this.hudBlock.obj&&this.hudBlock.obj.style&&0!=i&&(this.hudBlock.obj.style.display=i)}checkOpenWindows(e=!1){let t=Object.keys(this.guiWindows),i=!1;return t.forEach((t=>{"chatBoxGui"!=t&&(e&&(this.guiWindows[t].button&&this.flipIcon(this.guiWindows[t].button,!1),this.guiWindows[t].gui&&this.guiWindows[t].active&&(this.guiWindows[t].active=!1,this.promptFader(this.guiWindows[t].gui,!1),"settingsGui"==t&&this.togglePxlNavDataDisplay(!1))),i=i||this.guiWindows[t].active)})),i}checkFocus(e=null,t=null){!0===t&&this.guiWindows.inviteUserGui&&this.guiWindows.inviteUserGui.active&&this.toggleInviteUser(!1)}buildRawHtml(){}buildTopBar(){if(this.mobile||!this.buildGuiStatus.userTopBar)return;let e=document.createElement("div");e.id="hud_topBar",e.classList.add("hud_topBarBlockStyle"),this.hudTopBar=e,document.body.appendChild(this.hudTopBar);let t,i="";i='<div id="statsIcon"></div>',i+='</div>\n\t\t<div id="usersIconParent">\n\t\t\t<div id="usersIcon"></div>',t='\n\t\t\t<div id="hud_localVideoStyle" class="hud_localVideoStyle"></div>\n\t\t\t<div id="hud_topBarParent" class="hud_topBarParentStyle">\n\t\t<div id="statsIconParent">\n\t\t\t<div id="statsIcon"></div></div>\n\t\t<div id="usersIconParent">\n\t\t\t<div id="usersIcon"></div>\n\t\t</div>\n\t\t<div  class="hud_topBarVSpacerStyle"></div>\n\t\t\t</div>\n\t\t',e.innerHTML=t,this.hudIcons.statsIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_stats.svg`,"statsIcon","stats"),this.hudIcons.statsIcon.promise.finally((()=>{})),this.hudIcons.usersIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_user.svg`,"usersIcon","users");let n=document.createElement("div");n.id="hud_pxlNavData",n.classList.add("hud_pxlNavDataParentStyle"),e.appendChild(n),this.pxlNavData.gui=n;let r=document.createElement("div");r.id="hud_pxlNavData",r.classList.add("hud_pxlNavDataStyle"),n.appendChild(r),t='\n      <div class="hud_pxlNavData_FPS gui_boldText">FPS</div><div class="hud_pxlNavData_FPS">:</div><div id="hud_pxlFPS" class="hud_pxlNavData_FPS"> - </div>\n      <div class="hud_pxlNavData_UL gui_boldText">↑</div><div class="hud_pxlNavData_UL">:</div><div id="hud_pxlUL" class="hud_pxlNavData_UL"> - </div>\n      <div class="hud_pxlNavData_DL gui_boldText">↓</div><div class="hud_pxlNavData_DL">:</div><div id="hud_pxlDL" class="hud_pxlNavData_DL"> - </div>\n    ',r.innerHTML=t,this.pxlNavData.fps=document.getElementById("hud_pxlFPS"),this.pxlNavData.ul=document.getElementById("hud_pxlUL"),this.pxlNavData.dl=document.getElementById("hud_pxlDL")}buildUserControlBlock(){this.userControlBlock={},this.userControlBlock.activeList=[],this.userControlBlock.userList={},this.userControlBlock.mutedList=[];let e=document.createElement("div");e.classList.add("userControlBlockStyle"),document.body.appendChild(e),this.userControlBlock.gui=e,this.userControlBlock.speakerIcon=ud.svgRawPromise(`${this.guiRoot}icons/icon_userSpeaker.svg`)}buildMedalionBar(){if(this.buildGuiStatus.medalion){let e=document.createElement("div");e.id="hud_medalionBar",e.classList.add("hud_medalionIconBlockStyle"),this.hudMedalionBar=e,document.body.appendChild(this.hudMedalionBar);let t=`\n        <div id="medalionIconParent" class="hud_speakerIconStyle">\n          <div id="medalionIcon"></div>\n        </div>\n        <div id="medalionTitle" class="medalionTitleStyle">${this.branding.title}</div>\n      `;this.hudMedalionBar.innerHTML=t;let i=document.getElementById("medalionIcon"),n=document.getElementById("medalionTitle");i.addEventListener("mouseover",(()=>{n.classList.add("medalionTitleGrowStyle")})),i.addEventListener("mouseout",(()=>{n.classList.remove("medalionTitleGrowStyle")})),this.hudIcons.medalionIcon=ud.svgIconPromise(this.branding.medalion,"medalionIcon","info",null,"medalionStyle")}}buildBottomBar(){if(!this.buildGuiStatus.bottomBar)return;let e=document.createElement("div");e.id="hud_bottomBar",e.classList.add("hud_bottomBarStyle"),this.hudBottomBar=e,document.body.appendChild(this.hudBottomBar);let t="";if(t+='\n    <div id="hud_chatIconBlock" class="hud_bottomLeftBlockStyle">\n        <div id="settingsIconParent" class="hud_settingsIconStyle">\n          <object id="settingsIcon"></object>\n        </div>\n  <div></div>\n        <div id="helpIconParent" class="hud_helpIconStyle">\n          <object id="helpIcon"></object>\n        </div>\n        ',!this.mobile&&this.buildGuiStatus.verseList&&(t+='<div class="hud_usersIconStyle">\n            <div id="multiverseIcon"></div>\n          </div>\n          <div></div>'),t+="</div>",this.mobile||(t+='\n        <div class="hud_micCamIconsBlockStyle">\n          <div id="speakerIconParent" class="hud_speakerIconStyle">\n            <div id="speakerIcon"></div>\n          </div>\n          <div id="speakerChoiceIconParent" class="hud_speakerChoiceIconStyle">\n            <div id="speakerChoiceOptionsBlock" class="gui_iconButtonPopup">\n            </div>\n            <div id="speakerChoiceIconParent">\n              <div id="speakerChoiceIcon" class="iconCaretStyle"></div>\n            </div>\n          </div>\n          <div class="hud_micCamSpacerStyle"></div>\n          <div id="micIconParent" class="hud_micIconStyle">\n            <div id="micIcon"></div>\n          </div>\n          <div id="micChoiceIconParent" class="hud_micChoiceIconStyle">\n            <div id="micChoiceOptionsBlock" class="gui_iconButtonPopup">\n            </div>\n            <div id="camChoiceIconParent">\n              <div id="micChoiceIcon" class="iconCaretStyle"></div>\n            </div>\n          </div>\n          <div class="hud_micCamSpacerStyle"></div>\n          <div id="camIconParent" class="hud_camIconStyle">\n            <div id="camIcon"></div>\n          </div>\n          <div id="camChoiceIconBlock" class="hud_camChoiceIconStyle">\n            <div id="camChoiceOptionsBlock" class="gui_iconButtonPopup">\n            </div>\n            <div id="camChoiceIconParent">\n              <div id="camChoiceIcon" class="iconCaretStyle"></div>\n            </div>\n          </div>\n        </div>\n        \n        <div id="hud_helpInfoSettingsBlock" class="hud_helpInfoSettingsBlockStyle">\n          <div class="guiVerseHudTitle">\n            <span id="guiVerseTitle"></span>\n          </div>\n          <div></div>\n          <div id="chatIconParent" class="hud_chatIconStyle">\n            <div id="chatIcon"></div>\n          </div>\n          <div id="hud_messageCount" class="hud_userCountStyle hud_messageCountBaseStyle">0</div>\n        </div>\n      '),this.hudBottomBar.innerHTML=t,this.messageCountObj=document.getElementById("hud_messageCount"),this.hudIcons.chatIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_chat.svg`,"chatIcon","chat"),this.mobile||this.pxlAutoCam.enabled){let e=document.getElementById("hud_chatIconBlock");e.style.gridAutoColumns="max-content max-content auto max-content",e.style.margin="0px 10px"}else this.hudIcons.multiverseIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_multiverse.svg`,"multiverseIcon","multiverse"),this.hudIcons.speakerIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_ProxAudio.svg`,"speakerIcon","speakerToggle",!1),this.hudIcons.speakerChoiceIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"speakerChoiceIcon","speakerChoice",!1,"iconCaretStyle"),this.hudIcons.micIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_mic.svg`,"micIcon","micToggle",!1),this.hudIcons.micChoiceIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"micChoiceIcon","micChoice",!1,"iconCaretStyle"),this.hudIcons.camIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_camera.svg`,"camIcon","camToggle",!1),this.hudIcons.camChoiceIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_downcaret.svg`,"camChoiceIcon","camChoice",!1,"iconCaretStyle"),this.hudIcons.helpIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_help.svg`,"helpIcon","help"),this.hudIcons.settingsIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_settings.svg`,"settingsIcon","settings"),document.getElementById("guiVerseTitle")}prepArtistInfo(e=null){if(this.pxlEnv?.postIntro&&""!=e){if(!this.hudElements.artistInfo){this.hudElements.artistInfo={},this.hudElements.artistInfo.active=!1;let t=document.createElement("div");t.classList.add("hud_aristInfoParentStyle"),this.hudElements.artistInfo.parent=t;let i=document.createElement("div");i.classList.add("hud_aristInfoButtonStyle"),t.appendChild(i);let n=this;i.onclick=()=>{n.toggleArtistInfo()},this.hudElements.artistInfo.button=i;let r=document.createElement("div");r.classList.add("hud_aristInfoButtonTextStyle"),r.innerHTML="artwork info&nbsp;&nbsp;",i.appendChild(r),this.hudElements.artistInfo.buttonText=r;let s=document.createElement("div");s.classList.add("hud_aristInfoCarrotXStyle"),s.id="artistInfoCarrotX",i.appendChild(s);let o=document.createElement("div");o.classList.add("hud_aristInfoInner"),o.innerHTML=e,t.appendChild(o),this.hudElements.artistInfo.inner=o,document.body.appendChild(t),this.hudElements.artistInfo.closeSvg=ud.svgPromise(`${this.guiRoot}global/carrotCloseAnimate.svg`,"artistInfoCarrotX"),this.hudElements.artistInfo.closeSvg.promise.finally((()=>{this.artistInfoButtonPrep()}))}this.toggleArtistInfo(!1),null!=e&&this.hudVisibility&&!this.pxlAutoCam.active?(this.hudElements.artistInfo.parent.style.zIndex=155,this.hudElements.artistInfo.parent.style.display="grid",this.hudElements.artistInfo.inner.innerHTML=e,setTimeout((()=>{this.setArtistInfoSizing()}),20)):(this.hudElements.artistInfo.parent.style.zIndex=-5,this.hudElements.artistInfo.parent.style.display="none")}}artistInfoButtonPrep(e=0){let t=this.hudElements.artistInfo.closeSvg.svg;if(t){let i=t.getElementById("carrotToClone_on"),n=t.getElementById("carrotToClone_off");i&&n?(this.hudElements.artistInfo.onAnim=i,this.hudElements.artistInfo.offAnim=n):2==e||setTimeout((()=>{this.artistInfoButtonPrep(e+=1)}),100)}}setArtistInfoSizing(){if(this.hudElements.artistInfo){let e=this.hudElements.artistInfo.inner.clientHeight,t=this.hudElements.artistInfo.inner.clientWidth,i=this.hudElements.artistInfo.button.clientHeight,n=this.hudElements.artistInfo.button.clientWidth;this.hudElements.artistInfo.innerHeight=e,this.hudElements.artistInfo.innerWidth=t,this.hudElements.artistInfo.baseHeight=i,this.hudElements.artistInfo.baseWidth=n,this.hudElements.artistInfo.parent.style.height=e+"px",this.hudElements.artistInfo.parent.style.width=t+"px";let r=this.hudElements.artistInfo.buttonText.clientWidth;this.hudElements.artistInfo.buttonText.maxWidth=r,this.hudElements.artistInfo.buttonText.style.maxWidth=r+"px",this.toggleArtistInfo(this.hudElements.artistInfo.active)}}toggleArtistInfo(e=null){e=null==e?!this.hudElements.artistInfo.active:e,this.hudElements.artistInfo.active=e;let t=this.hudElements.artistInfo.innerHeight,i=Math.min(.3*this.pxlDevice.sW,this.hudElements.artistInfo.innerWidth),n=this.hudElements.artistInfo.baseHeight,r=this.hudElements.artistInfo.baseWidth;this.hudElements.artistInfo.parent.style.maxHeight=e?t+"px":n+"px",this.hudElements.artistInfo.parent.style.maxWidth=e?i+"px":r+"px",this.hudElements.artistInfo.parent.style.padding=e?"5px":"0px";let s=this.hudElements.artistInfo.buttonText.maxWidth;this.hudElements.artistInfo.buttonText.style.maxWidth=e?"0px":s+"px",this.hudElements.artistInfo.buttonText.style.opacity=e?"0":"1",this.hudElements.artistInfo.buttonText.style.filter="alpha(opacity="+(e?"0":"1000")+")",this.hudElements.artistInfo.inner.style.opacity=e?"1":"0",this.hudElements.artistInfo.inner.style.filter="alpha(opacity="+(e?"100":"0")+")",this.hudElements.artistInfo.onAnim&&(e?this.hudElements.artistInfo.onAnim.beginElement():this.hudElements.artistInfo.offAnim.beginElement())}prepPageDisplay(e=null){if(this.pxlEnv?.postIntro&&""!=e){if(!this.hudElements.artistInfo){this.hudElements.artistInfo={},this.hudElements.artistInfo.active=!1;let t=document.createElement("div");t.classList.add("hud_aristInfoParentStyle"),this.hudElements.artistInfo.parent=t;let i=document.createElement("div");i.classList.add("hud_aristInfoButtonStyle"),t.appendChild(i);let n=this;i.onclick=()=>{n.togglePageDisplay()},this.hudElements.artistInfo.button=i;let r=document.createElement("div");r.classList.add("hud_aristInfoButtonTextStyle"),r.innerHTML="artwork info&nbsp;&nbsp;",i.appendChild(r),this.hudElements.artistInfo.buttonText=r;let s=document.createElement("div");s.classList.add("hud_aristInfoCarrotXStyle"),s.id="artistInfoCarrotX",i.appendChild(s);let o=document.createElement("div");o.classList.add("hud_aristInfoInner"),o.innerHTML=e,t.appendChild(o),this.hudElements.artistInfo.inner=o,document.body.appendChild(t)}this.togglePageDisplay(!1),null!=e&&this.hudVisibility&&!this.pxlAutoCam.active?(this.hudElements.artistInfo.parent.style.zIndex=155,this.hudElements.artistInfo.parent.style.display="grid",this.hudElements.artistInfo.inner.innerHTML=e,setTimeout((()=>{this.setArtistInfoSizing()}),20)):(this.hudElements.artistInfo.parent.style.zIndex=-5,this.hudElements.artistInfo.parent.style.display="none")}}setPageToDisplay(){if(this.hudElements.artistInfo){let e=this.hudElements.artistInfo.inner.clientHeight,t=this.hudElements.artistInfo.inner.clientWidth,i=this.hudElements.artistInfo.button.clientHeight,n=this.hudElements.artistInfo.button.clientWidth;this.hudElements.artistInfo.innerHeight=e,this.hudElements.artistInfo.innerWidth=t,this.hudElements.artistInfo.baseHeight=i,this.hudElements.artistInfo.baseWidth=n,this.hudElements.artistInfo.parent.style.height=e+"px",this.hudElements.artistInfo.parent.style.width=t+"px";let r=this.hudElements.artistInfo.buttonText.clientWidth;this.hudElements.artistInfo.buttonText.maxWidth=r,this.hudElements.artistInfo.buttonText.style.maxWidth=r+"px",this.toggleArtistInfo(this.hudElements.artistInfo.active)}}togglePageDisplay(e=null){if(this.hudElements.artistInfo){e=null==e?!this.hudElements.artistInfo.active:e,this.hudElements?.artistInfo&&(this.hudElements.artistInfo.active=e);let t=this.hudElements.artistInfo.innerHeight,i=Math.min(.3*this.pxlDevice.sW,this.hudElements.artistInfo.innerWidth),n=this.hudElements.artistInfo.baseHeight,r=this.hudElements.artistInfo.baseWidth;this.hudElements.artistInfo.parent.style.maxHeight=e?t+"px":n+"px",this.hudElements.artistInfo.parent.style.maxWidth=e?i+"px":r+"px",this.hudElements.artistInfo.parent.style.padding=e?"5px":"0px";let s=this.hudElements.artistInfo.buttonText.maxWidth;this.hudElements.artistInfo.buttonText.style.maxWidth=e?"0px":s+"px",this.hudElements.artistInfo.buttonText.style.opacity=e?"0":"1",this.hudElements.artistInfo.buttonText.style.filter="alpha(opacity="+(e?"0":"1000")+")",this.hudElements.artistInfo.inner.style.opacity=e?"1":"0",this.hudElements.artistInfo.inner.style.filter="alpha(opacity="+(e?"100":"0")+")",this.hudElements.artistInfo.onAnim&&(e?this.hudElements.artistInfo.onAnim.beginElement():this.hudElements.artistInfo.offAnim.beginElement())}}iconEvent(e,t,i=null){if(this.hudBlock.obj&&(this.hudBlock.obj.style.display="none"),"click"==e){if("chat"==i)return void this.toggleChatBox();if("musicToggle"==i)return this.pxlAudio.djPlayerMuteToggle(),void this.toggleIcon(t,!this.pxlAudio.djMuted,!0);if("userSpeakerToggle"==i)return void this.setUserControls(t);if("speakerToggle"==i)return void this.toggleIcon(t,!1,!0);if("speakerChoice"==i){let e="audiooutput";return void this.flipIcon(t,this.guiWindows[e]&&this.guiWindows[e].active)}if("help"==i){let e=!!this.guiWindows.helpGui&&this.guiWindows.helpGui.active;return this.checkOpenWindows(!0),void this.helpGuiToggle(!e)}if("info"==i){let e=!!this.guiWindows.infoGui&&this.guiWindows.infoGui.active;return this.checkOpenWindows(!0),void this.infoGuiToggle(!e)}if("settings"==i){let e=!!this.guiWindows.settingsGui&&this.guiWindows.settingsGui.active;return this.checkOpenWindows(!0),void this.settingsGuiToggle(!e)}if("userProfile"==i)return void this.toggleUserProfile();if("users"==i);else if("stats"==i)return}}setMicVolumeLevel(e){this.hudIcons.micIcon.volumeMask||(this.hudIcons.micIcon.volumeMask=document.getElementById("gui_micVolumeMask"),this.hudIcons.micIcon.timer=this.pxlTimer.msRunner.x-1);let t=12-11*e;this.hudIcons.micIcon.volumeMask.setAttribute("y",t)}toggleIcon(e,t,i=!1){if(e){if(e.mute.style.filter=t?"alpha(opacity=0)":"alpha(opacity=100)",e.mute.style.opacity=t?"0":"1",e.mute.style.transform=t?"scale(0,0)":"scale(1,1)",["camToggle","speakerToggle"].includes(e.eventType))return;let n={speakerToggle:"speaker",micToggle:"audio",camToggle:"video"}[e.eventType];n&&i&&this.loadingDeviceChange(n,t)}}flipIcon(e,t){e.caret.style.transform=`rotate( ${t?"180deg":"0deg"} )`}loadingDeviceChange(e,t=!0){let i=null;"speaker"==e?i=this.hudIcons.speakerIcon:"audio"==e?i=this.hudIcons.micIcon:"video"==e&&(i=this.hudIcons.camIcon),i.indicator.style.display=t?"inline-block":"none",i.indicator.style.animationPlayState=t?"running":"paused",i.waiting.forEach((e=>{e.setAttribute("fill-opacity",t?".5":"1")})),t&&setTimeout((()=>{this.loadingDeviceChange(e,!1)}),1e3)}djBuildPlayer(){if(this.buildGuiStatus.djPlayer){this.djPlayerObj=document.createElement("div"),this.djPlayerObj.id="djPlayer";let e='\n          <audio id="djStream" playsinline muted>\n            <source src="'+this.pxlAudio.djUrlSource+'"></source>\n          </audio>\n          <table cellpadding=0 cellspacing=5 border=0 style="height:100%;"><tbody><tr>\n              <td align="left">\n                  <div id="djPlayerVol"></div>\n              <  d><td valign="center" align="left" width=100%>\n                  <div id="djPlayerVolumeParent" class="volParent"><div id="djPlayerVolume" class="volSlider"></div></div>\n              <  d><  r>\n          <  body><  able>';this.djPlayerObj.innerHTML=e,document.getElementById("musicControllerBlock").appendChild(this.djPlayerObj),this.hudIcons.musicIcon=ud.svgIconPromise(`${this.guiRoot}icons/icon_music.svg`,"djPlayerVol","musicToggle",!this.pxlAudio.djMuted),this.pxlAudio.djBuildPlayer()}}buildItemHud(e,t){this.activeItem.innerHTML=t,this.activeItem.style.opacity="1",this.activeItem.style.filter="alpha(opacity=100)",this.activeItem.style.textShadow="1px 1px 3px #000000",setTimeout((()=>{this.activeItem.style.fontSize="1.5em",this.activeItem.style.top=".5%",this.activeItem.style.right="140px",this.activeItem.style.transform="translateX(0%)"}),1500)}hideItemHud(){this.activeItem.innerHTML="",this.activeItem.style.fontSize="3em",this.activeItem.style.top="10%",this.activeItem.style.right="50%",this.activeItem.style.transform="translateX(50%)",this.activeItem.style.opacity="0",this.activeItem.style.filter="alpha(opacity=0)"}mapPrepPrompts(){this.activeItem=document.createElement("div"),this.activeItem.classList.add("activeItemStyle"),document.body.appendChild(this.activeItem)}updateGuiPositions(){if(this.loading){let e=this.radioControls.length,t=!1;for(let i=0;i<e;++i){if(!this.radioControls[i][3]){t=!0;break}let e=this.radioControls[i][0],n=this.radioControls[i][2].getBoundingClientRect(),r=n.width+2*this.buttonPadding,s=n.height+2*this.buttonPadding,o=n.top-this.buttonPadding,a=n.left-this.buttonPadding;e.style.width=r,e.style.height=s,e.style.top=o,e.style.left=a,this.radioControls[i][1].style.width=r,this.radioControls[i][1].style.height=s,this.radioControls[i][1].style.top=o,this.radioControls[i][1].style.left=a}this.loading=t}}togglGuiWindow(e=null,t=!1){"helpGui"==e?this.helpGuiToggle(t,!1):"infoGui"==e?this.infoGuiToggle(t,!1):"settingsGui"==e&&this.settingsGuiToggle(t,!1)}svgCheckClick(e=null,t=null){t&&("close"!=t?"ft1"!=t&&"ft2"!=t&&("ft3"!=t?"ft4"!=t&&("ft5"!=t||this.pxlAutoCam.toggleAutoCam()):this.toggleInviteUser()):this.toggleGuiWindowContainer(null,!1,!0))}svgStylize(e=null,t=!1){if(!e)return;let i=e.path?e.path[1]:e.target.parentNode,n=i.getElementById("state");if(n){let e=t?"white":"none";n.setAttribute("fill",e)}let r=i.getElementById("hover");r&&r.setAttribute("fill",color)}renderQualitySettings(e){this.pxlQuality.percent=e,this.pxlQuality.screenResPerc=.75*e+.25,this.pxlQuality.mapAutoQualityUpdate(e,!0),this.pxlDevice.resizeRenderResolution()}pxlNavDataUpdate(){this.pxlNavData.active&&this.pxlTimer.msRunner.x>this.pxlNavData.fpsSet&&(this.pxlNavData.fpsSet=this.pxlTimer.msRunner.x+1,this.pxlNavData.fps.innerText=parseInt(1/this.pxlTimer.msRunner.y))}buildGuiWindowContainer(){let e=document.createElement("div");e.classList.id="guiWindowBackground",e.classList.add("guiWindowBackground"),e.classList.add("fader"),e.classList.add("visOff"),e.style.display="none";let t=this;e.onclick=e=>{t.toggleGuiWindowContainer(e,!1,!0)},this.guiWindowBG=e,document.body.appendChild(e)}toggleGuiWindowContainer(e,t,i=!1){if(e){let t=(e.path?e.path[0]:e.target).getAttribute("id");if("guiWindowBackground"!=t){if(!["gui_helpGuiWindow","gui_helpContent","gui_infoGuiWindow","gui_infoContent","gui_settingsGuiWindow","gui_settingsContent"].includes(t))return null}}let n=this.checkOpenWindows(i);this.guiWindowBG&&n==t&&this.promptFader(this.guiWindowBG,t,null,!1),t?this.pxlNavCanvas.blur():this.pxlNavCanvas.focus()}helpGuiBuild(){this.guiWindows.helpGui={},this.guiWindows.helpGui.gui=null,this.guiWindows.helpGui.active=!1;let e=document.createElement("div");e.id="gui_helpGuiWindow",e.classList.add("gui_helpGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+='\n    <div id="gui_helpContent" class="gui_contentStyle">\n  <div class="gui_body">\n    <div id="gui_helpGui_keyboardParent" class="gui_helpGui_keyboardParent">\n    <div id="gui_helpGui_controlsKeyboard" class="guiPadding settings_sectionHeader">keyboard controls</div>\n    <div class="gui_helpGui_ASDWorUDLR">\n      <div id="gui_helpGui_asdw" class="gui_helpGui_asdw"></div>\n      <div id="gui_helpGui_or" class="gui_helpGui_text">or</div>\n      <div id="gui_helpGui_udlr" class="gui_helpGui_udlr"></div>\n    </div>\n    <div id="gui_helpGui_useKeys" class="gui_helpGui_text" style="display:inline-block;">Use your keyboard <span class="gui_boldText">ARROWS</span> or<br><span class="gui_boldText">AWSD</span> keys to move around</div>\n    </div>\n    <div id="gui_helpGui_mouse" class="gui_helpGui_mouse">\n    <div id="gui_helpGui_MouseControls" class="guiPadding settings_sectionHeader">mouse controls</div>\n    <div id="gui_helpGui_MouseOutlined" class="gui_helpGui_mouseOutline"></div>\n    <div id="gui_helpGui_useMouse" class="guiPadding gui_helpGui_text" style="display:inline-block;">To orient your view:<br><span class="gui_boldText">LEFT CLICK</span> and drag your mouse<br><span class="gui_boldText">RIGHT CLICK</span> to lock your mouse</div>\n    </div>\n  </div>\n  <div id="gui_helpGui_hotKeys" class="gui_helpGui_hotKeys">\n          You can change <span class="gui_boldText">Navigation</span> and <span class="gui_boldText">Look controls</span> in the <span class="gui_boldText">Settings</span> <span id="gui_helpGui_settingIcon"></span> menu\n        </div>\n  <div id="guiHelpFooter" class="gui_footer">\n    <div class="guiButton" id="guiHelpBackButton">close</div>\n  </div>\n  <div class="gui_spacer"></div>\n    </div>\n  ',e.innerHTML='\n    <div id="gui_helpContent" class="gui_contentStyle">\n  <div class="gui_body">\n    <div id="gui_helpGui_keyboardParent" class="gui_helpGui_keyboardParent">\n    <div id="gui_helpGui_controlsKeyboard" class="guiPadding settings_sectionHeader">keyboard controls</div>\n    <div class="gui_helpGui_ASDWorUDLR">\n      <div id="gui_helpGui_asdw" class="gui_helpGui_asdw"></div>\n      <div id="gui_helpGui_or" class="gui_helpGui_text">or</div>\n      <div id="gui_helpGui_udlr" class="gui_helpGui_udlr"></div>\n    </div>\n    <div id="gui_helpGui_useKeys" class="gui_helpGui_text" style="display:inline-block;">Use your keyboard <span class="gui_boldText">ARROWS</span> or<br><span class="gui_boldText">AWSD</span> keys to move around</div>\n    </div>\n    <div id="gui_helpGui_mouse" class="gui_helpGui_mouse">\n    <div id="gui_helpGui_MouseControls" class="guiPadding settings_sectionHeader">mouse controls</div>\n    <div id="gui_helpGui_MouseOutlined" class="gui_helpGui_mouseOutline"></div>\n    <div id="gui_helpGui_useMouse" class="guiPadding gui_helpGui_text" style="display:inline-block;">To orient your view:<br><span class="gui_boldText">LEFT CLICK</span> and drag your mouse<br><span class="gui_boldText">RIGHT CLICK</span> to lock your mouse</div>\n    </div>\n  </div>\n  <div id="gui_helpGui_hotKeys" class="gui_helpGui_hotKeys">\n          You can change <span class="gui_boldText">Navigation</span> and <span class="gui_boldText">Look controls</span> in the <span class="gui_boldText">Settings</span> <span id="gui_helpGui_settingIcon"></span> menu\n        </div>\n  <div id="guiHelpFooter" class="gui_footer">\n    <div class="guiButton" id="guiHelpBackButton">close</div>\n  </div>\n  <div class="gui_spacer"></div>\n    </div>\n  ',[[this.guiRoot+"keyboard/asdw.svg","gui_helpGui_asdw","guiKeyDispSVG",!1],[this.guiRoot+"keyboard/udlr.svg","gui_helpGui_udlr","guiKeyDispSVG",!1],[this.guiRoot+"mouse/MouseOutlined.svg","gui_helpGui_MouseOutlined","guiMouseDispSVG",!1]].forEach((e=>{ud.svgButtonPromise(...e)}));let i=this;document.getElementById("guiHelpBackButton").onclick=e=>{i.introHelpActive&&(i.introHelpActive=!1,i.pxlEnv.postHelpIntro()),i.svgCheckClick(e,"close")},Object.keys(this.textDescriptions).forEach((t=>{let i=this.textDescriptions[t];if(i){let n=i.text;i.pos;let r=document.createElement("div");r.id="helpText_"+t,r.classList.add("helpTextDescriptionParent"),r.innerHTML=n,e.appendChild(r),this.textDescriptions[t].obj=r}}));let n=document.getElementById("gui_helpGui_settingIcon");n&&this.hudIcons.settingsIcon&&(n.innerHTML=this.hudIcons.settingsIcon.svg.parentNode.innerHTML,n.style.position="relative",n.style.top="7.3px",n.style.width="30px",n.style.padding="2px",n.style.cursor="pointer",n.children[0].style.height="26px",n.onclick=()=>{i.iconEvent("click",null,"settings")}),this.guiWindows.helpGui.gui=e,setTimeout((()=>{this.resize()}),50)}helpGuiToggle(e=null,t=!0){this.guiWindows.helpGui||this.helpGuiBuild(),e=null==e?!this.guiWindows.helpGui.active:e,this.guiWindows.helpGui.active=e,this.promptFader(this.guiWindows.helpGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro()),setTimeout((()=>{this.resetHelpTextPlacement()}),20)}infoGuiBuild(){this.guiWindows.infoGui={},this.guiWindows.infoGui.gui=null,this.guiWindows.infoGui.active=!1;let e=document.createElement("div");e.id="gui_infoGuiWindow",e.classList.add("gui_infoGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+=`\n    <div id="gui_infoContent" class="gui_contentInfoStyle">\n  <div class="gui_infoBody">\n    <div id="gui_infoGuiParent" class="gui_infoGuiParent">\n    <br>${this.projectTitle}, created by <a href="https://www.theumbrella.nyc/">The Umbrella</a>,\n    <br>an experience design collective.\n    <br>\n    <br>Want to chat?\n    <br><a href="mailto:info@theumbrella.nyc">info@theumbrella.nyc</a>\n    <br>\n    <br>We’re in active development. Get in touch if you have any issues.\n    <br>\n    </div>\n  </div>\n  <div id="guiInfoFooter" class="gui_footer">\n    <div class="guiButton" id="guiInfoBackButton">close</div>\n  </div>\n    </div>\n  `,e.innerHTML=t;let i=this;document.getElementById("guiInfoBackButton").onclick=e=>{i.svgCheckClick(e,"close")},this.guiWindows.infoGui.gui=e}infoGuiToggle(e=null,t=!0){this.guiWindows.infoGui||this.infoGuiBuild(),e=null==e?!this.guiWindows.infoGui.active:e,this.guiWindows.infoGui.active=e,this.promptFader(this.guiWindows.infoGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro())}applyCookies(){this.controlSettings&&(console.log(this.controlSettings),this.controlSettings=this.controlSettings),this.renderSettings&&(console.log(this.renderSettings),this.renderSettings=this.renderSettings)}settingsGuiBuild(){this.guiWindows.settingsGui={},this.guiWindows.settingsGui.gui=null,this.guiWindows.settingsGui.active=!1;let e=document.createElement("div");e.id="gui_settingsGuiWindow",e.classList.add("gui_settingsGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="Default";t=t||"";let i=`\n    <div id="gui_settingsContent" class="gui_contentSettingsStyle">\n  <div class="gui_settingsBody">\n    <div class="gui_settingsParentGrid">\n      \x3c!-- -- Username -- -- --\x3e\n    <div class="cellMargin settings_icon" id="settings_user"></div>\n    <div class="settings_optionHeader">Username</div>\n    <div class="settings_radio" style="grid-auto-flow: row; justify-content: start;">\n                    <div id="guiuserProfileBoxFieldParent" class="gui_userProfileBoxFieldParentStyle">\n                      <input type="text" placeholder="Set your username" value="${t}" id="settings_usernameInput" class="settings_usernameInput"></input>\n                      <input type="button" value="Set" id="settings_sendUsername" class="sendUsername">\n                    </div>\n                    <div id="settings_usernameResponseMessage" class="usernameResponseMessageStyle"></div>\n                </div>\n      \x3c!-- -- -- -- -- -- --\x3e\n    <div class="settingsGridSpan settingsSpacer"></div>\n      \x3c!-- -- Left/Right -- -- --\x3e\n    <div class="cellMargin settings_icon" id="settings_left_right"></div>\n    <div class="settings_optionHeader">Left/Right</div>\n    <div class="settings_radio" id="settingsRadioBlock_leftRight">\n      <span>\n      <input type="radio" id="settings_tankTurning" name="settings_leftRight" value="0" hidden>\n      <label for="settings_tankTurning">Turn</label>\n      </span>\n      <span>\n      <input type="radio" id="settings_strafing" name="settings_leftRight" value="1" hidden>\n      <label for="settings_strafing">Strafe</label>\n      </span>\n    </div>\n      \x3c!-- -- Mouse -- -- --\x3e\n    <div class="cellMargin settings_icon" id="settings_mouse"></div>\n    <div class="settings_optionHeader">Mouse Looking</div>\n    <div class="settings_radio" id="settingsRadioBlock_mouse">\n      <span>\n      <input type="radio" id="settings_dragLooking" name="settings_mouse" value="0" hidden>\n      <label for="settings_dragLooking">Native</label>\n      </span>\n      <span>\n      <input type="radio" id="settings_pointLooking" name="settings_mouse" value="1" hidden>\n      <label for="settings_pointLooking">Inverted</label>\n      </span>\n    </div>\n      \x3c!-- -- -- -- -- -- --\x3e\n    <div class="settingsGridSpan settingsSpacer"></div>\n      \x3c!-- -- Graphics Quality -- -- --\x3e\n    <div class="cellMargin settings_icon" id="settings_graphics"></div>\n    <div class="settings_optionHeader">Graphics Quality</div>\n    <div class="settings_radio" id="settingsRadioBlock_graphics">\n      <span>\n      <input type="radio" id="settings_graphicsQuality_low" name="settings_autoQuality" value="0" hidden>\n      <label for="settings_graphicsQuality_low">Low</label>\n      </span>\n      <span>\n      <input type="radio" id="settings_graphicsQuality_med" name="settings_autoQuality" value="1" hidden>\n      <label for="settings_graphicsQuality_med">Medium</label>\n      </span>\n      <span>\n      <input type="radio" id="settings_graphicsQuality_high" name="settings_autoQuality" value="2" hidden>\n      <label for="settings_graphicsQuality_high">High</label>\n      </span>\n      <span>\n      <input type="radio" id="settings_graphicsQuality_custom" name="settings_autoQuality" value="3" hidden>\n      <label for="settings_graphicsQuality_custom">Custom</label>\n      </span>\n    </div>\n      \x3c!-- -- -- -- --\x3e\n      <div class="r7Adv gui_settingsAdvancedParentGrid" id="gui_advancedSettings">\n    \x3c!-- -- -- -- --\x3e\n      <div class="cellMargin settings_icon" id="settings_render"></div>\n      <div class="settings_optionHeader">Render Resolution</div>\n      <div class="settings_radio" id="settingsRadioBlock_resolution">\n      <span>\n        <input type="radio" id="settings_render_25" name="settings_renderPerc" value=".25" hidden>\n        <label for="settings_render_25">25%</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_render_50" name="settings_renderPerc" value=".5" hidden>\n        <label for="settings_render_50">50%</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_render_75" name="settings_renderPerc" value=".75" hidden>\n        <label for="settings_render_75">75%</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_render_100" name="settings_renderPerc" value="1" hidden>\n        <label for="settings_render_100">100%</label>\n      </span>\n      </div>\n    \x3c!-- -- -- -- --\x3e\n      <div class="cellMargin settings_icon" id="settings_fog"></div>\n      <div class="settings_optionHeader">Fog Quality</div>\n      <div class="settings_radio" id="settingsRadioBlock_fog">\n      <span>\n        <input type="radio" id="settings_noRedFog" name="settings_fogLevel" value="0" hidden>\n        <label for="settings_noRedFog">Low</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_cheapResFog" name="settings_fogLevel" value="1" hidden>\n        <label for="settings_cheapResFog">Medium</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_highResFog" name="settings_fogLevel" value="2" hidden>\n        <label for="settings_highResFog">High</label>\n      </span>\n      </div>\n    \x3c!-- -- -- -- --\x3e\n      <div class="cellMargin settings_icon" id="settings_bloom"></div>\n      <div class="settings_optionHeader">Bloom Effects</div>\n      <div class="settings_radio" id="settingsRadioBlock_bloom">\n      <span>\n        <input type="radio" id="settings_noBloom" name="settings_bloomEffects" value="0" hidden>\n        <label for="settings_noBloom">Off</label>\n      </span>\n      <span>\n        <input type="radio" id="settings_bloomActive" name="settings_bloomEffects" value="1" hidden>\n        <label for="settings_bloomActive">On</label>\n      </span>\n      </div>\n    \x3c!-- -- -- -- --\x3e\n      </div>\n    </div>\n      <div class="settingsGridSpan settingsEmptySpacer"></div>\n    </div>\n    <div class="guiSettingsFooterButtons">\n    <div class="guiButton" id="guiSettingsBackButton">close</div>\n    </div>\n  </div>\n    </div>\n  `;e.innerHTML=i,this.guiWindows.settingsGui.gui=e;let n=this;this.qualitySlider=document.getElementById("SettingsGraphicsQualitySlider"),document.getElementById("guiSettingsBackButton").onclick=e=>{n.svgCheckClick(e,"close")},[[this.guiRoot+"settingsIcons/settings_user.svg","settings_user",["settings_icon_scale"],!1],[this.guiRoot+"settingsIcons/settings_left_right.svg","settings_left_right",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_mouse.svg","settings_mouse",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_graphics.svg","settings_graphics",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_render.svg","settings_render",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_fog.svg","settings_fog",["settings_icon"],!1],[this.guiRoot+"settingsIcons/settings_bloom.svg","settings_bloom",["settingsIconStyle"],!1]].forEach((e=>{ud.svgButtonPromise(...e)}));let r=document.getElementById("settings_usernameInput");r.onkeyup=e=>{n.keyUsernameSet(e)},r.onkeydown=e=>{n.keyDownUsernameSet(e)},this.guiWindows.settingsGui.usernameInput=r,document.getElementById("settings_sendUsername").addEventListener("click",(()=>{n.sendUsernameUpdate(r)}));let s,o,a=document.getElementById("settings_usernameResponseMessage");this.guiWindows.settingsGui.usernameReturn=a,this.guiWindows.settingsGui.advObj=document.getElementById("gui_advancedSettings"),this.guiWindows.settingsGui.customObj=document.getElementById("settings_graphicsQuality_custom"),s=["settings_graphicsQuality_low","settings_graphicsQuality_med","settings_graphicsQuality_high","settings_graphicsQuality_custom"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=parseInt(i.value);i.addEventListener("change",(e=>{n.pxlQuality.setQualityLevel(r),n.setRadioValues()}))}s=["settings_render_25","settings_render_50","settings_render_75","settings_render_100"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=parseFloat(i.value);i.addEventListener("change",(e=>{n.guiWindows.settingsGui.customObj.checked=!0,n.pxlQuality.setGraphicsSettings({resolution:r}),n.pxlQuality.setQualityCookie(3)}))}s=["settings_noRedFog","settings_cheapResFog","settings_highResFog"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=i.value;i.addEventListener("change",(e=>{n.guiWindows.settingsGui.customObj.checked=!0,n.pxlQuality.setGraphicsSettings({fog:r}),n.pxlQuality.setQualityCookie(3)}))}s=["settings_noBloom","settings_bloomActive"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=1==i.value;i.addEventListener("change",(e=>{n.guiWindows.settingsGui.customObj.checked=!0,n.pxlQuality.setGraphicsSettings({bloom:r}),n.pxlQuality.setQualityCookie(3)}))}s=["settings_tankTurning","settings_strafing"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=1==i.value;i.addEventListener("change",(e=>{n.pxlQuality.setGraphicsSettings({leftRight:r},null)}))}s=["settings_dragLooking","settings_pointLooking"],o=s.length;for(let e=0;e<o;++e){let t=s[e],i=document.getElementById(t);this.setRadioStyle(i,e,o);let r=1==i.value;i.addEventListener("change",(e=>{n.pxlQuality.setGraphicsSettings({mouse:r},null)}))}this.setRadioValues()}setRadioStyle(e,t,i){let n="settings_radio_label_mid";0==t?n="settings_radio_label_start":t==i-1&&(n="settings_radio_label_end"),e.parentNode.children[1].classList.add(n)}setRadioValues(){let e=this.pxlQuality.settings;Object.keys(e).forEach((t=>{let i=document.getElementById("settingsRadioBlock_"+t);if(i){let n="resolution"==t?4*e[t]-1:~~e[t];i.children[n].children[0].checked=!0}}))}settingsGuiAdvObjSizing(e=!0){let t=this.guiWindows.settingsGui.advObj,i=t.offsetHeight;t.style.maxHeight=(e?i:0)+"px",t.setAttribute("maxHeight",i)}settingsGuiToggle(e=null,t=!0){this.guiWindows.settingsGui||this.settingsGuiBuild(),(e=null==e?!this.guiWindows.settingsGui.active:e)&&this.guiWindows.settingsGui&&(this.guiWindows.settingsGui.usernameReturn.innerText=""),this.guiWindows.settingsGui.active=e,this.promptFader(this.guiWindows.settingsGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e),this.toggleHudBlock(e,!1),this.togglePxlNavDataDisplay(e),this.introHelpActive&&!e&&(this.introHelpActive=!1,this.pxlEnv.postHelpIntro())}togglePxlNavDataDisplay(e=null){null==e&&(e=!!this.guiWindows.settingsGui&&this.guiWindows.settingsGui.active),this.pxlNavData.active=e;let t=this.pxlNavData.height||200;this.pxlNavData.gui.style.maxHeight=e?t+"px":"0px",e||(this.pxlNavData.height=this.pxlNavData.gui.offsetHeight)}renderRadius(e){this.pxlEnv.mapGlowPass.strength=Number(e),this.pxlEnv.roomBloomPass.strength=Number(e)}renderThreshold(e){this.pxlEnv.mapGlowPass.threshold=Number(e),this.pxlEnv.roomBloomPass.threshold=Number(e)}renderGlowRadius(e){this.pxlEnv.mapGlowPass.radius=Number(e),this.pxlEnv.roomBloomPass.radius=Number(e)}renderResolution(e){this.pxlQuality.screenResPerc=.75*e+.25,this.pxlDevice.resizeRenderResolution()}inviteUserBuild(){this.guiWindows.inviteUserGui={},this.guiWindows.inviteUserGui.gui=null,this.guiWindows.inviteUserGui.active=!1;let e=document.createElement("div");e.id="gui_inviteUserWindow",e.classList.add("gui_inviteUserParentStyle"),this.prepPromptFader(e),document.body.appendChild(e);let t=window.location+"";console.log(t),t=t.replace(/^https?:\/\//,""),console.log(t);let i="";i+=`\n      <div class="gui_inviteUserBody">\n        <div class="iu_urlStyle">${t}</div>\n        <div id="iu_copy" class="iu_copyStyle">Copy</div>\n      </div>\n  `,e.innerHTML=i;let n=this.pxlUtils,r=document.getElementById("iu_copy");r.addEventListener("click",(()=>{let e=n.copyRoomUrl();r.innerText=e?"Copied":"Error",r.timeout&&clearTimeout(r.timeout),r.timeout=setTimeout((()=>{r.innerText="Copy",clearTimeout(r.timeout)}),2e3)})),this.guiWindows.inviteUserGui.gui=e}inviteUserPosition(){if(this.guiWindows.inviteUserGui&&this.guiWindows.inviteUserGui.active){let e=document.getElementById("ft3Button").getBoundingClientRect();this.guiWindows.inviteUserGui.gui.style.display="grid",this.guiWindows.inviteUserGui.gui.style.top=e.y,this.guiWindows.inviteUserGui.gui.style.right=this.pxlDevice.sW-e.x+5,this.guiWindows.inviteUserGui.gui.style.minHeight=e.height}}toggleInviteUser(e=null){this.guiWindows.inviteUserGui||this.inviteUserBuild(),e=null==e?!this.guiWindows.inviteUserGui.active:e,this.guiWindows.inviteUserGui.active=e,this.promptFader(this.guiWindows.inviteUserGui.gui,e),this.inviteUserPosition()}buildMobileWelcome(){this.guiWindows.mobileGui={},this.guiWindows.mobileGui.gui=null,this.guiWindows.mobileGui.active=!1;let e=document.createElement("div");e.id="gui_mobileWelcomeGuiWindow",e.classList.add("gui_helpGuiParentStyle"),this.prepPromptFader(e),this.guiWindowBG.appendChild(e);let t="";t+=`\n    <div id="gui_helpContent" class="gui_contentStyle" style="min-height:45%;">\n  <div class="gui_mobileBody">\n    welcome to\n          <br>${this.projectTitle}\n  </div>\n  <div id="guiHelpFooter" class="gui_footer" style="margin-bottom: 4vh;">\n    <div class="guiButton" style="font-weight: 700; font-size: 5vw;" id="guiMobileWelcomeButton">enter</div>\n  </div>\n  <div class="gui_spacer"></div>\n    </div>\n  `,e.innerHTML=t;let i=this;document.getElementById("guiMobileWelcomeButton").onclick=e=>{i.toggleMobileWelcome(!1),i.pxlEnv.postHelpIntro()},this.guiWindows.mobileGui.gui=e}toggleMobileWelcome(e=null){this.guiWindows.mobileGui||this.buildMobileWelcome(),e=null==e?!this.guiWindows.mobileGui.active:e,this.guiWindows.mobileGui.active=e,this.promptFader(this.guiWindows.mobileGui.gui,e),this.toggleGuiWindowContainer(null,e),this.hudBlock.active&&this.toggleHudBlock(e)}ctaBuildPopup(e=""){this.ctaContentLoading||(this.googleDocHTML?this.ctaDisplayPopup():(this.ctaContentLoading=!0,this.pxlFile.getURLContent(this.ctaLocalDocURL.blmSupport).then((e=>{this.ctaContentLoading=!1,this.googleDocHTML=e,this.ctaDisplayPopup()}))))}ctaDisplayPopup(){this.actionPopUp&&this.actionPopUp.parentNode.removeChild(this.actionPopUp);let e=this.googleDocHTML;this.actionPopUp=document.createElement("div"),this.actionPopUp.setAttribute("id","ctaPopup"),this.actionPopUp.classList.add("parentGoogleLinkDoc"),this.actionPopUp.classList.add("fader"),this.actionPopUp.classList.add("visOff");let t=document.createElement("div");t.setAttribute("id","ctaPopupInner"),this.actionPopUp.appendChild(t),document.body.appendChild(this.actionPopUp);let i=null;""!=e&&e?(t.innerHTML=e,t.classList.add("iframeGoogleLinkDoc")):(i=document.createElement("iframe"),i.src="",i.classList.add("iframeGoogleLinkDoc"),t.appendChild(i),i.referrerpolicy="unsafe-url");let n=this;this.actionPopUp.onclick=function(e){"ctaPopup"==e.srcElement.getAttribute("id")&&(n.promptFader(this,!1,null,!0),n.actionPopUp=null)},i?i.onload=function(){setTimeout((()=>{this.promptFader(this.actionPopUp,!0,null,!1)}),100)}:setTimeout((()=>{this.promptFader(this.actionPopUp,!0,null,!1)}),100)}getUserControls(e){if(!e)return[null];let t=e,i=t.userStatusGui,n=t.audio,r=t.audioMuted,s=t.userSoundGui;return{curAvatar:t,curName:t.displayName,curAudio:n,curAudioMuted:r,curGui:i,curNameGui:t.userNameGui,curAudioGui:s,curVerse:t.verse}}async setUserControlPosition(){if(this.userControlBlock){let e=0;if(this.hudTopBar){let t=this.hudTopBar.getBoundingClientRect();e=t.y+t.height}this.userControlBlock.gui.style.top=e+"px"}}buildUserSpeaker(){let e={},t=this.userControlBlock.speakerIcon.svg.cloneNode(!0);t.classList.add("userControlSpeakerStyle"),t.classList.add("userControlSpeakerButtonStyle"),e.gui=t,e.remoteMuted=!1,e.volPrev=0;let i=t.children;for(let t=0;t<i.length;++t){let n=i[t],r=n.getAttribute("id");e[r]=n,"mute"==r?n.classList.add("userControlVisStyle"):"button"==r&&n.classList.add("userControlSpeakerButtonStyle")}let n=e.volLines.children;for(let t=0;t<n.length;++t){let i=n[t];e[i.getAttribute("id")]=i}n=e.remoteMutedLines.children;for(let t=0;t<n.length;++t){let i=n[t];e[i.getAttribute("id")]=i}return e}async addUserControls(e,t=!1){let{curAvatar:i,curName:n,curGui:r}=this.getUserControls(e),s=document.createElement("div");s.classList.add("userControlProximityOff"),s.classList.add("userControlParentStyle"),s.classList.add("userControlSpeakerButtonStyle"),this.mobile&&(s.style.display="none");let o=this;s.onclick=()=>{o.setUserControlMute(e)},i.userStatusGui=s,this.userControlBlock.gui.appendChild(s);let a=document.createElement("div");a.classList.add("userControlInnerParentStyle"),s.appendChild(a);let l=document.createElement("div");l.classList.add("userControlSpeakerParentStyle");let c=this.buildUserSpeaker();l.appendChild(c.gui),i.userSoundGui=c,a.appendChild(l);let h=document.createElement("div");h.classList.add("userControlNameStyle"),h.innerText=n,i.userNameGui=h,a.appendChild(h),this.setUserControlColor(e)}async setUserControlVolume(e,t,i=!0){if(this.userControlBlock.activeList.includes(e)){let{curAudioGui:n,curAudioMuted:r}=this.getUserControls(e);!n||r&&0!=t||(n.remoteMuted?t=0:i&&t>0&&(t*=2,t=Math.min(1,Math.max(t,.5*(t+n.volPrev)))),n.volPrev=t,n.volLines.style.opacity=t,n.volLines.style.filter="alpha(opacity="+100*t+")")}}async setUserControlMute(e){let{curAvatar:t,curAudio:i,curAudioMuted:n,curAudioGui:r}=this.getUserControls(e);if(i){let s=!n;s?(this.setUserControlVolume(e,0,!1),r.mute.classList.add("userControlVisible"),i.volume=0,i.muted=!0):(r.mute.classList.remove("userControlVisible"),i.muted=!1,i.volume=1),t.audioMuted=s}}async setUserControlRemoteMute(e,t=null,i=!0,n="#ffffff"){let{curAudio:r,curAudioGui:s}=this.getUserControls(e);if(s){null==t&&(t=!!r&&r.muted);let o="object"==typeof t?t.muted:t;s.remoteMuted=o,s.base.setAttribute("fill",o?"#ff0000":n),s.remoteMutedLines.style.display=o||!i?"inline-block":"none",s.remoteS1.setAttribute("stroke",i?"#ff0000":n),s.remoteS2.setAttribute("stroke",i?"#ff0000":n),this.setUserControlVolume(e,0,!1)}}async setUserControlVis(e,t=null,i=!1){let{curAvatar:n,curGui:r,curAudio:s}=this.getUserControls(e);if(r){let i="userControlProximityOff";if(null==t&&(t=!r.classList.contains(i)),t)r.classList.remove(i),r.style.maxWidth=r.children[0].getBoundingClientRect().width+"px",this.setUserControlVolume(e,0),this.userControlBlock.activeList.includes(e)||this.userControlBlock.activeList.push(e);else{r.classList.add(i),r.style.maxWidth="30px";let t=this.userControlBlock.activeList.indexOf(e);t>-1&&this.userControlBlock.activeList.splice(t,1)}this.userControlBlock.gui.style.padding=0==this.userControlBlock.activeList.length?"0px":"5px"}}async deleteUserControlVis(e){let{curAvatar:t,curGui:i}=this.getUserControls(e);if(i){let t="userControlProximityOff";i.classList.add(t),i.style.maxWidth="30px";let n=this.userControlBlock.activeList.indexOf(e);n>-1&&this.userControlBlock.activeList.splice(n,1),this.userControlBlock.gui.style.padding=0==this.userControlBlock.activeList.length?"0px":"5px",i&&i.parentNode.removeChild(i)}}userControlsSwap(e,t){let i=this.userControlBlock.activeList.indexOf(e);i>-1&&(this.userControlBlock.activeList.splice(i,1),this.userControlBlock.activeList.includes(t)||this.userControlBlock.activeList.push(t))}setUserControlColor(e,t=null){let{curAvatar:i,curGui:n,curAudioGui:r,curVerse:s}=this.getUserControls(e);null==t&&(t="#ffffff"),n.style.color=t,r.base.setAttribute("fill",t),r.mute.setAttribute("stroke",t),r.mid.setAttribute("fill",t),r.max.setAttribute("fill",t),r.volPrev=0,r.volLines.style.opacity=0,r.volLines.style.filter="alpha(opacity=0)";let o=this;i.userStatusGui.onclick=()=>{o.setUserControlMute(e)},this.setUserControlRemoteMute(e,null,!0,t)}toggleUserControls(e){if(!e)return null}}class pd{constructor(e,t){this.active=!1,this.name="GLSL Editor",this.type="shaderGui",this.pxlCore=e,this.pxlEnv=e.pxlEnv,this.guiManager=t,this.parent=null,this.gui=null,this.helpGui=null,this.shaderEditorDisplay=null,this.children={},this.uniformsObj=null,this.vertObj=null,this.fragObj=null,this.currentShader=null,this.shaderSliderValues=new Zh,this.editorWidthMinMax={min:30,max:70}}addSlider(e,t,i,n,r,s,o,a){"string"==typeof e&&(e=document.getElementById(e));let l=document.createElement("div");l.style.display="grid",l.style.gridAutoFlow="column",l.style.alignItems="center",l.style.gridAutoColumns="max-content auto max-content",l.innerHTML="<div class='input_sliderLabel'>"+t+" : </div>";let c=document.createElement("input");c.type="range",c.classList.add("input_sliderRange"),c.min=n,c.max=r,c.step=s,c.value=i,l.appendChild(c);let h=document.createElement("input");h.type="number",h.classList.add("gui_defaultInput"),h.classList.add("input_numberInput"),h.value=i,l.appendChild(h),h.onchange=e=>{c.value=e.target.value},c.onchange=e=>{h.value=e.target.value,o(e.target.value,...a)},c.oninput=e=>{h.value=e.target.value,o(e.target.value,...a)},e.appendChild(l)}updateShaderTextFields(e=null){let t,i,n,r;e||(e=this.pxlEnv.currentRoom==this.pxlEnv.mainRoom?this.currentShader:this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getCurrentShader());try{t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].readShader(e,this.shaderSliderValues)}catch(e){return}i=n=r="Unable To Load";try{t.uniforms.sliders={type:"v",value:this.shaderSliderValues},i=JSON.stringify(t.uniforms),n=t.vertexShader,r=t.fragmentShader,i="";for(const e in t.uniforms){let n="float",r={t:"sampler2D",b:"bool",i:"int",f:"float",v:"vec",c:"vec"};if(n=typeof t.uniforms[e].value,"object"==n){if(n="",!t.uniforms[e].value)continue;n="image"in t.uniforms[e].value?"sampler2D":n+"vec"+Object.keys(t.uniforms[e].value).length}else r.hasOwnProperty(t.uniforms[e].type)&&(n="i"==t.uniforms[e].type?"i":""),r.hasOwnProperty(t.uniforms[e].type)&&(n=r[t.uniforms[e].type]);i+=`uniform ${n} ${e};   `}n=n.replace(/[\t]/g,"  "),r=r.replace(/[\t]/g,"  ")}catch(e){console.log("Error Reading Shader"),console.log(e)}t&&(t.needsUpdate=!0,this.children.uniformsObj.value=i,this.children.vertObj.value=n,this.children.fragObj.value=r)}buildShaderEditor(){let e="shaderGui",t=document.createElement("div");t.id="guiShaderEditorBlock",t.classList.add("gui_shaderEditorBlockStyle"),t.style.transition="max-width .5s ease, opacity .8s, filter .8s",this.pxlEnv.pxlGuiDraws.prepPromptFader(t),this.pxlEnv.pxlGuiDraws.guiWindows[e]={},this.pxlEnv.pxlGuiDraws.guiWindows[e].gui=t,this.pxlEnv.pxlGuiDraws.guiWindows[e].active=!1,this.gui=t;let i=document.createElement("div");i.id="guiShaderHelpBlock",i.classList.add("gui_shaderHelpBlockStyle"),i.style.transition="left .3s ease, opacity .8s, filter .8s",this.pxlEnv.pxlGuiDraws.prepPromptFader(i),this.pxlEnv.pxlGuiDraws.guiWindows[e].help=i,this.helpGui=i;let n=this.pxlEnv.currentRoom,r=this.pxlEnv.roomSceneList[n].geoList,s=Object.keys(r),o="";s.forEach((e=>{if(["Mesh","Points"].includes(r[e].type)&&"ShaderMaterial"==r[e].material.type){let t=e.substring(0,1).toUpperCase()+e.substring(1,e.length);o+="<option value='geo_"+e+"'>"+t+"</option>"}}));this.pxlEnv.pxlGuiDraws.guiWindows[e].currentShader="script_fog";let a=`\n    <div id="gui_shaderEditorParent" class="gui_shaderEditorParentStyle">\n      <div class="gui_shaderEditorHeaderBlock">\n      <div class="gui_shaderEditorOptionBlock">\n        <div class="gui_shaderEditorTitleBlock">\n        <div class="gui_shaderEditorTitleParent">\n            <div id="gui_shaderEditorTitle" clsss="gui_shaderEditorTitleStyle">GLSL Shader Editor</div>\n            <div id="gui_shaderEditorHeaderList" clsss="gui_shaderEditorHeaderListStyle">\n              <label for="shaderEditor_loadShader" style="font-size:.75em;">Edit Shader</label>\n              <select name="shaderEditor_loadShader" id="shaderEditor_loadShader" class="pickerStyle gui_shaderPickerStyle">\n                <option value="script_avatar" >Avatar</option>\n                <option value="script_fog" selected>Fog</option>\n                <option value="script_dArrows">Direction Arrows</option>\n                <option value="script_userScreens">User Screens</option>\n                <option value="script_warpZonePortals">Warp Zone Portals</option>\n                <option value="script_lizardking">Item; Lizard King</option>\n                <option value="script_majorTom">Item; Major Tom</option>\n                <option value="script_fractalSubstrate">Item; Fractal Substrate</option>\n                <option value="script_fractalEcho">Item; Fractal Echo Pass</option>\n                ${o}\n              </select>\n            </div>\n            <div id="gui_shaderEditorFontSize" clsss="gui_shaderEditorFontSizeStyle">\n              <span  style="font-size:.75em;margin-right:5px;">Font Size</span>\n              <span id="gui_shaderEditorFontSmaller" class="shaderEditor_settingsButton">-</span>\n              <span id="gui_shaderEditorFontLarger" class="shaderEditor_settingsButton">+</span>\n            </div>\n          </div>\n        </div>\n        <div class="gui_shaderEditorHeaderLine"></div>\n        <div id="guiShaderUserSliders"></div>\n        <div class="gui_shaderEditorHeaderLine"></div>\n      </div>\n      </div>\n      \n      \n      <div id="guiShaderFieldParent" class="gui_shaderEditorFieldParentStyle">\n        <span style='height:12px'>Uniforms -</span>\n        <textarea spellcheck="false" placeholder="Shader Uniforms" rows="3" id="shaderEditor_uniformInput" style="height:unset;" readonly></textarea>\n        <span style='height:12px'>Vertex Shader -</span>\n        <textarea spellcheck="false" placeholder="Vertex Shader" id="shaderEditor_vertInput"></textarea>\n        <span style='height:12px'>Fragment Shader -</span>\n        <textarea spellcheck="false" placeholder="Fragment Shader" id="shaderEditor_fragInput"></textarea>\n      </div>\n      <div id="shader_updateShader" class="shaderEditor_sendMessage">Update Shader</div>\n    </div>\n    `,l="<div class='gui_shaderHelpSpacerStyle'></div>";a+=`\n    <div id="gui_shaderHelpBlock" class="gui_shaderHelpBlockStyle">\n      <div class="gui_shaderHelpTitle">:: Keyboard Shortcuts ::</div>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + Enter</span><br> - Update Shader on Material</span>\n      <br>&nbsp;&nbsp;<span>Returns use existing indent type (Spaces or Tabs)</span>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + D</span><br> - Duplicate current line</span>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + K</span><br> - Comment current/selected lines</span>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + Shift + K</span><br> - Uncomment current/selected lines</span>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + NumPad {1,2,3}</span><br> - Add selection or '.0' into float(), vec2(), vec3() </span>\n      ${l}\n      <span><span class="gui_boldText">Ctrl + {Up,Down,Left,Right}</span><br> - Searches for current selection in direction</span>\n      ${l}\n      <span><span class="gui_boldText">Y</span><br> - To close the Shader Editor</span>\n      ${l}\n    </div>\n    `,t.innerHTML=a,document.body.appendChild(t);let c=document.getElementById("guiShaderUserSliders");this.parentObj=c;let h=this.shaderSliderValues,u=(e,...t)=>{h[t[0]]=e};this.addSlider(c,"sliders.x",0,-1,1,.01,u,["x"]),this.addSlider(c,"sliders.y",0,-5,5,.1,u,["y"]),this.addSlider(c,"sliders.z",0,-10,10,.1,u,["z"]),this.children.shaderSliders=c,this.children.shaderParentObj=document.getElementById("shaderEditor_uniformInput").parentNode,this.children.shaderEditor=document.getElementById("gui_shaderEditorParent"),this.children.titleObj=document.getElementById("gui_shaderEditorTitle"),this.children.uniformsObj=document.getElementById("shaderEditor_uniformInput"),this.children.vertObj=document.getElementById("shaderEditor_vertInput"),this.children.fragObj=document.getElementById("shaderEditor_fragInput"),this.children.updateObj=document.getElementById("shader_updateShader"),this.children.helpDiv=document.getElementById("gui_shaderHelpBlock"),this.children.shaderList=document.getElementById("gui_shaderEditorHeaderList"),this.children.shaderFieldParent=document.getElementById("guiShaderFieldParent"),this.shaderEditorDisplay=document.getElementById("shaderEditorDisplay"),this.children.shaderSelect=document.getElementById("shaderEditor_loadShader");let d=document.getElementById("gui_shaderEditorFontSize");d.style.justifySelf="end",d.style.marginTop="2px",d.style.marginRight="3px",d.style.userSelect="none",d.style.display="flex",d.style.alignItems="center";let p=this;this.children.shaderSelect.onchange=e=>{p.updateShaderTextFields(this.children.shaderSelect.value)},document.getElementById("gui_shaderEditorFontSmaller").onclick=e=>{p.shiftFontSize(-.25)},document.getElementById("gui_shaderEditorFontLarger").onclick=e=>{p.shiftFontSize(.25)},this.children.updateObj.addEventListener("click",(()=>{let e=document.getElementById("shaderEditor_uniformInput").value,t=document.getElementById("shaderEditor_vertInput"),i=t.value,n=document.getElementById("shaderEditor_fragInput"),r=n.value,s=document.createElement("div");s.innerHTML=e,e=s.innerText,s.innerHTML=i,i=s.innerText,s.innerHTML=r,r=s.innerText,p.pxlEnv.roomSceneList[p.pxlEnv.currentRoom].setShader(e,i,r),t.blur(),n.blur(),p.guiManager.pxlNavCanvas.focus()})),this.children.vertObj.onfocus=e=>{p.focusShaderMessage(e,"vertObj")},this.children.vertObj.onkeydown=e=>{p.keyShaderMessage(e)},this.children.vertObj.onmousedown=e=>{p.mDownShaderMessage(e)},this.children.vertObj.onclick=e=>{p.clickShaderMessage(e)},this.children.vertObj.ondblclick=e=>{p.dblclickShaderMessage(e)},this.children.fragObj.onfocus=e=>{p.focusShaderMessage(e,"fragObj")},this.children.fragObj.onkeydown=e=>{p.keyShaderMessage(e)},this.children.fragObj.onmousedown=e=>{p.mDownShaderMessage(e)},this.children.fragObj.onclick=e=>{p.clickShaderMessage(e)},this.children.fragObj.ondblclick=e=>{p.dblclickShaderMessage(e)},this.mouseX=0,this.mouseY=0,this.prevSelectStart=0,this.prevSelectEnd=0}shiftFontSize(e){let t=document.getElementById("gui_shaderEditorParent");if(!t)return;t.hasAttribute("styleStore")||t.setAttribute("styleStore",1);let i=parseFloat(t.getAttribute("styleStore"))+e;t.setAttribute("styleStore",i),t.style.fontSize=i+"em";let n=document.getElementById("shaderEditor_uniformInput");n&&(n.style.fontSize=i+"em");let r=document.getElementById("shaderEditor_vertInput");r&&(r.style.fontSize=i+"em");let s=document.getElementById("shaderEditor_fragInput");s&&(s.style.fontSize=i+"em"),this.resizeShaderElements()}mDownShaderMessage(e){this.mouseX=e.x,this.mouseY=e.y}clickShaderMessage(e){if(!this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive){let t=Math.abs(this.mouseX-e.x),i=Math.abs(this.mouseY-e.y);if(Math.max(t,i)<5){let t=e.target,i=t.selectionStart,n=t.selectionEnd;i!=n&&(this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectStart=i,this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectEnd=n)}}}dblclickShaderMessage(e){let t=this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectStart,i=this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.prevSelectEnd,n=e.target;n.selectionStart,n.selectionEnd;let r=n.value.substring(t,i+20),s=r.match(/[a-zA-Z0-9\.\_\[\]]+/);s&&!r[0].match(/\n/)&&(i=t+s[0].length),n.setSelectionRange(t,i),this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive=!0,setTimeout((()=>{this.pxlEnv.pxlGuiDraws.guiWindows.shaderGui.dcActive=!1}),500)}keyShaderMessage(e){if(e.repeat)return!1;let t=e.key,i=e.code,n=e.shiftKey,r=e.ctrlKey;e.altKey;let s=i.includes("Numpad");if(!("Enter"==t||"Tab"==t||"KeyD"==i&&r||"KeyK"==i&&r||s&&r||i.includes("Arrow")&&r))return!1;e.preventDefault();let o=e.target;if("NumpadAdd"==i){let e=window.getComputedStyle(o),t=parseFloat(e.fontSize)+2;return o.style.fontSize=t,!1}if("NumpadSubtract"==i){let e=window.getComputedStyle(o),t=parseFloat(e.fontSize)-2;return o.style.fontSize=t,!1}let a=o.selectionStart,l=o.selectionEnd,c=o.value;if(i.includes("Arrow")){if(a==l)return!1;let e,t,n,r=c.substring(a,l);if("ArrowUp"==i?(t=c.substring(0,a),a=t.search(/.*$/),i="ArrowLeft"):"ArrowDown"==i&&(t=c.substring(l,c.length),l=t.search(/\n/)+l,i="ArrowRight"),"ArrowLeft"==i){e=new RegExp(r+".*","gm"),t=c.substring(0,a);let i=[...t.matchAll(r,"g")];if(0==i.length&&(i=[...c.matchAll(r,"g")],0==i.length))return!1;n=i.pop().index}if("ArrowRight"==i){e=new RegExp(r,"m"),t=c.substring(l,c.length);let i=e.exec(t);if(i)n=i.index+l;else{if(i=e.exec(c),!i)return!1;n=i.index}}if(n>-1){let e=n+r.length;o.setSelectionRange(n,e);let t=o.getBoundingClientRect(),i=window.getComputedStyle(o).font,s=[c.slice(0,n),"<span id='tmpShaderPosition'>.</span>",c.slice(n)].join("");s=s.replace(/(?:\r\n|\r|\n)/g,"<br>");let a=document.createElement("div");a.style.position="fixed",a.style.width=t.width,a.style.height=t.height,a.style.overflowY="scroll",a.style.font=i,a.innerHTML=s,document.body.appendChild(a);let l=a.querySelector("#tmpShaderPosition").offsetTop-200;document.body.removeChild(a),o.scrollTo(0,l)}return!1}if("Enter"==t&&r)return this.children.updateObj.click(),o.focus(),o.setSelectionRange(a,l),!1;if(s){let e=c.substring(a,l),t=e.length>0,n=c.substr(a-1,1);n=/[\w|\d]/.test(n)&&0==e.length?" ":"";let r=c.substr(l+1,1);r=/[\w|\d]/.test(r)&&0==e.length?" ":"";let s=a+n.length;if("Numpad1"==i){let i="float(";s+=i.length,e=t?e:".0",e=i+e+")"}else if("Numpad2"==i){let i="vec2(";s+=i.length,e=t?e:".0, .0",e=i+e+")"}else if("Numpad3"==i){let i="vec3(";s+=i.length,e=t?e:".0, .0, .0",e=i+e+")"}return e=n+e+r,document.execCommand("insertText",!1,e),t||o.setSelectionRange(s,s),!1}let h=Math.min(a,l),u=c.substr(0,h);if("KeyK"==i){let e,t,i,r=!1;if(a!=l&&(e=u.search(/.*$/),t=l,i=c.substring(e,l),r=/\n/.test(i)),!r){let e=u.search(/[\S\w].*$/);if(-1==e){if(e=c.substring(h,c.length).search(/(?:[^\s])/),-1==e)return!1;e+=h}let t=e,i=t,r="";if(n){if(i+=2,"//"!=c.substr(t,2))return!1;a-=2,l-=2}else{if("//"==c.substr(t,2))return!1;r="//",a+=2,l+=2}return o.setSelectionRange(t,i),document.execCommand("insertText",!1,r),o.setSelectionRange(a,l),!1}if(r){let i=t+c.substring(t,c.length).search(/\n./),r=c.substring(e,i),s=n?-2:2,h=[...r.matchAll(/[\S\w].*/g)],u=[],d=a-e,p=t-e;return h.forEach((e=>{let t=e.index;u.push(t)})),u=u.reverse(),u.forEach((e=>{let t=r.substr(e,2);if(n){if("//"!=t)return;r=r.substring(0,e)+r.substring(e+2,r.length)}else{if("//"==t)return;r=r.substring(0,e)+"//"+r.substring(e,r.length)}a+=e<d?s:0,l+=e<p?s:0})),o.setSelectionRange(e,i),document.execCommand("insertText",!1,r),o.setSelectionRange(a,l),!1}return!1}let d=u.split("\n");if("Enter"==t||"Tab"==t){let e=d.pop();0==e.length&&(e=d.pop());let i=e.replace(/[\S\w].*$/g,"");"Tab"==t?(i=0==i.length?" ":i.substr(0,1),i=" "===i?"  ":"\t"):i="\n"+i;let r=i,s=a,h=l;if("Tab"==t&&a!=l){let e=c.substring(a,l);e=e.split("\n"),e=n?e.map((e=>""==e?e:e.replace(i,""))):e.map((e=>""==e?e:i+e)),r=e.join("\n"),h=s+r.length}else s+=r.length,h=s;return document.execCommand("insertText",!1,r),o.setSelectionRange(s,h),!1}if("KeyD"==i&&r)if(a==l){let e=c.split("\n");d.pop();let t=e[d.length],i=[...d,t].join("\n").length;t="\n"+t,o.setSelectionRange(i,i),document.execCommand("insertText",!1,t),i=h+t.length,o.setSelectionRange(i,i)}else{let e=c.substring(a,l);o.setSelectionRange(l,l),document.execCommand("insertText",!1,e),l+=e.length,o.setSelectionRange(l,l)}return!1}toggleShaderEditor(e=null){this.gui||this.buildShaderEditor(),this.updateShaderList(),this.updateShaderTextFields(this.children.shaderSelect.value),e=null==e?!this.active:e,this.active=e,this.guiManager.promptFader(this.gui,e),this.guiManager.promptFader(this.helpGui,e),this.pxlEnv.emit("shaderEditorVis",e),e?this.guiManager.pxlNavCanvas.addEventListener("mousedown",this.blurShaderEditor.bind(this)):this.guiManager.pxlNavCanvas.removeEventListener("mousedown",this.blurShaderEditor.bind(this)),setTimeout((()=>{this.resizeShaderElements()}),10)}updateShaderList(){let e=this.children.shaderSelect;if(!e)return console.log("No pulldown"),void console.log(this.gui);let t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getShaderList(),i="inline-block";if(t){let i=Object.keys(t),n="",r=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].getCurrentShader();i.forEach((e=>{n+=`<option value="${e}" ${e==r?" selected":""}>${t[e]}</option>`})),e.innerHTML=n}else i="none";this.children.shaderList.style.display=i}blurShaderEditor(){document.activeElement.blur(),document.getElementById("guiShaderEditorBlock").style.maxWidth=this.editorWidthMinMax.min+"vw";let e=document.getElementById("gui_shaderHelpBlock");e&&(e.style.left="max("+this.editorWidthMinMax.min+"vw, 430px)");let t=document.getElementById("shaderEditor_loadShader");t&&(t.style.maxWidth="85px")}resizeShaderElements(){let e=0;if(this.hudBottomBar&&(e=this.hudBottomBar.offsetHeight),this.gui){this.gui.style.height=this.guiManager.sH-e;let t=this.children.vertObj.getBoundingClientRect().top,i=this.children.updateObj.getBoundingClientRect().height;i+=40;let n=this.guiManager.sH-i-t;this.children.vertObj.style.maxHeight=.4*n+"px",this.children.vertObj.displayHeight=.4*n,this.children.fragObj.style.maxHeight=.6*n+"px",this.children.fragObj.displayHeight=.6*n,this.children.fieldBodyHeight=n}}focusShaderMessage(e,t){let i=this.children,n=i.vertObj.displayHeight,r=i.fragObj.displayHeight,s=Math.max(150,.135*this.guiManager.sH),o=i.fieldBodyHeight-s;n="vertObj"==t?o:s,r="fragObj"==t?o:s,i.vertObj.style.maxHeight=n+"px",i.fragObj.style.maxHeight=r+"px",document.getElementById("gui_shaderEditorParent"),this.gui.style.maxWidth=this.editorWidthMinMax.max+"vw",this.children?.shaderSelect&&(this.children.shaderSelect.style.maxWidth="225px");let a=document.getElementById("gui_shaderHelpBlock");a&&(a.style.left=this.editorWidthMinMax.max+"vw")}}class md extends dd{constructor(e,t="Metal-Asylum",i="images/assets/",n="images/GUI/"){super(e,t,i,n),this.verbose=e,this.lableBoxSize=40,this.optionWidthRound=10,this.optionWidthAdd=25,this.deviceOptionHeight=[0,300],this.ShaderEditor=null,this.pxlLoaderTotal=5,this.hudVisibility=!0,this.camChoicesActive=!1,this.micChoicesActive=!1,this.textDescriptions={chatIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">C</span> )</span><br>chat',pos:[1,-1.5]},multiverseIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">U</span> )</span><br>multiverse<br>selection',pos:[0,-1.3]},djPlayerVolumeParent:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">B</span> )</span><br>music volume',pos:[0,-1.5]},speakerIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute people<br>pick audio output',pos:[0,-1.5]},micIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">M</span> )</span><br>mute/pick<br>mic input',pos:[0,-1.5]},camIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">V</span> )</span><br>enable/pick<br>video input',pos:[0,-1.5]},helpIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">?</span> )</span><br>help &<br>instructions',pos:[0,-1.5]},infoIconParent:{text:'Info <span class="helpHotKeyParent">( <span class="helpHotKey">I</span> )</span>',pos:[-1,0],offset:[-10,0]},settingsIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">G</span> )</span><br>graphics &<br>navigation',pos:[0,-1.5]},muteAllIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">N</span> )</span><br>mute all users',pos:[1,0]},fullScreenIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">F</span> )</span><br>toggle full screen',pos:[-1,0]},videoQualityIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">H</span> )</span><br>video quality settings',pos:[-1,0]},statsIcon:{text:"jitsi connection status; toggle connection ",pos:[1,0]},usersIcon:{text:'<span class="helpHotKeyParent">( <span class="helpHotKey">T</span> )</span> user moderator tools',pos:[1,0]},ft2Button:{text:"Environment",pos:[-1,0],offset:[-10,0]},ft3Button:{text:"Invite Friends",pos:[-1,0],offset:[-10,0]},hud_userCount:{text:"# of People",pos:[-1,0],offset:[-10,0]}},this.activeItem=null,this.actionPopUp=null,this.init()}setDependencies(e){this.ShaderEditor=new pd(e,this)}init(){super.init()}booted(){super.booted()}step(){super.step()}toggleShaderEditor(){this.ShaderEditor.toggleShaderEditor()}}class fd{constructor(){this.pxlAudio=null,this.pxlTimer=null,this.pxlAutoCam=null,this.pxlEnv=null,this.pxlUser=null,this.pxlUtils=null,this.pxlDevice=null,this.pxlGuiDraws=null,this.pxlQuality=null,this.socket=null,this.camera=null,this.HDRView=!1,this.objRaycast=new Fc,this.camUpdated=!0,this.cameraBooted=!1,this.userScale=5.5,this.standingHeight=1,this.standingHeightGravInfluence=0,this.standingMaxGravityOffset=.5,this.maxStepHeight=.6,this.walkBounce=0,this.walkBounceSeed=230,this.walkBouncePerc=0,this.posRotEasingThreshold=.01,this.cameraMovement=[0,0],this.cameraMovementEase=.8,this.cameraMoveLength=0,this.cameraMoveLengthMult=.2,this.camPosBlend=.55,this.camRotXYZ=new de(0,0,0),this.camRotPitch=new ee(0,0),this.cameraJumpActive=!1,this.cameraAllowJump=!0,this.cameraJumpHeight=0,this.cameraJumpInitImpulse=[.06,.15],this.cameraJumpImpulse=0,this.cameraJumpImpulseEaseOut=.8,this.cameraMaxJumpHold=[.6,3],this.cameraJumpInAir=!1,this.floorColliderInitialHit=!1,this.colliderValidityChecked=!0,this.nearestFloorHit=new de(0,0,0),this.nearestFloorObjName=null,this.nearestFloorHitPrev=new de(0,0,0),this.nearestFloorObjNamePrev=null,this.objectJumpLock=!1,this.gravityActive=!1,this.gravitySourceActive=!1,this.gravityDirection=new de(0,-1,0),this.gravityEaseOutRate=.8,this.jump=0,this.runMain=!0,this.workerActive=!1,this.worker=null,this.workerTransfers=!1,this.workerMessage=()=>{},this.workerFunc=()=>{},this.deviceKey=()=>{},this.portalList={},this.collidersExist=!1,this.colliderActive=!1,this.colliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderActive=!1,this.antiColliderList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.antiColliderTopActive=!1,this.antiColliderTopList={noAxis:[],11:[],"01":[],10:[],"00":[]},this.roomWarpZone=[],this.colliderCurObjHit=null,this.colliderPrevObjHit=null,this.colliderValid=!1,this.colliderFail=!1,this.warpActive=!1,this.warpType=0,this.warpObj=null,this.warpTarget=null,this.hotKeyTriggered=!1,this.eventCheckStatus=!1,this.proximityScaleTrigger=!1,this.colliderShiftActive=!0,this.colliderAdjustPerc=0,this.colliderAdjustRate=.02,this.gyroGravity=[0,0,0],this.cameraPose={alpha:null,beta:null,gamma:null,alphaOffset:0,betaOffset:0,gammaOffset:0,orientation:window.orientation||0,pos:[0,0,0],posOffset:[0,0,0],rx:()=>this.beta,ry:()=>this.alpha,rz:()=>this.gamma,accelZeroed:[0,0,0],accelCalibration:10,accelCalDiv:.1,accelCalCount:0,accelTotal:[0,0,0],accelPrev:null,accelDelta:[0,0,0],accelClearDelta:()=>{this.accelDelta=[0,0,0]}},this.uniformScalars={curExp:1,darkBase:.1,brightBase:.5,exposureUniformBase:1},this.cameraPos=new de(0,0,0),this.cameraPrevPos=new de(0,0,0),this.cameraPrevLookAt=new de(0,0,0),this.cameraAim=new de(0,0,1),this.cameraAimTarget=new de(0,0,0),this.cameraCross=new de(1,0,0),this.lookAtTargetActive=new de(0,0,0),this.lookAtPerc=new ee(1,0),this.lookAtLockPerc=0,this.lookAtLockFader=0,this.lookAtLockFadeRate=.01,this.prevQuaternion=new ce,this.pi=3.14159265358979,this.init()}setDependencies(e){this.pxlAudio=e.pxlAudio,this.pxlTimer=e.pxlTimer,this.pxlAutoCam=e.pxlAutoCam,this.pxlEnv=e.pxlEnv,this.pxlUser=e.pxlUser,this.pxlUtils=e.pxlUtils,this.pxlDevice=e.pxlDevice,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlQuality=e.pxlQuality,this.socket=e.socket}init(){}updateMainValues(e){let{gravityRate:t,standingHeightGravInfluence:i,cameraJumpImpulse:n}=e;null!=t&&(this.pxlUser.gravityRate=t),null!=i&&(this.standingHeightGravInfluence=i),null!=n&&(this.cameraJumpImpulse+=n),this.camUpdated=!0}step(){this.pxlDevice.directionKeyDown&&this.updateMovement(this.pxlTimer.prevMS),this.runMain&&(this.gravityActive&&this.cameraJumpActive?this.camJump(this.pxlTimer.prevMS):this.cameraJumpImpulse>0&&this.killJumpImpulse()),this.camUpdated=this.camUpdated||0!=this.cameraMovement[0]||this.cameraMovement[1]||this.gravityActive||this.pxlDevice.cursorLockActive,this.updateCamera(),this.lowQualityUpdates(),this.midQualityUpdates(),this.eventCheck()}eventCheck(){this.colliderValid&&this.eventCheckStatus&&this.eventTrigger(this.nearestFloorObjName)&&this.warpEventTriggered(1,this.nearestFloorObjName)}updateDeviceValues(e){if(!this.pxlQuality.settings.leftRight){let e=-this.cameraMovement[0];this.pxlDevice.touchMouseData.active||(this.pxlDevice.touchMouseData.velocity.x+=e),this.pxlDevice.touchMouseData.netDistance.x+=4*e}null!=this.pxlDevice.touchMouseData.velocity&&0==this.pxlDevice.mobile&&(e<this.posRotEasingThreshold?this.pxlDevice.touchMouseData.velocity.multiplyScalar(0):this.pxlDevice.touchMouseData.velocity.multiplyScalar(.7),this.pxlDevice.touchMouseData.netDistance.add(this.pxlDevice.touchMouseData.velocity.clone().multiply(this.pxlDevice.touchMouseData.moveMult)))}buildDeviceMonitors(){}updateCameraMatrices(){this.camera.updateProjectionMatrix(),this.camera.updateMatrixWorld(),this.camera.updateWorldMatrix()}resetCameraCalculations(e){this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0),this.pxlDevice.touchMouseData.netDistance.set(0,0),this.camera.position.copy(e),this.updateCameraMatrices(),this.cameraPos.copy(e),this.cameraPrevPos.copy(e),this.colliderCurObjHit=null,this.colliderPrevObjHit=null,this.camUpdated=!0}setFOV(e){this.camera.fov=e,this.camera.updateProjectionMatrix(),this.camUpdated=!0}setStats(e,t,i,n){this.camera.near=i,this.camera.far=n,this.setFOV(e)}setTransform(e,t=null){this.resetCameraCalculations(e),t&&(this.cameraAimTarget.position.copy(t),this.camera.lookAt(t),this.cameraPrevLookAt.copy(t),this.updateCameraMatrices(),this.pxlDevice.touchMouseData.initialQuat=this.camera.quaternion.clone()),this.resetGravity(),this.camUpdated=!0}setToObj(e,t=null){if(this.resetCameraCalculations(e.position),t){let e=t.position.clone();this.cameraAimTarget.position.copy(e),this.camera.lookAt(e),this.cameraPrevLookAt.copy(e),this.updateCameraMatrices(),this.pxlDevice.touchMouseData.initialQuat=this.camera.quaternion.clone()}else this.pxlDevice.touchMouseData.initialQuat=e.quaternion.clone(),this.camera.setRotationFromQuaternion(this.pxlDevice.touchMouseData.initialQuat),this.updateCameraMatrices();this.resetGravity(),this.camUpdated=!0,this.mainColliderCheck(e.position,null),this.nearestFloorObjName=null}warpToRoom(e,t=!1,i=null){this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].stop();let n=this.pxlEnv.currentRoom,r=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].camHoldWarpPos;this.pxlEnv.currentRoom=e,this.pxlAutoCam.curRoom=e;let s=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom],o=e==this.pxlEnv.mainRoom;if(this.pxlUser.iZoom){let t=o?this.pxlEnv.roomComposer:this.pxlEnv.mapComposer,i=o?this.pxlEnv.mapComposer:this.pxlEnv.roomComposer;this.pxlEnv.delayPass.uniforms.tDiffusePrev.value=t.renderTarget1.texture,this.pxlEnv.delayPass.uniforms.tDiffusePrevRoom.value=i.renderTarget1.texture,setTimeout((()=>{n!=e&&(o?this.pxlEnv.roomComposer.reset():this.pxlEnv.mapComposer.reset()),setTimeout((()=>{this.pxlEnv.mapComposerWarpPass.needsSwap=!1}),500)}),100)}t?(e!=n&&s.start(),this.pxlEnv.roomRenderPass.scene=s.scene,!s.camInitPos||!s.camInitLookAt||r&&this.pxlEnv.postIntro&&!this.hotKeyTriggered||(this.setTransform(s.camInitPos,s.camInitLookAt),this.hotKeyTriggered=!1)):r&&this.pxlEnv.postIntro&&!this.hotKeyTriggered||(null!=i?this.setToObj(i):this.setTransform(s.camReturnPos,s.camReturnLookAt),this.hotKeyTriggered=!1),this.pxlGuiDraws.prepArtistInfo(s.getArtistInfo()),this.camUpdated=!0,this.camera.fov=s.pxlCamFOV,this.camera.zoom=s.pxlCamZoom,this.camera.aspect=s.pxlCamAspect,this.camera.near=s.pxlCamNearClipping,this.camera.far=s.pxlCamFarClipping,this.camera.updateProjectionMatrix();let a=this.getUserHeight();this.emitCameraTransforms(this.camera.position.clone(),a,!0),this.pxlAutoCam.checkStatus()}warpToRoomSnapshot(e){this.pxlEnv.currentRoom=e;let t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom];this.camera.fov=t.pxlCamFOV,this.camera.zoom=t.pxlCamZoom,this.camera.aspect=t.pxlCamAspect,this.camera.near=t.pxlCamNearClipping,this.camera.far=t.pxlCamFarClipping,this.camera.updateProjectionMatrix(),this.setTransform(t.camThumbPos,t.camThumbLookAt);let i=this.getUserHeight();this.emitCameraTransforms(this.camera.position.clone(),i,!0)}fastTravel(e=0){this.pxlAutoCam.enabled||((this.pxlAutoCam.active||this.pxlAutoCam.autoCamActive)&&this.pxlAutoCam.preAutoCamToggle(),this.hotKeyTriggered=!0,0==e&&this.warpEventTriggered(1,this.pxlEnv.currentRoom,"init"))}camJumpKey(e=!1){e?this.camInitJump():(this.cameraJumpActive&&(this.cameraJumpActive=!1),this.cameraAllowJump=!0)}camInitJump(){!this.gravityActive&&this.cameraAllowJump&&(this.pxlDevice.keyDownCount[2]=this.pxlTimer.prevMS,this.cameraAllowJump=!1,this.cameraJumpActive=!0,this.cameraJumpInAir=!0,this.gravityActive=!0,this.pxlUser.gravityRate=0,this.cameraJumpImpulse=this.cameraJumpInitImpulse[this.pxlUser.lowGrav]*this.userScale,this.objectJumpLock&&(this.objectJumpLock=!1,this.nearestFloorHit=this.nearestFloorHitPrev))}camJump(e){let t=e-this.pxlDevice.keyDownCount[2],i=Math.min(1,t/this.cameraMaxJumpHold[this.pxlUser.lowGrav]);if(this.cameraJumpActive){let e=i;1==e?this.cameraJumpActive=!1:(e=(1-e)*(1-e),e*=.5*e+.5),this.cameraJumpImpulse+=Math.max(0,e)}this.cameraJumpImpulse*=1-i,1==i&&(this.cameraJumpActive=!1)}killJumpImpulse(){let e=this.cameraJumpImpulse*this.cameraJumpImpulseEaseOut;this.cameraJumpImpulse=e>.1?e:0,this.workerFunc("killJumpImpulse")}updateGravity(){this.runMain&&(this.pxlUser.gravityRate=Math.max(0,this.pxlUser.gravityRate-.2*this.cameraJumpImpulse),this.gravityActive&&(this.pxlUser.gravityRate=Math.min(this.pxlUser.gravityMax,this.pxlUser.gravityRate+this.pxlUser.gravityMax*this.pxlTimer.msRunner.y)),0!=this.pxlUser.gravityRate&&(this.gravityActive||(this.pxlUser.gravityRate=this.pxlUser.gravityRate>.01?this.pxlUser.gravityRate*this.gravityEaseOutRate:0),this.pxlUser.gravityRate,this.standingHeightGravInfluence=Math.min(1,1.2*this.pxlUser.gravityRate/this.pxlUser.gravityMax)*this.standingMaxGravityOffset))}resetGravity(){this.pxlUser.gravityRate=0,this.workerFunc("resetGravity"),this.jumpLanding(!1)}jumpLanding(e=!0){this.gravityActive=!1,this.cameraJumpImpulse=0,this.cameraJumpInAir=!1,this.cameraJumpActive=!1,e&&this.workerFunc("jumpLanding")}mainColliderCheck(e,t){let i=null;if(this.movementBlocked=!1,(this.cameraMoveLength>0||null==this.colliderPrevObjHit||null==this.nearestFloorObjName)&&this.cameraBooted&&this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].collidersExist){this.colliderValidityChecked=!0;let t=new de(0,-1,0),o=e.clone(),a=1500;o.y=a,this.objRaycast.set(o,t);var n=[];let l=~~(o.x>0)+""+~~(o.z>0);if(n.length>0)if(this.antiColliderTopActive){let t,n=this.objRaycast.intersectObjects([...this.antiColliderTopList.noAxis,...this.antiColliderTopList[l]]),o=-99999;e.y;let a,c=this.nearestFloorHit,h=!1;for(var r=0;r<n.length;++r){var s=n[r];t=s.object.name;let a=s.point,l=s.distance,u=a.y-e.y<this.maxStepHeight;h=h||u,(l<o&&valid||null==i)&&(i=t,o=l,c=a)}(!h||e.y<c.y&&this.nearestFloorHitPrev.y-c.y>this.maxStepHeight+this.getStandingHeight()&&!this.gravityActive&&e.y+this.maxStepHeight+this.getStandingHeight()<c.y&&this.gravityActive)&&(0==this.cameraMovement[0]&&0==this.cameraMovement[1]||(h=!0,this.gravityActive=!1,this.objectJumpLock=!0),a=this.cameraPos.clone(),a.y=Math.min(e.y,a.y),c=e=a,this.gravityActive?c.y=this.nearestFloorHitPrev.y:c.y=this.cameraPos.y,this.cameraJumpActive=!1,this.cameraAllowJump=!0,this.cameraJumpInAir=!1,this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0)),h&&(null==i?(this.nearestFloorHit=this.nearestFloorHitPrev,this.nearestFloorObjName=this.nearestFloorObjNamePrev,Math.abs(e.y-this.nearestFloorHit.y)>this.maxStepHeight+this.getStandingHeight()&&(this.colliderValid=!1,this.gravityActive=!0)):(this.nearestFloorHitPrev=this.nearestFloorHit,this.nearestFloorObjNamePrev=this.nearestFloorObjName,this.nearestFloorHit=c,this.nearestFloorObjName=i))}else this.colliderFail=!0,this.movementBlocked=!0;else{let r=this.maxStepHeight+this.cameraJumpImpulse;if(this.maxStepHeight,this.pxlUser.gravityRate,o.y=e.y+r,this.objRaycast.set(o,t),this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList||(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList={}),!this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList[l]){let e=[],t=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom];e.push(...t.colliderList.noAxis),e.push(...t.colliderList[l]),e.push(...t.antiColliderTopList.noAxis),e.push(...t.antiColliderTopList[l]),this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList[l]=e}if(!(this.colliderActive&&this.antiColliderTopActive||this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderActive))return e;if((n=this.objRaycast.intersectObjects(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList[l])).length>0){this.floorColliderInitialHit=!0;let t,r=-99999,s=this.nearestFloorHit;for(let o=0;o<n.length;++o){let a=n[o],l=a.distance,c=a.point,h=!1;if(t=a.object.name,h=c.distanceTo(e)<this.maxStepHeight,(this.portalList[t]||this.roomWarpZone.includes(t))&&h){i=t,s=c;break}this.itemCheck(t,h)||(l<r||null==i)&&(i=t,r=l,s=c)}null==this.nearestFloorObjName&&null!=i&&(this.nearestFloorHitPrev=s,this.nearestFloorObjNamePrev=i,this.nearestFloorHit=s,this.nearestFloorObjName=i),this.nearestFloorHitPrev.y-s.y>this.maxStepHeight+this.getStandingHeight()&&!this.gravityActive?(e=i?this.cameraPos.clone():this.cameraPrevPos.clone(),i=this.nearestFloorObjName,this.cameraMovement[0]=0,this.cameraMovement[1]=0,this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(0),this.pxlDevice.touchMouseData.velocity.multiplyScalar(0)):(this.nearestFloorHitPrev=this.nearestFloorHit,this.nearestFloorObjNamePrev=this.nearestFloorObjName,this.nearestFloorHit=s,this.nearestFloorObjName=i,null==i&&(this.colliderValid=!1,this.gravityActive=!0))}else this.colliderFail=!0,this.movementBlocked=!0,this.colliderValidityChecked=!1,e=this.cameraPos.clone()}}else this.colliderValidityChecked=!1;return this.colliderValidityChecked=!1,e}roomColliderCheck(e){this.colliderValidityChecked=!0,this.colliderValid=!1,this.colliderFail=!1;let t=e.clone();if(t.y=0,this.nearestFloorHit=t,this.nearestFloorObjName="None",!this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].roomWarp)return e;if(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].roomWarp.length>0){let t=new de(0,-1,0),n=e.clone(),r=1500;n.y=r,this.objRaycast.set(n,t);var i=this.objRaycast.intersectObjects(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].roomWarp);if(i.length>0)return this.pxlEnv.currentAudioZone=0,this.warpEventTriggered(1,this.pxlEnv.mainRoom),e;e.y;let s=e;if(1==this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderActive){if(!this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList){let e=[];Object.keys(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderList).forEach((t=>{e.push(...this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderList[t])})),this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList=e}if(this.objRaycast.set(n,t),0==(i=this.objRaycast.intersectObjects(this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom].colliderMasterList)).length)return this.cameraPrevPos.clone();if(i.forEach((t=>{let i=t.distance,n=e.y-t.point.y;i>e.y&&n<e.y+this.maxStepHeight&&(s=t.point)})),e.y<s.y)return s.clone()}}return e}checkColliderValid(e){this.colliderValidityChecked=!0;let t=this.maxStepHeight+this.pxlUser.gravityRate,i=e.distanceTo(this.nearestFloorHit),n=i<t;return this.colliderValid=n,i}eventTrigger(e=null){if(!e)return!1;if(this.portalList[e])return this.warpEventTriggered(0,this.portalList[e]),this.eventCheckStatus=!1,!0;if(this.roomWarpZone.includes(e))return this.warpEventTriggered(1,e),this.eventCheckStatus=!1,!0;if(this.colliderShiftActive=this.colliderCurObjHit!=e||this.colliderShiftActive,this.colliderPrevObjHit=this.colliderCurObjHit,this.colliderCurObjHit=e,this.colliderShiftActive=this.colliderShiftActive||!(1==this.colliderAdjustPerc||0==this.colliderAdjustPerc),this.colliderShiftActive&&this.colliderCurObjHit){let e=1;this.colliderCurObjHit.includes("AudioTrigger")&&(e=-1),this.colliderAdjustPerc=Math.min(1,Math.max(0,this.colliderAdjustPerc+this.colliderAdjustRate*e));let t=1-this.colliderAdjustPerc,i=1;if("AudioTrigger_1"==this.colliderCurObjHit)this.pxlEnv.currentAudioZone=1,i-=t*this.uniformScalars.darkBase,this.uniformScalars.exposureUniformBase=i;else if("AudioTrigger_2"==this.colliderCurObjHit){this.pxlEnv.currentAudioZone=2;let e=1;i=this.uniformScalars.curExp+t*this.uniformScalars.brightBase*e,this.uniformScalars.exposureUniformBase=i,this.rolLobby,this.proximityScaleTrigger=!0,this.pxlAudio.setFadeActive(-1)}else"MainRoom"==this.colliderCurObjHit?(this.pxlEnv.currentAudioZone=3,this.warpEventTriggered(1,"ShadowPlanet")):(this.pxlEnv.currentAudioZone=0,i=i*(1-t)+this.uniformScalars.exposureUniformBase*t);if(this.colliderShiftActive=!(1==this.colliderAdjustPerc||0==this.colliderAdjustPerc),"AudioTrigger_2"==this.colliderPrevObjHit&&this.colliderCurObjHit!=this.colliderPrevObjHit&&(this.proximityScaleTrigger=!0,this.pxlAudio.setFadeActive(1)),this.pxlDevice.mobile&&(i=this.colliderAdjustPerc),this.pxlEnv.updateCompUniforms(i),this.proximityScaleTrigger&&!this.pxlDevice.mobile&&!this.pxlAutoCam.enabled){let e=this.colliderAdjustPerc;e=1-(1-e)*(1-e),this.pxlEnv.fogMult.x=e,this.colliderShiftActive||(this.proximityScaleTrigger=!1)}this.eventCheckStatus=this.colliderShiftActive}}itemCheck(e,t){if(!t)return!1;let i=e.split("_").shift();if(this.pxlUser.itemListNames.includes(e)){if(this.pxlUser.checkItemPickUp(i))return this.itemActive(i,e)}return!1}itemTrigger(){if(this.pxlUser.itemActiveTimer.length>0)this.pxlUser.itemActiveTimer[0]=this.pxlTimer.curMS;else{0==this.pxlUser.mPick.length&&(this.pxlUser.mPick=this.pxlUtils.randomizeArray(["LizardKing","StarField","InfinityZoom"]));let e=this.pxlUser.mPick.pop();this.pxlUser.checkItemPickUp(e),this.itemActive(e)}}itemActive(e=null,t=null){if(null==e)return!1;let i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime,n="",r="";if("LowGravity"==e)r="Low Gravity",n="this.lowGrav=0;this.itemGroupList['"+t+"'].visible=true;",i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else if("LizardKing"==e)r="I am the Lizard King",n="this.lKing=0;this.lKingWarp.set(...this.lKingInactive);this.lKingPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else if("StarField"==e)r="Major Tom",n="this.sField=0;this.sFieldPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime;else{if("InfinityZoom"!=e)return!1;r="Fractal Substrate",n="this.iZoom=0;this.iZoomPass.enabled=false;"+(!this.pxlDevice.mobile&&"this.itemGroupList['"+t+"'].visible=true;this.pxlEnv.mapComposerWarpPass.needsSwap=true;this.pxlEnv.mapComposerWarpPass.enabled=false;"),i=this.pxlTimer.prevMS+this.pxlUser.itemRunTime,this.pxlEnv.mapComposerWarpPass.needsSwap=!0,setTimeout((()=>{this.pxlEnv.mapComposer.render(),this.pxlEnv.roomComposer.render(),setTimeout((()=>{this.pxlEnv.mapComposerWarpPass.needsSwap=!1,this.pxlEnv.mapComposerWarpPass.enabled=!0}),500)}),500)}return this.pxlGuiDraws.buildItemHud(e,r),this.pxlDevice.mobile||(this.pxlUser.itemGroupList[t].visible=!1),this.pxlUser.itemInactiveCmd.push(n),this.pxlUser.itemActiveTimer.push(i),this.pxlUser.itemActiveList.push(r),!0}updateMovement(e){let t=[0,0],i=[...this.pxlDevice.directionKeysPressed],n=0,r=0,s=[e-this.pxlDevice.keyDownCount[0],e-this.pxlDevice.keyDownCount[1]];if(i[0]+i[2]==1){n=i[2]-i[0];let e=this.pxlQuality.settings.leftRight?1.5:1-.6*Math.min(1,Math.abs(.1*this.cameraMovement[1]));t[0]=((this.pxlQuality.settings.leftRight?2:6)+.1*(1+s[0]*(s[0]+1)))*e}else this.pxlDevice.keyDownCount[0]=e;if(i[1]+i[3]==1){r=i[3]-i[1];let e=1-.65*Math.min(1,Math.abs(.07*this.cameraMovement[0]));t[1]=(1+s[1]*(3*s[1]+2+this.pxlDevice.shiftBoost)*.15)*e,t[1]=Math.min(30,t[1])}else this.pxlDevice.keyDownCount[1]=e;this.cameraMovement[0]+=n*t[0],this.cameraMovement[1]+=r*t[1]}initFrameCamPosition(){let e=this.cameraPos.clone();if(this.cameraBooted){let t;t=new de(this.pxlQuality.settings.leftRight?.5*this.cameraMovement[0]:0,0,this.cameraMovement[1]),this.cameraMoveLength=t.length(),t.applyQuaternion(this.camera.quaternion),t.normalize().multiply(new de(1,0,1)).multiplyScalar(this.cameraMoveLength*this.cameraMoveLengthMult),e.add(t),this.cameraMovement[0]=Math.abs(this.cameraMovement[0])<this.posRotEasingThreshold?0:this.cameraMovement[0]*this.cameraMovementEase,this.cameraMovement[1]=Math.abs(this.cameraMovement[1])<this.posRotEasingThreshold?0:this.cameraMovement[1]*this.cameraMovementEase,e.y=this.cameraPos.y+this.cameraJumpImpulse,this.workerActive&&(this.cameraJumpImpulse=0)}else this.cameraAimTarget.position.set(0,0,0),this.cameraPrevPos=new de(e.clone()),this.cameraPrevLookAt=new de(0,0,1);return this.cameraCross=new de(1,0,0).applyQuaternion(this.camera.quaternion),e}updateCamPosition(e){if(this.gravityActive){if(this.maxStepHeight,this.pxlUser.gravityRate,e.y<this.nearestFloorHit.y){let t=this.nearestFloorHitPrev;e.y=Math.max(t.y,e.y),e.y<0&&(e.x=t.x,e.z=t.z)}else e.y=Math.max(this.nearestFloorHit.y,e.y-this.pxlUser.gravityRate),e.y==this.nearestFloorHit.y&&e.y<this.cameraPrevPos.y&&this.jumpLanding()}else{if(e.distanceTo(this.nearestFloorHit)<this.maxStepHeight)e.y=this.nearestFloorHit.y;else{let t=(e=this.cameraPos.clone()).y>this.nearestFloorHit.y;this.gravityActive=t,this.colliderFail=!t,this.workerFunc("jumpLanding")}}return e}getStandingHeight(){return this.standingHeight*this.userScale}getUserHeight(){let e=Math.min(1,Math.abs(this.cameraMovement[1]));this.walkBouncePerc=this.walkBouncePerc>=1?1:this.walkBouncePerc+.05,this.walkBounce+=e,this.walkBouncePerc=.9*this.walkBouncePerc+e,this.walkBouncePerc<.03&&(this.walkBouncePerc=0,this.walkBounce=0,this.walkBounceSeed=2351.3256*Math.random());let t=Math.sin(.4*this.walkBounce+this.walkBounceSeed+.2*this.cameraMovement[1])*this.walkBouncePerc*.3;return this.getStandingHeight()-this.standingHeightGravInfluence+t}camApplyMobileRotation(){if(null!=this.cameraPose.alpha){let e=.017453292519943278,t=2.23606797749979,i=new ce,n=this.cameraPose.alpha*e+this.cameraPose.alphaOffset+2.1,r=this.cameraPose.beta*e,s=this.cameraPose.gamma*e,o=new de(0,0,1),a=new ce,l=new ce(-t,0,0,t),c=new Me;c.set(r,n,-s,"YXZ"),i.setFromEuler(c),i.multiply(l),i.multiply(a.setFromAxisAngle(o,-this.cameraPose.orientation)),i.normalize();let h=new ce;ce.slerp(this.camera.quaternion,i,h,.35),this.camera.setRotationFromQuaternion(h)}}updateCameraRotation(){if(null==this.cameraPose.alpha){let e=this.pxlDevice.gyroGravity[2];this.pxlDevice.touchMouseData.netDistance.y=Math.min(500*this.pi,Math.max(500*-this.pi,this.pxlDevice.touchMouseData.netDistance.y));let t=new Me;t.set(.001*this.pxlDevice.touchMouseData.netDistance.y,.001*this.pxlDevice.touchMouseData.netDistance.x+e,0,"YXZ");let i=new ce;i.setFromEuler(t),i=this.pxlDevice.touchMouseData.initialQuat.clone().multiply(i),i.normalize();let n=new ce;ce.slerp(this.camera.quaternion,i,n,.35),n=n.normalize(),this.camera.setRotationFromQuaternion(n)}}lookAtTargetLock(){if(this.lookAtTargetActive&&this.lookAtTargetActive&&(0!=this.lookAtLockFader&&(this.lookAtLockPerc+=(this.lookAtLockFader+Math.min(1,.001*this.pxlDevice.touchMouseData.velocity.length()))*this.lookAtLockFadeRate,(this.lookAtLockPerc<0||this.lookAtLockPerc>1)&&(this.lookAtLockPerc=this.lookAtLockPerc<0?0:1,this.lookAtLockFader=0),this.lookAtPerc.x=this.lookAtLockPerc),this.lookAtLockPerc>0)){let e=this.camera.quaternion.clone();this.camera.lookAt(this.cameraAimTarget.position);let t=this.camera.quaternion.clone();1==this.lookAtLockPerc?this.camera.setRotationFromQuaternion(t):this.camera.setRotationFromQuaternion(t.slerp(e,.5*Math.cos(this.lookAtLockPerc*pi)+.5))}}warpEventTriggered(e=0,t=null,i="init"){this.warpActive||(this.pxlEnv.mapComposerWarpPass.needsSwap=!0,this.warpType=e,this.warpObj=t,this.warpTarget=i,this.warpActive=!0,this.pxlEnv.initWarpVisual(e))}warpCamRun(){if(0==this.warpType)this.setToObj(this.warpObj);else if(1==this.warpType){let e="init"==this.warpTarget;this.warpToRoom(this.warpObj,e,this.warpTarget)}this.pxlEnv.setExposure(this.uniformScalars.exposureUniformBase),this.warpObj=null,this.warpTarget=null,this.warpActive=!1}lowQualityUpdates(){if(this.HDRView){let e=new de(0,0,-1).applyQuaternion(this.camera.quaternion),t=e.clone().multiply(new de(1,0,1)).normalize(),i=.1591549430918955;this.camRotPitch.set(-Math.atan2(t.x,t.z)*i,.5*e.y)}}midQualityUpdates(){if(this.pxlQuality.settings.motion){let e,t=new de(0,0,0);if(t.applyQuaternion(this.camera.quaternion),this.camRotXYZ.multiplyScalar(.8).add(t.multiplyScalar(.2)),this.pxlDevice.mobile){let t=.5*sW,i=.5*sH,n=new de(0,0,10),r=new de(0,0,10);n.applyQuaternion(this.camera.quaternion.clone()).project(this.camera),r.applyQuaternion(this.prevQuaternion).project(this.camera),n.x=(n.x+1)*t,n.y=-(n.y-1)*i,r.x=(r.x+1)*t,r.y=-(r.y-1)*i,e=r.clone().sub(n.clone()).multiplyScalar(.6).multiply(new de(this.pxlDevice.screenRes.x,this.pxlDevice.screenRes.y,0));let s=.1;e.length>s&&e.normalize().multiplyScalar(s)}else e=this.pxlDevice.touchMouseData.velocity.clone().multiplyScalar(Math.max(this.pxlDevice.screenRes.x,this.pxlDevice.screenRes.y));let i=new ee(e.x,-e.y),n=new ee(0,0).lerpVectors(this.pxlEnv.blurDirPrev,i,.85);this.pxlEnv.blurDirPrev.set(this.pxlEnv.blurDirCur),this.pxlEnv.blurDirCur.set(n)}}emitCameraTransforms(e,t,i=!1){}jogServerMemory(){let e=this.cameraPos.clone(),t=this.getUserHeight();this.emitCameraTransforms(e,t,!0)}updateCamera(){let e=this.pxlDevice.touchMouseData.velocity.length();if(this.pxlDevice.touchMouseData.curFadeOut.multiplyScalar(.7),this.camUpdated||0!=e||this.pxlDevice.touchMouseData.active){this.camUpdated=!1,this.updateDeviceValues(e),this.pxlUser.localUserTurned=0==this.pxlDevice.touchMouseData.velocity.length(),this.prevQuaternion.copy(this.camera.quaternion);let t=this.initFrameCamPosition(),i=this.getUserHeight();{let e=null;t=this.mainColliderCheck(t,e)}this.updateGravity(),this.colliderValid||this.colliderValidityChecked?this.jump=0:this.jump=this.checkColliderValid(t),this.eventCheckStatus=!0,t=this.updateCamPosition(t),this.pxlUser.localUserMoved=this.gravityActive||(this.cameraMovement[0]**2+this.cameraMovement[1]**2)**.5>0,this.cameraPrevPos=this.cameraPos.clone(),this.cameraPos=t.clone(),t.y+=i,this.camera.position.copy(t),this.updateCameraRotation(),this.camera.updateMatrixWorld(),this.emitCameraTransforms(t,i),this.cameraBooted=!0}else this.pxlUser.localUserMoved=!1,this.pxlUser.localUserTurned=!1}}class gd{constructor(e=!1){this.enabled=e,this.active=!1,this.mobile=null,this.pxlTimer=null,this.pxlUtils=null,this.pxlDevice=null,this.pxlAudio=null,this.pxlCamera=null,this.pxlEnv=null,this.camera=null,this.netDistance=new ee,this.prevCamChange=0,this.nextCamChange=0,this.delayRange=[25,45],this.autoCamActive=!1,this.autoCamMode=0,this.autoCamPaths={},this.resetAutoCam=!0,this.autoCamPrevPos=null,this.autoCamPrevLookAt=null,this.touchBlender=!1,this.autoCamId=0,this.camMode=0,this.curModeCount=0,this.curRoom="",this.curRoomIndex=0,this.curPath=0,this.roomList=[],this.pathCounts={},this.forceNewRoom=!1,this.curRoomCount=0,this.avatarMin=0,this.avatarValid=!1,this.curAvatar=null,this.clusterReturn=!1,this.curCluster=[],this.clusterValid=2,this.clusterRotation=0,this.clusterRotRate=.005}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlUtils=e.pxlUtils,this.pxlDevice=e.pxlDevice,this.pxlAudio=e.pxlAudio,this.pxlCamera=e.pxlCamera,this.pxlEnv=e.pxlEnv,this.camera=e.pxlCamera.camera}init(){this.active=this.enabled||this.mobile,this.autoCamActive=this.autoCamActive||this.mobile;let{roomList:e,pathCounts:t}=this.getAutoCamData();this.roomList=e,this.curRoom=this.roomList[0],this.pathCounts=t,this.setRoom(!1,!0),this.getNextPath(),this.checkStatus()}step(e=!1){if(0==this.active){if(!this.autoCamActive)return!0;this.updateAutoCamera()}if((this.pxlTimer.curMS>=this.nextCamChange||e)&&this.active&&!this.pxlDevice.touchMouseData.active){if(!e||!this.enabled){let e=this.checkCamMode();this.setNextTrigger(e)}this.curAvatar=0,this.camera.up.set(0,1,0),this.pxlDevice.touchMouseData.netDistance.multiplyScalar(0),1==this.camMode||2==this.camMode?this.setCamMode(0):(this.curCluster=[],this.stepDroneCam()),this.setAutoCamMode(this.camMode)}return this.updateAutoCamera(),this.applyTouchRotate(),!1}checkCamMode(){let e=this.camMode;return this.camMode=0,this.enabled&&this.active?(this.camMode!=e&&0==this.camMode&&(this.forceNewRoom=!0),1):1}setCamMode(e){1==e.type||2==e.type||(this.camMode=0,this.forceNewRoom=!0),this.step(!0)}stepDroneCam(){let e=!0,t=Math.random(this.nextCamChange),i=this.pathCounts[this.pxlEnv.currentRoom];this.curRoomCount>=2*i&&(this.forceNewRoom=!0),(t<.3||this.forceNewRoom)&&(this.setRoom(),e=!1),this.curRoomCount+=1,this.getNextPath(e)}setRoom(e=!1,t=!1){if(this.active||this.autoCamActive){let i=this.curRoomIndex,n=this.roomList.length;this.pxlEnv.postIntro?t||(e?i=(i+1)%n:(i=Math.floor(Math.random()*n),i==this.curRoomIndex&&(i=(i+1)%n))):i=0,this.curRoomIndex=i,this.curRoom!=this.roomList[i]&&(this.curRoom=this.roomList[i],this.forceNewRoom=!1,this.curRoomCount=0,this.pxlCamera.warpEventTriggered(1,this.curRoom,"init"))}}setNextTrigger(e=1){let t=Math.random(this.nextCamChange);t=(this.delayRange[1]-this.delayRange[0])*t+this.delayRange[0],this.nextCamChange=this.pxlTimer.curMS+t*e}getNextPath(e=!0,t=1){if(this.autoCamPaths.hasOwnProperty(this.pxlEnv.currentRoom)){let i=this.autoCamPaths[this.pxlEnv.currentRoom].length;if(this.curPath=(this.curPath+t)%i,e&&0==t){let e=Math.random(this.nextCamChange);e=Math.floor(e*this.autoCamPaths[this.pxlEnv.currentRoom].length),this.curPath==e&&(e=(e+1)%i),this.curPath=e}else this.curPath=this.curPath<0?i-1:this.curPath,this.setNextTrigger(1);this.setAutoCamPath(this.curPath)}}checkStatus(){(this.autoCamActive||this.pxlDevice.mobile||this.active)&&this.toggleAutoCam(!0)}preAutoCamToggle(){this.autoCamActive||"AudioTrigger_2"==this.pxlCamera.colliderCurObjHit&&(this.pxlCamera.proximityScaleTrigger=!0,this.exposureShiftActive=!0),this.toggleAutoCam()}setAutoCamMode(e=0){this.autoCamMode=e,1==e&&(this.resetAutoCam=!0)}setPosQuat(e,t){this.camera.quaternion.copy(t),this.camera.position.copy(e),this.pxlCamera.updateCameraMatrices(),this.pxlCamera.camUpdated=!0}toggleAutoCam(e=null,t=1){if(this.pxlEnv.fogMult.x=1,this.autoCamPaths[this.pxlEnv.currentRoom]){this.curRoom=this.pxlEnv.currentRoom;let i=this.autoCamPaths[this.pxlEnv.currentRoom].length;isNaN(this.autoCamId)&&(this.autoCamId=i-1);let n=this.autoCamActive;if(this.autoCamActive=null==e&&i>0?!this.autoCamActive:e,this.autoCamActive=this.mobile||this.autoCamActive,!n&&this.autoCamActive&&(this.netDistance=(new ee).copy(this.pxlDevice.touchMouseData.netDistance)),this.pxlDevice.touchMouseData.netDistance.multiplyScalar(0),this.autoCamActive){this.pxlCamera.resetGravity(),this.autoCamId=(this.autoCamId+t)%i,this.autoCamId=this.autoCamId<0?i-1:this.autoCamId;let e=this.autoCamPaths[this.pxlEnv.currentRoom][this.autoCamId];this.totalLoopDuration=e.position.userData.duration;try{this.autoCamPositions=e.position.geometry.attributes.position,this.autoCamLookAt=e.lookAt.geometry.attributes.position,e.up?this.autoCamUp=e.up.geometry.attributes.position:(this.autoCamUp=null,this.camera.up.set(0,1,0)),this.numControlPoints=this.autoCamPositions.array.length/3,this.autoCamStartTime=this.pxlTimer.curMS-this.totalLoopDuration*Math.random()}catch(e){}}else this.setPosQuat(this.pxlCamera.cameraPrevPos.clone(),this.pxlCamera.prevQuaternion.clone()),this.pxlDevice.touchMouseData.netDistance.copy(this.netDistance)}}prevNextAutoCam(e=1,t=!1){this.autoCamActive&&(this.enabled&&this.active&&!t?this.nextCamChange=this.pxlTimer.curMS:this.toggleAutoCam(!0,e))}setAutoCamPath(e=0){this.autoCamActive&&(this.autoCamId=e,this.toggleAutoCam(!0,0))}getAutoCamData(){let e=Object.keys(this.autoCamPaths),t={};return e.forEach((e=>{t[e]=this.autoCamPaths[e].length})),{roomList:e,pathCounts:t}}getAutoCamValueFromCurve(e,t,i,n=!1){let r=e[3*t],s=e[3*t+1],o=e[3*t+2],a=(t+1)%this.numControlPoints,l=e[3*a],c=e[3*a+1],h=e[3*a+2],u=new de(r,s,o),d=new de(l,c,h);return u.lerp(d,i),u}updateAutoCamera(){if(!this.autoCamPositions||!this.autoCamPositions.array)return;let e=(this.pxlTimer.curMS-this.autoCamStartTime)%this.totalLoopDuration/this.totalLoopDuration;e*=this.numControlPoints-1;let t=Math.floor(e),i=e-t,n=this.getAutoCamValueFromCurve(this.autoCamPositions.array,t,i,!1);this.camera.position.copy(n);let r=this.getAutoCamValueFromCurve(this.autoCamLookAt.array,t,i);if(this.camera.lookAt(r),this.autoCamUp){let e=this.getAutoCamValueFromCurve(this.autoCamUp.array,t,i);e=e.sub(n).normalize(),this.camera.up.copy(e)}}applyTouchRotate(){let e=1;this.touchBlender?(e=Math.min(1,.3*Math.max(0,this.pxlTimer.curMS-this.pxlDevice.touchMouseData.releaseTime-1)),e*=e,this.pxlDevice.touchMouseData.netDistance.multiplyScalar(1-.3*e),this.touchBlender=e<1):this.pxlDevice.touchMouseData.netDistance.multiplyScalar(.5);let t=new Me;t.set(this.pxlDevice.touchMouseData.netDistance.y/this.pxlDevice.sH*2,this.pxlDevice.touchMouseData.netDistance.x/this.pxlDevice.sW*2,0,"YXZ");let i=(new ce).clone(this.camera.quaternion);i.setFromEuler(t),i=this.camera.quaternion.clone().multiply(i),i.normalize(),this.touchBlender&&i.slerp(this.camera.quaternion.clone(),e).normalize();let n=new de(0,0,-10).applyQuaternion(i).add(this.camera.position);this.camera.setRotationFromQuaternion(i),this.camera.lookAt(n),this.camera.up.set(0,1,0)}}const vd=["PoseEngine"];class xd{constructor(){this.plugins={},this.verbose=!1}init(e,t,i,n=!1){!this.plugins[e]||n?this.load(e,((e,n)=>{e?i?i(e):this.verbose&&console.error(e):t&&t(n)})):(this.verbose&&console.log(`Extension ${e} already booted, skipping...`),t&&t(this.plugins[e]))}async load(e,t){if(vd.includes(e))try{const i=new((await import(`./${e}.js`)).default);try{this.boot(e,i)}catch(t){console.error(`Error (2) Booting extension '${e}':`,t)}t&&t(null,i)}catch(i){console.error(`Error (1) Importing / Parsing extension '${e}':`,i),t&&t(err,null)}else{const i=new Error(`Extension ${e} not found`);console.error(i),t&&t(i,null)}}start(e){let t=this.get(e);t&&t.start()}pause(e){let t=this.get(e);t&&t.pause()}stop(e){let t=this.get(e);t&&t.stop()}status(e){let t=this.get(e);return!!t&&t.active}boot(e,t){this.plugins[e]=t,t.init()}get(e){return this.plugins[e]?this.plugins[e]:(console.warn(`Extension ${e} not found`),null)}unload(e){let t=this.get(e);t&&(t.destroy(),delete this.plugins[e])}}class yd{constructor(){this.pxlTimer=null,this.pxlVideo=null,this.pxlDevice=null,this.pxlEnv=null,this.pxlGuiDraws=null,this.pxlSocket=null,this.active=!1,this.audioTimer=new Zh(0,0,0),this.audioEq=new Kh(0,0,0,0),this.audioWorker=null,this.audioProcessor=null,this.djUrlSource="//",this.djMuted=!1,this.djAudioVolume=0,this.djAudioVolumeMax=.65,this.djAudioVolumeMin=.25,this.djAudioVolumeScalar=.25,this.djAudioObj=null,this.djTimecodeObj=null,this.djVolumeParentObj=null,this.djVolumeObj=null,this.roomAudioStopped=!0,this.videoStreamObjects=[],this.colliderVolActive=!1,this.isVideoObject=!1,this.activeObject=null,this.fadeActive=!1,this.fadeAdjustRate=.02,this.fadeDir=0,this.fadePerc=0,this.audioContext=null}setDependencies(e){this.pxlTimer=e.pxlTimer,this.pxlVideo=e.pxlVideo,this.pxlDevice=e.pxlDevice,this.pxlEnv=e.pxlEnv,this.pxlGuiDraws=e.pxlGuiDraws,this.pxlSocket=e.pxlSocket}init(){this.active=!0}postBoot(){if(this.djAudioObj){if(this.pxlEnv.pxlAutoCam.enabled)this.djAudioVolumeMax=1,this.djAudioVolumeMin=0;else if(this.pxlEnv.mobile){let i=this,n=this.djAudioVolumeMax,r=document.getElementById("guiMobileWelcomeButton");function s(t){setTimeout((()=>{i.djAudioVolume=0,i.djAudioVolumeMax=n,i.djAudioVolumeMin=0,i.djAudioObj.byScript=!0,i.djAudioObj.volume=0,e.play().then((()=>{i.djPlayerMuteToggle(!1),i.setFadeActive(.5)})),r.removeEventListener("click",s),r.removeEventListener("touchstart",s)}),500)}r.addEventListener("click",s),r.addEventListener("touchstart",s)}this.djAudioVolume=this.pxlEnv.enabled?0:this.djAudioVolumeMin,this.djAudioObj.volume=this.pxlEnv.enabled?0:this.djAudioVolumeMin,this.djPlayerMuteToggle(!1),this.djPlayerAdjustVolume({}),this.djPlayerSetSliderGui();let e=this.djAudioObj;e.setAttribute("autoplay",!0);let t=this;this.djAudioObj.addEventListener("volumechange",(e=>{t.djPlayerSetSliderGui()}),!0)}}start(){}step(){this.djAudioObj&&this.djAudioObj.paused&&(this.djAudioObj.play().catch((e=>{})),this.djAudioObj.muted=this.djMuted||!this.roomAudioStopped),this.fadeAudioEvent()}isPaused(){let e=!0;return this.djAudioObj&&(e=this.djAudioObj.paused),e}pausePlayback(){this.active=this.pxlTimer.active,this.active?this.play():this.stop()}initPlay(){this.pxlVideo.canUnmute("dj")&&!this.isPaused()&&(this.djPlayerMuteToggle(!1),this.setFadeActive(1),this.pxlDevice.mobile&&this.pxlGuiDraws.toggleIcon(this.pxlGuiDraws.hudIcons.musicIcon,!this.djMuted,!0))}play(){if(this.active=!0,this.isVideoObject)this.pxlVideo.setVolume("dj",this.djAudioVolume),this.pxlVideo.setMuted("dj",this.djMuted);else{this.djAudioObj.byScript=!0;let e=this.djAudioObj;e.children[0].setAttribute("src",this.djUrlSource),setTimeout((()=>{e.load(),setTimeout((()=>{e.volume=this.djAudioVolume,e.muted=this.djMuted||!this.roomAudioStopped,e.paused&&e.play()}),20)}),20)}}stop(){if(this.active=!1,this.isVideoObject)this.pxlVideo.setMuted("dj",!0);else{let e=this.djAudioObj;e.children[0].setAttribute("src",""),e.pause(),setTimeout((()=>{e.load()}),20)}}djBuildPlayer(){this.djAudioObj=document.getElementById("djStream"),this.djVolumeParentObj=document.getElementById("djPlayerVolumeParent"),this.djVolumeObj=document.getElementById("djPlayerVolume"),this.djAudioObj.byScript=!1,this.djAudioObj.volume=0,this.djVolumeObj.style.width="0%";let e=this;this.pxlDevice.objectPercList.push("djPlayerVolume"),this.pxlDevice.objectPercList.push("djPlayerVolumeParent"),this.pxlDevice.objectPercFuncList.djPlayerVolumeParent=t=>{e.djPlayerAdjustVolume(t)},this.djVolumeParentObj.down=!1,this.djVolumeParentObj.addEventListener("mousedown",(t=>{e.djVolumeParentObj.down=!0,e.djPlayerAdjustVolume(t)})),this.djVolumeParentObj.addEventListener("mousemove",(t=>{e.djPlayerAdjustVolume(t)})),this.djVolumeParentObj.addEventListener("mouseup",(t=>{e.djVolumeParentObj.down=!1})),this.pxlDevice.mobile&&(this.djVolumeParentObj.style.width="30vw",this.djVolumeParentObj.addEventListener("touchstart",(t=>{e.djVolumeParentObj.down=!0}),{passive:!0}),this.djVolumeParentObj.addEventListener("touchmove",(t=>{e.djPlayerAdjustVolume(t)}),{passive:!0}),this.djVolumeParentObj.addEventListener("touchend",(t=>{e.djVolumeParentObj.down=!1}),{passive:!0})),this.djAudioObj.muted=!0,this.prepAudioProcessor()}prepAudioProcessor(){}stepAudioProcessor(){}recieveAudioProcessor(e){}buildRemoteAudioMixer(e,t){return!1}loadStreamPromise(){let e=this.djAudioObj;return new Promise(((t,i)=>{this.djAudioObj.byScript=!0,e.children[0].setAttribute("src",this.djUrlSource),e.load(),e.muted=this.djMuted||!this.roomAudioStopped})).then((()=>{})).catch((e=>{console.log("error source")}))}djPlayerSetSliderGui(){this.djAudioObj.byScript||!this.pxlEnv.postIntro||this.pxlEnv.pxlAutoCam.enabled?this.djAudioObj.byScript=!1:(this.fadeActive=!1,this.djAudioVolumeMax=this.djAudioVolume,this.djAudioVolumeMin=this.djAudioVolume*this.djAudioVolumeScalar),this.djVolumeObj.style.width=100*this.djAudioVolume*~~!this.djMuted+"%"}djPlayerAdjustVolume(e){if(this.djVolumeParentObj.down||this.djVolumeParentObj.down&&e.touches){let t=this.djVolumeParentObj.offsetWidth,i=0;i=e.touches?this.pxlDevice.objectPerc.percX:e.offsetX/t;let n=Math.max(0,Math.min(1,i));this.djAudioVolume=n,this.djAudioVolumeMax=n,this.djAudioVolumeMin=.1*n,n*=n,this.djAudioObj&&(this.djAudioObj.volume=n),e.touches&&this.djPlayerSetSliderGui()}this.pxlVideo&&this.pxlEnv.posted&&this.pxlVideo.setVolume("dj",this.djAudioVolume)}djPlayerMuteToggle(e=null){this.djMuted=null==e?!this.djMuted:e,null!=e&&this.pxlGuiDraws.toggleIcon(this.pxlGuiDraws.hudIcons.musicIcon,!e,!0),this.djAudioObj&&(this.djAudioObj.muted=this.djMuted,this.djAudioObj.byScript=!0,this.djAudioObj.volume=this.djAudioObj.volume),this.pxlVideo&&this.pxlEnv.posted&&this.pxlVideo.setMuted("dj",this.djMuted)}setFadeActive(e=1){this.fadeDir!=e&&(this.fadeDir=e,this.fadeActive=!0)}fadeAudioEvent(){if(this.djVolumeParentObj&&!this.djVolumeParentObj.down&&this.fadeActive&&this.pxlEnv.postIntro){if(this.fadePerc+=this.fadeAdjustRate*this.fadeDir,this.fadePerc<0||this.fadePerc>1)return this.fadePerc=1==this.fadeDir?1:0,void(this.fadeActive=!1);let e=(this.djAudioVolumeMax-this.djAudioVolumeMin)*this.fadePerc+this.djAudioVolumeMin;this.djAudioVolume=e,e*=e,this.djAudioObj&&(this.djAudioObj.byScript=!0,this.djAudioObj.volume=e),this.pxlVideo.setVolume("dj",this.djAudioVolume)}}}function bd(){return"\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        "}var wd=Object.freeze({__proto__:null,camPosVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  varying vec3 camPos;\n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n    camPos=(modelViewMatrix*vec4(0.0,0.0,1.0,1.0)).xyz;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  varying vec3 camPos;\n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n    camPos=(modelViewMatrix*vec4(0.0,0.0,1.0,1.0)).xyz;\n  }"},defaultShiftVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  varying vec2 vUv;\n  varying vec2 vUvShift;\n  void main(){\n    vUv=uv;\n        vUvShift=uv-.5;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  varying vec2 vUv;\n  varying vec2 vUvShift;\n  void main(){\n    vUv=uv;\n        vUvShift=uv-.5;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }"},defaultVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }"},discardFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  void main(){\n    discard;\n    gl_FragColor=vec4(.0,.0,.0,0.0);\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  void main(){\n    discard;\n    gl_FragColor=vec4(.0,.0,.0,0.0);\n  }"},shaderHeader:bd});var _d=Object.freeze({__proto__:null,animTextureFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  uniform vec2 time;\n  uniform float rate;\n  uniform float freq;\n  uniform float intensity;\n  uniform vec3 glowColor;\n  uniform sampler2D glowTexture;\n  varying vec2 vUv;\n  float pi=3.14159265358979;\n  \n  void main(){\n    vec4 glowCd=texture2D(glowTexture, vUv);\n    vec4 Cd=vec4(glowColor,1.0);\n    Cd.rgb*=(cos(glowCd.g*pi*freq+time.x*rate)*.5+.5)*(1.0-glowCd.b)*intensity+glowCd.b;\n    Cd.rgb*=glowCd.r*glowCd.a;\n    gl_FragColor=Cd;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  uniform vec2 time;\n  uniform float rate;\n  uniform float freq;\n  uniform float intensity;\n  uniform vec3 glowColor;\n  uniform sampler2D glowTexture;\n  varying vec2 vUv;\n  float pi=3.14159265358979;\n  \n  void main(){\n    vec4 glowCd=texture2D(glowTexture, vUv);\n    vec4 Cd=vec4(glowColor,1.0);\n    Cd.rgb*=(cos(glowCd.g*pi*freq+time.x*rate)*.5+.5)*(1.0-glowCd.b)*intensity+glowCd.b;\n    Cd.rgb*=glowCd.r*glowCd.a;\n    gl_FragColor=Cd;\n  }"},animTextureVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  varying vec2 vUv;\n  void main(){\n    vUv=uv;\n    vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n    gl_Position = projectionMatrix*modelViewPosition;\n  }"},clickableBevelFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D alphaMap;\n    uniform sampler2D cloudNoise;\n    uniform vec2 time;\n    uniform vec2 intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=vec4( 1.0 );\n      Cd.rgb= mix( vec3(.05,.1,.5), vec3(.3,.5,1.0), intensity.x);\n      \n      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec4 noiseCd=texture2D(cloudNoise,nUV);\n      noiseCd.xyz=noiseCd.xyz*2.0-1.0;\n      nUV=vUv+noiseCd.xy*.05;\n      \n      float alpha=texture2D(alphaMap,nUV).r;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=Cd.rgb*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color\n      alpha=1.0-(1.0-alpha)*(1.0-alpha);\n      alpha*=alpha;\n      Cd.a=alpha+alpha;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D alphaMap;\n    uniform sampler2D cloudNoise;\n    uniform vec2 time;\n    uniform vec2 intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=vec4( 1.0 );\n      Cd.rgb= mix( vec3(.05,.1,.5), vec3(.3,.5,1.0), intensity.x);\n      \n      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec4 noiseCd=texture2D(cloudNoise,nUV);\n      noiseCd.xyz=noiseCd.xyz*2.0-1.0;\n      nUV=vUv+noiseCd.xy*.05;\n      \n      float alpha=texture2D(alphaMap,nUV).r;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=Cd.rgb*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color\n      alpha=1.0-(1.0-alpha)*(1.0-alpha);\n      alpha*=alpha;\n      Cd.a=alpha+alpha;\n      gl_FragColor = Cd;\n    }"},clickableBevelVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec2 time;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main(){\n      vUv=uv+vec2(rate*time.x, 0.0);\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec2 time;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main(){\n      vUv=uv+vec2(rate*time.x, 0.0);\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }"},portalBaseFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform vec3 color;\n        uniform sampler2D alphaMap;\n        uniform sampler2D cloudNoise;\n        uniform vec2 intensity;\n        varying vec2 shiftUv;\n        varying vec2 wUv;\n        \n        #define TAU 6.28318530717958\n        void main() {\n            float suvLength=length(shiftUv)+.1;\n            vec2 suvSign=sign(shiftUv);\n            \n            vec2 rUv=sin( (suvLength+wUv*10.*shiftUv)*.5 );\n            rUv *= suvLength ;\n            \n            vec4 noiseCd=texture2D(cloudNoise,rUv);\n            vec2 aUv=wUv*(noiseCd.xy*.5+wUv);\n            \n            float alpha=texture2D(alphaMap,aUv).r;\n            \n            vec4 Cd=vec4( color*intensity.x*(1.0+alpha)*mix( noiseCd.rgb, vec3(1.0), alpha), 1.);\n            alpha*=max(0.0, alpha-noiseCd.r*noiseCd.g*noiseCd.b );\n            Cd.a=min(1.0, alpha);\n            \n            gl_FragColor = Cd;\n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform vec3 color;\n        uniform sampler2D alphaMap;\n        uniform sampler2D cloudNoise;\n        uniform vec2 intensity;\n        varying vec2 shiftUv;\n        varying vec2 wUv;\n        \n        #define TAU 6.28318530717958\n        void main() {\n            float suvLength=length(shiftUv)+.1;\n            vec2 suvSign=sign(shiftUv);\n            \n            vec2 rUv=sin( (suvLength+wUv*10.*shiftUv)*.5 );\n            rUv *= suvLength ;\n            \n            vec4 noiseCd=texture2D(cloudNoise,rUv);\n            vec2 aUv=wUv*(noiseCd.xy*.5+wUv);\n            \n            float alpha=texture2D(alphaMap,aUv).r;\n            \n            vec4 Cd=vec4( color*intensity.x*(1.0+alpha)*mix( noiseCd.rgb, vec3(1.0), alpha), 1.);\n            alpha*=max(0.0, alpha-noiseCd.r*noiseCd.g*noiseCd.b );\n            Cd.a=min(1.0, alpha);\n            \n            gl_FragColor = Cd;\n        }"},portalBaseVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform vec2 time;\n        uniform float rate;\n        varying vec2 shiftUv;\n        varying vec2 wUv;\n        \n        void main(){\n            shiftUv=(uv-.5);\n            \n            float t=time.x*rate;\n            vec2 rot=vec2( sin(t), cos(t) );\n            vec2 rotUV=vec2(0.0);\n            rotUV.x=rot.y*(uv.x-.5) + rot.x*(uv.y-.5);\n            rotUV.y=rot.y*(uv.y-.5) - rot.x*(uv.x-.5);\n            wUv=rotUV+.5;\n            \n            vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n            gl_Position = projectionMatrix*modelViewPosition;\n            \n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform vec2 time;\n        uniform float rate;\n        varying vec2 shiftUv;\n        varying vec2 wUv;\n        \n        void main(){\n            shiftUv=(uv-.5);\n            \n            float t=time.x*rate;\n            vec2 rot=vec2( sin(t), cos(t) );\n            vec2 rotUV=vec2(0.0);\n            rotUV.x=rot.y*(uv.x-.5) + rot.x*(uv.y-.5);\n            rotUV.y=rot.y*(uv.y-.5) - rot.x*(uv.x-.5);\n            wUv=rotUV+.5;\n            \n            vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n            gl_Position = projectionMatrix*modelViewPosition;\n            \n        }"}});var Md=Object.freeze({__proto__:null,itemBaseFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec3 color;\n    uniform sampler2D alphaMap;\n    uniform sampler2D cloudNoise;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=vec4( color, 1.0);\n      \n      \n      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec4 noiseCd=texture2D(cloudNoise,nUV);\n      noiseCd.xyz=noiseCd.xyz*2.0-1.0;\n      nUV=vUv+noiseCd.xy*.05;\n      \n      float alpha=texture2D(alphaMap,nUV).r;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=color*intensity*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color\n      alpha=1.0-(1.0-alpha)*(1.0-alpha);\n      alpha*=alpha;\n      Cd.a=alpha+alpha;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec3 color;\n    uniform sampler2D alphaMap;\n    uniform sampler2D cloudNoise;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=vec4( color, 1.0);\n      \n      \n      vec2 nUV=pos.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec4 noiseCd=texture2D(cloudNoise,nUV);\n      noiseCd.xyz=noiseCd.xyz*2.0-1.0;\n      nUV=vUv+noiseCd.xy*.05;\n      \n      float alpha=texture2D(alphaMap,nUV).r;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=color*intensity*(1.0+alpha);//mix( vec3(0.5,0.5,1.0), vec3(0.0,0.2,0.8), blender); // Center Color, Edge Color\n      alpha=1.0-(1.0-alpha)*(1.0-alpha);\n      alpha*=alpha;\n      Cd.a=alpha+alpha;\n      gl_FragColor = Cd;\n    }"},itemBaseVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main(){\n      vUv=uv+vec2(rate*time.x, 0.0);\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    \n    void main(){\n      vUv=uv+vec2(rate*time.x, 0.0);\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }"},itemFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec3 color;\n    uniform sampler2D alphaMap;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    uniform sampler2D cloudNoise;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    varying vec2 nUv;\n    \n    void main() {\n      vec4 Cd=vec4( color, 1.0);\n      float alpha=texture2D(alphaMap,vUv).r;\n      float noise=length(texture2D(cloudNoise,nUv).rgb)*.5;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=color*blender;\n      Cd.rgb*=intensity*alpha;\n      Cd.a=blender*alpha+noise*alpha;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec3 color;\n    uniform sampler2D alphaMap;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    uniform sampler2D cloudNoise;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    varying vec2 nUv;\n    \n    void main() {\n      vec4 Cd=vec4( color, 1.0);\n      float alpha=texture2D(alphaMap,vUv).r;\n      float noise=length(texture2D(cloudNoise,nUv).rgb)*.5;\n      float blender=(nDot*.5+.5);\n      Cd.rgb=color*blender;\n      Cd.rgb*=intensity*alpha;\n      Cd.a=blender*alpha+noise*alpha;\n      gl_FragColor = Cd;\n    }"},itemVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    varying vec2 nUv;\n    \n    void main(){\n      vUv=uv;\n      nUv=uv*.5+vec2(rate*time.x*-.1, 0.0);\n      nUv.x=sin(nUv.x)*.5+.5;\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      vec2 nUV=position.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec3 pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec2 time;\n    uniform float intensity;\n    uniform float rate;\n    varying vec3 pos;\n    varying float nDot;\n    varying vec2 vUv;\n    varying vec2 nUv;\n    \n    void main(){\n      vUv=uv;\n      nUv=uv*.5+vec2(rate*time.x*-.1, 0.0);\n      nUv.x=sin(nUv.x)*.5+.5;\n      vec3 camDir=normalize( (projectionMatrix*viewMatrix*vec4(0.0,0.0,-1.0,1.0)).xyz );\n      nDot=dot( normal, camDir );\n      \n      vec2 nUV=position.xy*.01+vec2(time.x*rate*.1, time.x*rate*.1);\n      vec3 pos=position;\n      vec4 modelViewPosition=modelViewMatrix * vec4(pos, 1.0);\n      gl_Position = projectionMatrix*modelViewPosition;\n      \n    }"},itemZoomFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D color;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform sampler2D cloudNoise;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=texture2D(color,vUv);\n      Cd.a=Cd.b;\n      Cd.rgb=vec3( Cd.rg*Cd.a, 0.0 );\n      Cd.rgb*=Cd.a* mix(.7, 1.0, gl_FrontFacing);\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D color;\n    uniform vec2 time;\n    uniform float intensity;\n    uniform sampler2D cloudNoise;\n    varying vec2 vUv;\n    \n    void main() {\n      vec4 Cd=texture2D(color,vUv);\n      Cd.a=Cd.b;\n      Cd.rgb=vec3( Cd.rg*Cd.a, 0.0 );\n      Cd.rgb*=Cd.a* mix(.7, 1.0, gl_FrontFacing);\n      gl_FragColor = Cd;\n    }"},pxlPrincipledFrag:function(e,t,i,n,r,s){let o=!1,a=1;e.hasOwnProperty("Specular")&&e.Specular>0&&(o=!0,a=e.Specular);let l=!1;e.PointColor&&(l=!0);let c=!0,h="1.0";e.hasOwnProperty("SurfaceNoise")&&(e.SurfaceNoise%1==0&&(h=e.SurfaceNoise+".0"),"0.0"==h&&(c=!1));let u="\n        ";if(t||(u+="uniform sampler2D dTexture;"),u+="\n    \n    uniform sampler2D noiseTexture;\n    uniform sampler2D detailTexture;\n        \n    uniform vec2 time;\n    uniform float cdMult;\n    uniform vec3 fogColor;\n    \n    varying vec2 vUv;\n    varying vec3 vCd;\n    varying vec3 vPos;\n    varying vec3 vLocalPos;\n    varying vec3 vN;\n    varying vec3 vLocalN;\n    varying vec3 vShading;\n    \n    varying float vFlicker;\n    \n    #define PI 3.14159265358979\n    \n    struct PointLight {\n      vec3 color;\n      float decay;\n      float distance;\n      vec3 position;\n    };\n    struct DirLight {\n      vec3 color;\n      vec3 direction;\n    };\n    ",n&&(u+="\n    #if NUM_POINT_LIGHTS > 0\n      uniform PointLight pointLights[NUM_POINT_LIGHTS];\n    #endif\n    #if NUM_DIR_LIGHTS > 0\n      uniform DirLight directionalLights[NUM_DIR_LIGHTS];\n    #endif\n      "),r&&(u+=`\n      \n      ${Ki.packing}\n      \n      #if NUM_POINT_LIGHT_SHADOWS > 0\n          uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n          varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n          struct PointLightShadow {\n              float shadowBias;\n              float shadowNormalBias;\n              float shadowRadius;\n              vec2 shadowMapSize;\n              float shadowCameraNear;\n              float shadowCameraFar;\n          };\n          uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n      #endif\n      float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n          return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n      }\n      vec2 cubeToUV( vec3 v, float texelSizeY ) {\n          vec3 absV = abs( v );\n          float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n          absV *= scaleToCube;\n          v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n          vec2 planar = v.xy;\n          float almostATexel = 1.5 * texelSizeY;\n          float almostOne = 1.0 - almostATexel;\n          if ( absV.z >= almostOne ) {\n              if ( v.z > 0.0 )\n                  planar.x = 4.0 - v.x;\n          } else if ( absV.x >= almostOne ) {\n              float signX = sign( v.x );\n              planar.x = v.z * signX + 2.0 * signX;\n          } else if ( absV.y >= almostOne ) {\n              float signY = sign( v.y );\n              planar.x = v.x + 2.0 * signY + 2.0;\n              planar.y = v.z * signY - 2.0;\n          }\n          return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n      }\n      float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n          vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n          vec3 lightToPosition = shadowCoord.xyz;\n          float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\n           dp += shadowBias;\n          vec3 bd3D = normalize( lightToPosition );\n          #if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n              vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n              return (\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n                  texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n              ) * ( .11111111111 ) * (1.0-dp);\n          #else\n              return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) * (1.0-dp);\n          #endif\n      }\n    \n      vec3 directionToLight( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar  ){\n          vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n          vec3 lightToPosition = shadowCoord.xyz;\n          float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\n          dp += shadowBias;\n          vec3 bd3D = normalize( lightToPosition );\n          vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n          return texture2D( pointShadowMap[1], cubeToUV( bd3D, texelSize.y )).rgb;\n      }\n      `),u+="\n    void main(){\n      ",l)u+="vec3 vertCd = vCd;";else if(t){let e=e=>e%1==0?e+".0":e+"";u+=`vec3 vertCd = vec3( ${e(t.r)}, ${e(t.g)}, ${e(t.b)} ) ;`}else u+="vec3 vertCd = texture2D(dTexture,vUv).rgb ;";u+="\n        \n        vec4 Cd=vec4( vertCd, 1.0 );\n        float specular = 0.0;\n        ",i&&(u+="\n          float depth = gl_FragCoord.z / gl_FragCoord.w *.0004;\n          Cd.rgb=  mix( Cd.rgb, fogColor, depth );\n          ");let d="",p="",m="";if(c&&("1.0"!=h&&(d="*"+h),u+="\n            float detailMult = (texture2D(detailTexture,vUv*4.0).r)*.5+.5;\n            ",p=`+detailMult * (shadowInf*.5+.5) ${d}`,m=`(detailMult+.5) ${d}`),n&&(u+="\n          #if NUM_POINT_LIGHTS > 0 || NUM_DIR_LIGHTS > 0\n            vec4 lights = vec4(0.0, 0.0, 0.0, 1.0);\n          #endif\n          \n          #if NUM_POINT_LIGHTS > 0\n            for(int i = 0; i < NUM_POINT_LIGHTS; i++) {\n                vec3 lightVector = normalize(vPos - pointLights[i].position);\n                vec3 lightInf= clamp(dot(-lightVector, vN), 0.0, 1.0) * pointLights[i].color;\n                //lightInf = mix( lightInf, 1.0-(1.0-lightInf)*(1.0-lightInf), .2);\n                float distFalloff =  1.0-min(1.0, length(vPos - pointLights[i].position) * pointLights[i].decay*.008 );\n                lightInf *=  distFalloff;\n                lights.rgb += lightInf;\n                ",o&&(u+="\n                  distFalloff = (dot(vN, normalize(-vPos)) )*distFalloff;\n                  specular += distFalloff;\n                  "),u+="\n            }\n          #endif\n            \n          #if NUM_DIR_LIGHTS > 0\n            for(int i = 0; i < NUM_DIR_LIGHTS; i++) {\n                vec3 lightInf= max(0.0, dot(directionalLights[i].direction, vN)*.65+.35) * directionalLights[i].color;\n                lights.rgb += lightInf;\n            }\n          #endif\n            \n            \n          #if NUM_POINT_LIGHTS > 0 || NUM_DIR_LIGHTS > 0\n            Cd.rgb *= lights.rgb;\n          #endif\n          ",o&&(u+=`\n            Cd.rgb += vertCd * specular * ${a};\n            `)),r){u+="\n          #if NUM_POINT_LIGHT_SHADOWS > 0\n            \n            float shadowInf = 0.0;\n            float detailInf = 0.0;\n            float lShadow = 0.0;\n            int i = 0;\n            ";for(let e=0;e<s;++e)u+=`\n                i=${e};\n                lShadow = getPointShadow( pointShadowMap[${e}], pointLightShadows[i].shadowMapSize, pointLightShadows[i].shadowBias*.1, pointLightShadows[i].shadowRadius*.5, vPointShadowCoord[i], pointLightShadows[i].shadowCameraNear, pointLightShadows[i].shadowCameraFar );\n                shadowInf = max( lShadow, shadowInf);\n                `;u+=`\n            shadowInf = shadowInf;//*.75+.25;\n            Cd.rgb*=shadowInf ${p} ;\n            `,c&&(u+=`\n              #else\n                Cd.rgb*=${m};\n              `),u+="\n          #endif\n          "}else c&&(u+=`\n            Cd.rgb*=${m};\n            `);return u+="\n        Cd*=cdMult;\n        gl_FragColor=Cd;\n    }",u},pxlPrincipledVert:function(e=!1){let t="\n    attribute vec3 color;\n    attribute vec3 shading;\n\n    varying float vFlicker;\n    varying vec2 vUv;\n    varying vec3 vCd;\n    varying vec3 vPos;\n    varying vec3 vLocalPos;\n    varying vec3 vN;\n    varying vec3 vLocalN;\n    varying vec3 vShading;\n    ";return e&&(t+=`\n        ${Ki.common}\n        ${Ki.shadowmap_pars_vertex}\n      `),t+="\n    \n    void main(){\n        vUv=uv;\n        \n        vShading=shading;\n        \n        vCd=color;\n        \n        vec3 transformed = vec3( position );\n        vec3 objectNormal = vec3( normal );\n        vec3 transformedNormal = objectNormal;\n        \n        \n        vLocalPos = position;\n        vN = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n        vLocalN = ( modelMatrix * vec4(normal, 0.0)).xyz;\n        vec4 mvPos=modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n        vPos = mvPos.xyz;\n        \n        ",e&&(t+=`\n            ${Ki.worldpos_vertex}\n            ${Ki.shadowmap_vertex}\n          `),t+="\n    }",t}});var Sd={animated:_d,core:wd,objects:Md,particles:Object.freeze({__proto__:null,dustFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    varying float vAlpha;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha; // *vScalar;\n        vec4 Cd=vec4( dustCd.rgb, alpha );\n\n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    varying float vAlpha;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha; // *vScalar;\n        vec4 Cd=vec4( dustCd.rgb, alpha );\n\n        gl_FragColor=Cd;\n    }"},dustVert:function(e,t=120){let i="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return i+="\n                \n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float rate;\n    uniform vec2 pointScale;\n    uniform vec3 positionOffset;\n    uniform vec2 windDir;\n  ",e>0&&(i+=`uniform vec3[${e}] lightPos;`),i+=`\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    varying float vAlpha;\n    \n    #define PROX ${t.toFixed(3)}\n    #define PROX_INV 1.0/${(1.8*t).toFixed(3)}\n    \n    #define LIGHT_COUNT ${e}\n    \n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n    \n    \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        float t=time.x*rate;\n        \n        vec3 pOff=seeds.xyz * vec3(PROX);\n        \n        // Loop point positions based on camera location\n        float yFract=fract(t+seeds.x);\n        pOff.y+=cameraPosition.y ; \n        pOff.x+=time.x*windDir.x; \n        pOff.z+=time.x*windDir.y; \n        vec3 pos= pOff ;\n        \n        vec3 noiseCd=texture2D(noiseTexture, sin(pos.xz*.05+seeds.xz+time.x*.1)*.5+.5 ).rgb-.5;\n        \n        pos.y = (pos.y-.1)*.45;\n        pos.y+=sin(seeds.x+seeds.z+noiseCd.r*noiseCd.g+noiseCd.b+time.x*.2)*2.;//+noiseCd.r*noiseCd.g*noiseCd.b*20.;\n\n        pos.xz+=(noiseCd.rg*noiseCd.b)*((seeds.w+.75)*4.);\n        vec2 camXZ=cameraPosition.xz;\n        pos.xz= mod( pos.xz-camXZ, PROX) + camXZ - PROX*.5;\n        \n        float pScalar = max( 0., (1.-length(pos-cameraPosition )*PROX_INV)  );\n        float aMult = min(1.0, pScalar*3.0);\n        vAlpha = (seeds.x*.5+.7) * aMult;\n\n  `,e>1?i+="\n          float lightInf = 1.0;\n\n          for(int i = 0; i < LIGHT_COUNT; i++) {\n              vec3 lightVector = normalize(pos - lightPos[i]);\n              lightInf = min(lightInf, length(pos - lightPos[i]) *.05 );\n          }\n          vAlpha*=(1.0-lightInf)*.8+.2;\n    ":1==e&&(i+="\n        vec3 lightVector = normalize(pos - lightPos[0]);\n        float lightInf = length(pos - lightPos[0]) *.02;\n        vAlpha*=(1.0-lightInf)*.8+.2;\n    "),i+="\n        vScalar = pScalar ;\n        //float pScale = pointScale.x * ((seeds.w+.75)*.5) * pScalar + 1.0;\n        float pScale = pointScale.x * (seeds.w*.5+.5)*pScalar + 1.0;\n        pScale *= step( .5, atlas.x )*.5+1.;\n        //pScale = 10.0;\n       \n        gl_PointSize = pScale;\n        \n        pos+=positionOffset;\n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n    }",i},emberWispsFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="        \n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec3 vCd;\n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha;\n        \n        //dustCd.rgb = 1.0 - (1.0 - dustCd.rgb ) * vBrightness;\n        dustCd.rgb *= vBrightness;\n        \n        vec4 Cd=vec4( dustCd.rgb * vCd * vBrightness, alpha );\n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n                \n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec3 vCd;\n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha;\n        \n        //dustCd.rgb = 1.0 - (1.0 - dustCd.rgb ) * vBrightness;\n        dustCd.rgb *= vBrightness;\n        \n        vec4 Cd=vec4( dustCd.rgb * vCd * vBrightness, alpha );\n        gl_FragColor=Cd;\n    }"},emberWispsVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        \n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float rate;\n    uniform vec2 pointScale;\n    uniform vec3 sliders;\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec3 vCd;\n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    #define PROX 60.0\n    #define LAND 10.0\n    \n    const vec2 windForce = vec2(-0.135, 0.15);\n    \n    const vec3 earlyCd = vec3( 1.0, 0.7, .1 );\n    const vec3 oldCd = vec3( 0.634, 0.50, 0.20 );\n    const float emberSpread = 15.0;\n    const float emberFadeDistance = 0.05;\n    const float baseSpeed = 0.47;\n    \n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n    \n    \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) * vec3(PROX);\n        \n        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);\n        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;\n        \n        float rateShift = (baseSpeed*(seeds.x*.4+.6));\n        float t=time.x*rate*rateShift;\n        float shiftY= mod( t+t*seeds.x+seeds.z*8.0+noiseCd.r*10.20*(seeds.y*2.0-1.0)+noiseCd.b+(-seeds.x+seeds.y)*4.0, 8.0);\n        float life = 1.0-max(0.0,abs(shiftY-seeds.x*.1)*(1.0-(seeds.x*1.0)) );\n        life = 1.0-((shiftY*.001-seeds.x*.2) );\n        \n        pOff.y=shiftY*seeds.y;\n        \n        pOff.y=(pOff.y)+shiftY; \n        vec3 pos= pOff ;\n        \n\n        pos.xz=(noiseCd.rg*noiseCd.r)*(seeds.x)*emberSpread*(life*seeds.zy*(seeds.w*4.0-2.)) * 1.9;\n        \n        float yPush = ( life * (life*.5+.5))  * min(1.0,pos.y*.12) * 5.8;\n        pos.xz += windForce * yPush * pos.y;\n        pos.y += yPush;\n        \n        \n        \n        float pScalar = max( 0., (1.-length(pos-cameraPosition )*0.017)  );\n        float aMult = min(1.0, pScalar*3.0);\n        vAlpha = (seeds.x*.15+.7) * aMult;\n\n        \n        vAlpha=max(0.0, life*life-seeds.z-seeds.z);\n        float distMult = ( length( pos )*emberFadeDistance );\n        distMult = 1.0 - ( distMult * distMult );\n        vAlpha *= distMult;\n        \n        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.3+vec2(0.0,pos.y)).rgb*2.0 ;\n        pos.xz+=doubleCd.rb ;\n        \n        \n        float pScale = pointScale.x * seeds.w * pScalar + 2.0;\n        \n        gl_PointSize = pScale;\n        \n        pos += modelMatrix[3].xyz - vec3(1.0, 0.50, 0.2);\n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n        \n        float cdAge = clamp( 1.0 - life, 0.0, 1.0);\n    \n    //earlyCd, oldCd\n        vCd = mix( earlyCd, oldCd, cdAge )  ;\n        vBrightness = 1.45;\n        \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        \n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float rate;\n    uniform vec2 pointScale;\n    uniform vec3 sliders;\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec3 vCd;\n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    #define PROX 60.0\n    #define LAND 10.0\n    \n    const vec2 windForce = vec2(-0.135, 0.15);\n    \n    const vec3 earlyCd = vec3( 1.0, 0.7, .1 );\n    const vec3 oldCd = vec3( 0.634, 0.50, 0.20 );\n    const float emberSpread = 15.0;\n    const float emberFadeDistance = 0.05;\n    const float baseSpeed = 0.47;\n    \n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n    \n    \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) * vec3(PROX);\n        \n        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);\n        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;\n        \n        float rateShift = (baseSpeed*(seeds.x*.4+.6));\n        float t=time.x*rate*rateShift;\n        float shiftY= mod( t+t*seeds.x+seeds.z*8.0+noiseCd.r*10.20*(seeds.y*2.0-1.0)+noiseCd.b+(-seeds.x+seeds.y)*4.0, 8.0);\n        float life = 1.0-max(0.0,abs(shiftY-seeds.x*.1)*(1.0-(seeds.x*1.0)) );\n        life = 1.0-((shiftY*.001-seeds.x*.2) );\n        \n        pOff.y=shiftY*seeds.y;\n        \n        pOff.y=(pOff.y)+shiftY; \n        vec3 pos= pOff ;\n        \n\n        pos.xz=(noiseCd.rg*noiseCd.r)*(seeds.x)*emberSpread*(life*seeds.zy*(seeds.w*4.0-2.)) * 1.9;\n        \n        float yPush = ( life * (life*.5+.5))  * min(1.0,pos.y*.12) * 5.8;\n        pos.xz += windForce * yPush * pos.y;\n        pos.y += yPush;\n        \n        \n        \n        float pScalar = max( 0., (1.-length(pos-cameraPosition )*0.017)  );\n        float aMult = min(1.0, pScalar*3.0);\n        vAlpha = (seeds.x*.15+.7) * aMult;\n\n        \n        vAlpha=max(0.0, life*life-seeds.z-seeds.z);\n        float distMult = ( length( pos )*emberFadeDistance );\n        distMult = 1.0 - ( distMult * distMult );\n        vAlpha *= distMult;\n        \n        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.3+vec2(0.0,pos.y)).rgb*2.0 ;\n        pos.xz+=doubleCd.rb ;\n        \n        \n        float pScale = pointScale.x * seeds.w * pScalar + 2.0;\n        \n        gl_PointSize = pScale;\n        \n        pos += modelMatrix[3].xyz - vec3(1.0, 0.50, 0.2);\n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n        \n        float cdAge = clamp( 1.0 - life, 0.0, 1.0);\n    \n    //earlyCd, oldCd\n        vCd = mix( earlyCd, oldCd, cdAge )  ;\n        vBrightness = 1.45;\n        \n    }"},smokeFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        \n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha;\n        vec4 Cd=vec4( dustCd.rgb, alpha );\n\n        Cd.rgb *= vec3(vBrightness);\n        \n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        \n    uniform sampler2D atlasTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = (uv-.5)*.85;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        vec4 dustCd=texture2D(atlasTexture,rotUV);\n        float alpha=dustCd.a*vAlpha;\n        vec4 Cd=vec4( dustCd.rgb, alpha );\n\n        Cd.rgb *= vec3(vBrightness);\n        \n        gl_FragColor=Cd;\n    }"},smokeVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+=" \n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float rate;\n    uniform vec2 pointScale;\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    \n    #define PROX 6.0\n    \n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n     \n    \n    // Attempted de-Magic-num-ification\n    float baseSpread = 110.0;\n    float innerBulster = -0.110;\n    float smokeDensity = 0.60;\n        \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) ;\n        \n        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);\n        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;\n        \n        float t=time.x*rate;\n        float shiftY= mod( t+t*seeds.x+seeds.z*24.0+noiseCd.r+noiseCd.b+(seeds.x+seeds.y)*2.0, 14.0);\n        float life = max(0.0,(shiftY-seeds.x)*0.07142857142857142)*.9+.2;\n        float alphaMult = (1.0-(1.0-life)*(1.0-life))*smokeDensity;\n        \n        pOff.y=shiftY*seeds.y*life - (1.0-life);\n        \n        pOff.y=(pOff.y*.5)+shiftY; \n        vec3 pos= pOff ;\n        \n\n        \n        // Magic numbers!  Boo!!\n        float tightenTip = max(0.0,life-.63)*1.3;\n        tightenTip = 1.0 - (1.0-tightenTip) * (1.0-tightenTip);\n        //tightenTip *= tightenTip;\n        float tightenBase = max(0.0, (1.0-life)*innerBulster);\n        float tightenMid = max(0.0, 0.60 - tightenTip - tightenBase - seeds.x*.2);\n        \n        baseSpread = baseSpread*tightenBase + baseSpread*tightenMid + baseSpread*tightenTip ;\n        \n        pos.xz=(noiseCd.rg*noiseCd.b)*seeds.w*baseSpread*(life*(seeds.zy*.6));\n        \n        // Wind -- Forces\n        //   Magic numbers, yarb!\n        float windInf = life * life * (life*.5+.5);\n        vec2 windDir = vec2( windInf*9.7, windInf * 8.4 );\n        pos.xz += windDir;\n        \n        \n        // Alpha with cam distance inf\n        float pScalar = 1.0-min( 1.0, (length(pos-cameraPosition )*0.004) );\n        pScalar=1.0-(pScalar*pScalar);\n        float aMult = min(1.0, pScalar*2.0);\n        vAlpha = (seeds.x*.5+.7) * aMult;\n\n        \n        // Alpha from gettin' old\n        vAlpha=(1.0-life)*min(1.0,alphaMult);\n        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.5+vec2(seeds.y,pos.y)).rgb ;\n        pos.xz=(pos.xz*seeds.xy+doubleCd.rb*10.0)*min(1.0,life+seeds.y);\n        \n        \n        // Draw size, particle scale\n        pScalar = 1.0-(1.0-pScalar)*.75*(1.0-pScalar);\n        float pScale = pointScale.x * seeds.w * 0.006 * pScalar + (200.0+125.0*life*pScalar)*(1.0-pScalar);\n        pScale += 150.0*(clamp(-(pScalar-.45)*10.0,0.0,1.0));\n\n        gl_PointSize = pScale;\n        \n        // Brightness multiplier\n        vBrightness = 1.0-tightenMid*.81 - tightenTip + tightenBase;\n        float originDelta = length(pos)*(-innerBulster);\n        vBrightness *= max(0.0, 1.0-originDelta * life * 0.807);\n        \n        \n        // Add Particle System position\n        pos += modelMatrix[3].xyz;\n        \n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n        \n        \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n         \n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float rate;\n    uniform vec2 pointScale;\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vAlpha;\n    varying float vBrightness;\n    \n    \n    #define PROX 6.0\n    \n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n     \n    \n    // Attempted de-Magic-num-ification\n    float baseSpread = 110.0;\n    float innerBulster = -0.110;\n    float smokeDensity = 0.60;\n        \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        vec3 pOff=vec3(seeds.z, seeds.y, seeds.w) ;\n        \n        vec2 sinUV=abs(sin(pOff.xz*.5+seeds.zw+time.x*.1)*.5+.5);\n        vec3 noiseCd=texture2D(noiseTexture, sinUV ).rgb*4.5 + 0.50;\n        \n        float t=time.x*rate;\n        float shiftY= mod( t+t*seeds.x+seeds.z*24.0+noiseCd.r+noiseCd.b+(seeds.x+seeds.y)*2.0, 14.0);\n        float life = max(0.0,(shiftY-seeds.x)*0.07142857142857142)*.9+.2;\n        float alphaMult = (1.0-(1.0-life)*(1.0-life))*smokeDensity;\n        \n        pOff.y=shiftY*seeds.y*life - (1.0-life);\n        \n        pOff.y=(pOff.y*.5)+shiftY; \n        vec3 pos= pOff ;\n        \n\n        \n        // Magic numbers!  Boo!!\n        float tightenTip = max(0.0,life-.63)*1.3;\n        tightenTip = 1.0 - (1.0-tightenTip) * (1.0-tightenTip);\n        //tightenTip *= tightenTip;\n        float tightenBase = max(0.0, (1.0-life)*innerBulster);\n        float tightenMid = max(0.0, 0.60 - tightenTip - tightenBase - seeds.x*.2);\n        \n        baseSpread = baseSpread*tightenBase + baseSpread*tightenMid + baseSpread*tightenTip ;\n        \n        pos.xz=(noiseCd.rg*noiseCd.b)*seeds.w*baseSpread*(life*(seeds.zy*.6));\n        \n        // Wind -- Forces\n        //   Magic numbers, yarb!\n        float windInf = life * life * (life*.5+.5);\n        vec2 windDir = vec2( windInf*9.7, windInf * 8.4 );\n        pos.xz += windDir;\n        \n        \n        // Alpha with cam distance inf\n        float pScalar = 1.0-min( 1.0, (length(pos-cameraPosition )*0.004) );\n        pScalar=1.0-(pScalar*pScalar);\n        float aMult = min(1.0, pScalar*2.0);\n        vAlpha = (seeds.x*.5+.7) * aMult;\n\n        \n        // Alpha from gettin' old\n        vAlpha=(1.0-life)*min(1.0,alphaMult);\n        vec3 doubleCd=texture2D(noiseTexture, sinUV+pos.xz*.5+vec2(seeds.y,pos.y)).rgb ;\n        pos.xz=(pos.xz*seeds.xy+doubleCd.rb*10.0)*min(1.0,life+seeds.y);\n        \n        \n        // Draw size, particle scale\n        pScalar = 1.0-(1.0-pScalar)*.75*(1.0-pScalar);\n        float pScale = pointScale.x * seeds.w * 0.006 * pScalar + (200.0+125.0*life*pScalar)*(1.0-pScalar);\n        pScale += 150.0*(clamp(-(pScalar-.45)*10.0,0.0,1.0));\n\n        gl_PointSize = pScale;\n        \n        // Brightness multiplier\n        vBrightness = 1.0-tightenMid*.81 - tightenTip + tightenBase;\n        float originDelta = length(pos)*(-innerBulster);\n        vBrightness *= max(0.0, 1.0-originDelta * life * 0.807);\n        \n        \n        // Add Particle System position\n        pos += modelMatrix[3].xyz;\n        \n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n        \n        \n    }"},snowFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D snowTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = uv-.5;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        float alpha=texture2D(snowTexture,rotUV).r * vScalar;\n        vec4 Cd=vec4( vec3(1.), alpha );\n\n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D snowTexture;\n    uniform vec2 time;\n    uniform float rate;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    \n    void main(){\n        vec2 uv=gl_PointCoord;\n\n        vec2 pos = uv-.5;\n\n        vec2 rotUV;\n        rotUV.x = vRot.y * pos.x - vRot.x * pos.y;\n        rotUV.y = vRot.x * pos.x + vRot.y * pos.y;\n        rotUV=(rotUV+.5)*.25+vAtlas;\n        \n        float alpha=texture2D(snowTexture,rotUV).r * vScalar;\n        vec4 Cd=vec4( vec3(1.), alpha );\n\n        gl_FragColor=Cd;\n    }"},snowVert:function(e=!1){let t="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return t+="\n    uniform vec2 time;\n    uniform float rate;\n    uniform float pointScale;\n    \n    attribute vec4 seeds;\n    attribute vec2 atlas;\n    \n    varying vec2 vAtlas;\n    varying vec2 vRot;\n    varying float vScalar;\n    \n    #define PROX 1000.0\n    #define LAND 50.0\n    \n    float colDetect( vec2 pos, vec2 pt, vec2 n1, vec2 n2 ){\n        vec2 ref=pos-pt;\n        float ret = step( dot( ref, n1 ), 0.0 );\n        ret *= step( dot( ref, n2 ), 0.0 );\n        \n        return ret;\n    }\n    \n    \n    void main(){\n        vAtlas=atlas;\n        \n        float rot=seeds.z+time.x*(seeds.z*2.);\n        vRot=vec2( sin(rot), cos(rot) );\n        \n        float t=time.x*rate;\n        \n        vec3 pOff=vec3( seeds.x, 0, seeds.y)* vec3(PROX);\n        \n        // Loop point positions based on camera location\n        float yFract=fract(t+seeds.z);\n        pOff.y=PROX-yFract*(PROX+LAND); \n        vec3 pos= pOff ;\n        vec2 camXZ=cameraPosition.xz;\n        pos.xz= mod( pos.xz-camXZ, PROX) + camXZ - PROX*.5;\n        \n        \n        // Get some roof tops working\n        //   Using opposing points and 2 normals in xz space to determin y floor position\n        // Find rooves from xz pos + dot products\n        float floor=0.0;\n    ",!e&&(t+="\n        // -- --\n        vec2 lp1=vec2( -186.0, -1002.0 ); // Point 1\n        vec2 l1n1=vec2(-.1,1.); // Normal 1\n        vec2 l1n2=vec2(1.,-.1); // Normal 2\n        vec2 lp2=vec2( -1101.0, -1720.0 ); // Point 2\n        vec2 l2n1=vec2(.1,-1.1);\n        vec2 l2n2=vec2(-1.,.1);\n        floor = max( floor, 170.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // Lobby roof\n\n        lp1=vec2( -217.0, 786.0 ); // Point 1\n        l1n1=vec2(.2,-1.); // Normal 1\n        l1n2=vec2(1.,.1); // Normal 2\n        lp2=vec2( -940.0, 1293.0 ); // Point 2\n        l2n1=vec2(-.2,1.);\n        l2n2=vec2(-1.,-.1);\n        floor = max( floor, 500.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // sunflower roof\n\n        lp1=vec2( 204.028, 56.7629 ); // Point 1\n        l1n1=vec2( 0.152344, -0.988327 ); // Normal 1\n        l1n2=vec2( -0.999862, 0.0165819 ); // Normal 2\n        lp2=vec2( 755.264, 754.843 ); // Point 2\n        l2n1=vec2( -0.160366, 0.987058 );\n        l2n2=vec2( 0.999849, 0.0173488 );\n        floor = max( floor, 150.0*colDetect( pos.xz, lp1,l1n1,l1n2 ) * colDetect( pos.xz, lp2,l2n1,l2n2 ) ); // sunflower roof\n        "),t+="  \n        // Prevent snow drifting after hitting the ground\n        float yLimit=max( floor, pos.y ) * .08 * seeds.z;\n        pos.xz+=vec2( sin(pos.x+yLimit*seeds.x), sin(pos.z+pos.x+yLimit*seeds.y) )*10.; // Snow sway in the sky\n        \n        // Shift Y position per camera height\n        pos.y+=cameraPosition.y-yFract*(cameraPosition.y); \n        pos.y=max( floor+1.5, pos.y );\n        \n        float melt=min(1.0, (pOff.y+LAND-floor)*.02);\n        float pScalar = max( 0., (1.-length(pos-cameraPosition )*0.001) * melt );\n        \n        vScalar = pScalar;\n        float pScale = pointScale * seeds.w * pScalar ;\n        gl_PointSize = pScale;\n        \n        vec4 mvPos=viewMatrix * vec4(pos, 1.0);\n        gl_Position = projectionMatrix*mvPos;\n    }",t}}),rendering:Object.freeze({__proto__:null,boxAntiAliasPass:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform vec2 resUV;\n    uniform float ratio;\n    uniform vec3 gamma;\n    varying vec2 vUv;\n\n        #define AADIV 0.1\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;\n            \n            float dist = 1.0;\n      vec2 baseUV=vUv;\n      const int runCount=8;\n      vec2 runDir[runCount];\n      runDir[0]=vec2(1.0, 0.0);\n      runDir[1]=vec2(1.0, 1.0);\n      runDir[2]=vec2(0.0, 1.0);\n      runDir[3]=vec2(-1.0, 1.0);\n      runDir[4]=vec2(-1.0, 0.0);\n      runDir[5]=vec2(-1.0, -1.0);\n      runDir[6]=vec2(0.0, -1.0);\n      runDir[7]=vec2(1.0, -1.0);\n      vec2 curUV;\n      vec3 curCd;\n      for(int s=0; s<runCount; ++s){\n        curUV = baseUV+runDir[s]*(resUV);//*dist);\n        curCd = texture2D(tDiffuse,curUV).rgb;\n                Cd.rgb+=curCd;\n      }\n      Cd.rgb=Cd.rgb*AADIV;\n      Cd.a=1.0;\n      \n      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));\n      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform vec2 resUV;\n    uniform float ratio;\n    uniform vec3 gamma;\n    varying vec2 vUv;\n\n        #define AADIV 0.1\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;\n            \n            float dist = 1.0;\n      vec2 baseUV=vUv;\n      const int runCount=8;\n      vec2 runDir[runCount];\n      runDir[0]=vec2(1.0, 0.0);\n      runDir[1]=vec2(1.0, 1.0);\n      runDir[2]=vec2(0.0, 1.0);\n      runDir[3]=vec2(-1.0, 1.0);\n      runDir[4]=vec2(-1.0, 0.0);\n      runDir[5]=vec2(-1.0, -1.0);\n      runDir[6]=vec2(0.0, -1.0);\n      runDir[7]=vec2(1.0, -1.0);\n      vec2 curUV;\n      vec3 curCd;\n      for(int s=0; s<runCount; ++s){\n        curUV = baseUV+runDir[s]*(resUV);//*dist);\n        curCd = texture2D(tDiffuse,curUV).rgb;\n                Cd.rgb+=curCd;\n      }\n      Cd.rgb=Cd.rgb*AADIV;\n      Cd.a=1.0;\n      \n      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));\n      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;\n      gl_FragColor = Cd;\n    }"},chroAberPostProcess:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D chroAberUVTexture;\n    uniform vec2 ratio;\n    uniform vec2 warpMult;\n        uniform vec2 lKing;\n    varying vec2 vUv;\n\n    void main() {\n      // I don't know, sRGB to Linear. Keeping it Linear doesn't work, PNG encoding to blame\n      vec4 caCd= texture2D( chroAberUVTexture, vUv )-vec4(vec3(0.7294118), 0.5019608);\n      //caCd*=mix( .025, .018, length(caCd.rg)*4.0 );\n      caCd*=mix( lKing.x, lKing.y, length(caCd.rg)*4.0 )+warpMult.x;\n      \n      vec2 bUv=vUv+caCd.rg;\n      vec2 rUv=vUv+caCd.ba;\n      vec2 gUv=vUv+(caCd.rg+caCd.ba);\n      vec4 rCd=texture2D( tDiffuse, rUv );\n      vec4 Cd=texture2D( tDiffuse, gUv );\n      vec4 bCd=texture2D( tDiffuse, bUv );\n      \n      Cd.rgb=vec3( rCd.r, Cd.g, bCd.b );\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D chroAberUVTexture;\n    uniform vec2 ratio;\n    uniform vec2 warpMult;\n        uniform vec2 lKing;\n    varying vec2 vUv;\n\n    void main() {\n      // I don't know, sRGB to Linear. Keeping it Linear doesn't work, PNG encoding to blame\n      vec4 caCd= texture2D( chroAberUVTexture, vUv )-vec4(vec3(0.7294118), 0.5019608);\n      //caCd*=mix( .025, .018, length(caCd.rg)*4.0 );\n      caCd*=mix( lKing.x, lKing.y, length(caCd.rg)*4.0 )+warpMult.x;\n      \n      vec2 bUv=vUv+caCd.rg;\n      vec2 rUv=vUv+caCd.ba;\n      vec2 gUv=vUv+(caCd.rg+caCd.ba);\n      vec4 rCd=texture2D( tDiffuse, rUv );\n      vec4 Cd=texture2D( tDiffuse, gUv );\n      vec4 bCd=texture2D( tDiffuse, bUv );\n      \n      Cd.rgb=vec3( rCd.r, Cd.g, bCd.b );\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},compLayersPostProcess:function(){let e="";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D mtDiffuse;\n    uniform sampler2D sceneDepth;\n    uniform sampler2D noiseTexture;\n    uniform float exposure;\n    uniform vec2 camRotPitch;\n    uniform vec2 time;\n    varying vec2 vUv;\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*exposure;\n      vec4 mBlurCd=texture2D(mtDiffuse,vUv)*exposure;\n      vec4 depth=texture2D(sceneDepth,vUv);\n      \n  ////////////////////////\n  /*\n      vec2 uv=vUv;\n      float pi=3.14159265358979;\n      float t=-time.x*.007;\n      float pitch=camRotPitch.y;//depth.w*2.0-1.0;\n      float yaw=camRotPitch.x;\n      \n      float distMult=depth.x*2.0;\n      vec2 noiseUV=vec2(fract(uv.x*distMult+t+yaw), fract(uv.y*distMult+pitch));\n      vec3 noiseCd=texture2D(noiseTexture,noiseUV).rgb;\n      noiseUV=vec2(fract(uv.x*distMult+t*.5+yaw), fract(uv.y*.5*distMult+t*.25+pitch));\n      noiseCd.g=texture2D(noiseTexture,noiseUV).g;\n      noiseUV=vec2(fract(uv.x*.8*distMult+t*1.3+yaw), fract(uv.y*.3*distMult+t*.5+ pitch + depth.x*2.0));\n      noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n      float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;\n      mult*=max(0.0, 1.0-depth.x) + (1.0-depth.z*.6);\n      \n      float bg=length(depth.rgb)<.02 ? 0.0 : 1.0;\n      float bval=length(bloomCd.rgb);\n      mult= mult*(bg+bval) ;//*(1.0-depth.z);\n      Cd.rgb= mix( Cd.rgb, vec3(mult*.2), mult );\n      */\n      \n      Cd.rgb+=mBlurCd.rgb;\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    uniform sampler2D tDiffuse;\n    uniform sampler2D mtDiffuse;\n    uniform sampler2D sceneDepth;\n    uniform sampler2D noiseTexture;\n    uniform float exposure;\n    uniform vec2 camRotPitch;\n    uniform vec2 time;\n    varying vec2 vUv;\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*exposure;\n      vec4 mBlurCd=texture2D(mtDiffuse,vUv)*exposure;\n      vec4 depth=texture2D(sceneDepth,vUv);\n      \n  ////////////////////////\n  /*\n      vec2 uv=vUv;\n      float pi=3.14159265358979;\n      float t=-time.x*.007;\n      float pitch=camRotPitch.y;//depth.w*2.0-1.0;\n      float yaw=camRotPitch.x;\n      \n      float distMult=depth.x*2.0;\n      vec2 noiseUV=vec2(fract(uv.x*distMult+t+yaw), fract(uv.y*distMult+pitch));\n      vec3 noiseCd=texture2D(noiseTexture,noiseUV).rgb;\n      noiseUV=vec2(fract(uv.x*distMult+t*.5+yaw), fract(uv.y*.5*distMult+t*.25+pitch));\n      noiseCd.g=texture2D(noiseTexture,noiseUV).g;\n      noiseUV=vec2(fract(uv.x*.8*distMult+t*1.3+yaw), fract(uv.y*.3*distMult+t*.5+ pitch + depth.x*2.0));\n      noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n      float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;\n      mult*=max(0.0, 1.0-depth.x) + (1.0-depth.z*.6);\n      \n      float bg=length(depth.rgb)<.02 ? 0.0 : 1.0;\n      float bval=length(bloomCd.rgb);\n      mult= mult*(bg+bval) ;//*(1.0-depth.z);\n      Cd.rgb= mix( Cd.rgb, vec3(mult*.2), mult );\n      */\n      \n      Cd.rgb+=mBlurCd.rgb;\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},crossAntiAliasPass:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform vec2 resUV;\n    uniform float ratio;\n    uniform vec3 gamma;\n    varying vec2 vUv;\n\n        #define AADIV 0.16666666666666666\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;\n            \n            float dist = 1.0;\n      vec2 baseUV=vUv;\n      const int runCount=4;\n      vec2 runDir[runCount];\n      runDir[0]=vec2(1.0, 1.0);\n      runDir[1]=vec2(-1.0, 1.0);\n      runDir[2]=vec2(-1.0, -1.0);\n      runDir[3]=vec2(1.0, -1.0);\n      vec2 curUV;\n      vec3 curCd;\n      for(int s=0; s<runCount; ++s){\n        curUV = baseUV+runDir[s]*(resUV);//*dist);\n        curCd = texture2D(tDiffuse,curUV).rgb;\n                Cd.rgb+=curCd;\n      }\n      Cd.rgb=Cd.rgb*AADIV;\n      Cd.a=1.0;\n      \n      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));\n      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform vec2 resUV;\n    uniform float ratio;\n    uniform vec3 gamma;\n    varying vec2 vUv;\n\n        #define AADIV 0.16666666666666666\n\n    void main() {\n      vec4 Cd=texture2D(tDiffuse,vUv)*2.0;\n            \n            float dist = 1.0;\n      vec2 baseUV=vUv;\n      const int runCount=4;\n      vec2 runDir[runCount];\n      runDir[0]=vec2(1.0, 1.0);\n      runDir[1]=vec2(-1.0, 1.0);\n      runDir[2]=vec2(-1.0, -1.0);\n      runDir[3]=vec2(1.0, -1.0);\n      vec2 curUV;\n      vec3 curCd;\n      for(int s=0; s<runCount; ++s){\n        curUV = baseUV+runDir[s]*(resUV);//*dist);\n        curCd = texture2D(tDiffuse,curUV).rgb;\n                Cd.rgb+=curCd;\n      }\n      Cd.rgb=Cd.rgb*AADIV;\n      Cd.a=1.0;\n      \n      //Cd.rgb = pow(Cd.rgb, vec3(gamma.x));\n      Cd.rgb = vec3(1.0)-(vec3(1.0)-Cd.rgb)*gamma.y + Cd.rgb*(1.0-min(1.0,length(Cd.rgb)))*gamma.z;\n      gl_FragColor = Cd;\n    }"},directionalBlurPass:function(e,t,i,n){let r="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return r+=`\n        uniform sampler2D tDiffuse;\n        uniform sampler2D pDiffuse;\n        uniform vec2 resUV;\n        varying vec2 vUv;\n  \n        #define PI 3.14159265358979\n        \n        void main() {\n          \n          float dist = 2.0;\n          float fade = 1.0;\n          vec2 baseUV=vUv;\n            \n          const int blurCount=${i};\n          const int runCount=2;\n          vec2 runDir[runCount];\n          runDir[0]=vec2(${t[0]}.0, ${t[1]}.0);\n          runDir[1]=vec2(-${t[0]}.0, -${t[1]}.0);\n          vec2 curUV;\n          vec4 curCd;\n          vec4 blurCd=vec4(.0);\n          for(int b=0; b<blurCount; ++b){\n            dist = 1.0 + float(b)*${n};\n            fade = (1.0-float(b+1)/float(blurCount+2));\n            //fade = 1.- (1.-fade)*(1.-fade);\n            for(int s=0; s<runCount; ++s){\n              curUV = baseUV+runDir[s]*(resUV*dist);\n              curUV = min( vec2(1.), max( vec2(0.), curUV ));\n              curCd = texture2D(${e},curUV);\n              curCd.a *= fade*(length(curCd.rgb)*.6);\n              blurCd.r = max( blurCd.r, curCd.r );\n              blurCd.g = max( blurCd.g, curCd.g );\n              blurCd.b = max( blurCd.b, curCd.b );\n              //blurCd.rgb += curCd.rgb;\n              blurCd.a = max( blurCd.a, curCd.a );\n            }\n          }\n          vec4 Cd=blurCd;\n          //Cd.a=.01;\n          gl_FragColor = Cd;\n        }`,r},finalOverlayHeavyShader:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform sampler2D scenePos;\n        uniform sampler2D noiseTexture;\n        uniform vec3 camPos;\n        uniform vec2 time;\n        uniform vec2 fogMult;\n        uniform vec2 proximityMult;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        vec3 fogValue( vec3 worldPos, float time ){\n            float wpDist = worldPos.x+worldPos.z*2.0;\n            vec2 noiseUV = vec2( ((time*.5+wpDist*.60)), (worldPos.y*.7+time*.25 ));\n            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;\n            noiseUV=vec2( ((time*.3+wpDist*.55)), (worldPos.x*.5+time*.35 ));\n            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,time)).g;\n            noiseUV=vec2( ((time*1.2+wpDist*.83)), (worldPos.y+time*.15  ));\n            noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n            \n            return noiseCd;\n        }\n\n        #define PROX_WARP 3.14159265358979*.45\n        \n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            vec3 worldPos = texture2D(scenePos,vUv).rgb;\n            float t = -time.x*.003;\n            vec3 baseNoiseCd=fogValue( worldPos, t );\n            \n            float mult=0.0;\n            vec3 noiseCd;\n            vec3 curNoiseCd;\n            vec3 samplePos;\n            float samples=4.3;//+sin(time.x*.001);\n            float blender;\n            float blenderMax=0.0;\n            for( int x=0; x<=3; ++x){\n                blender=( float(x+1) / samples );\n                samplePos=worldPos*blender;\n                curNoiseCd=fogValue( samplePos, t );\n                noiseCd=max(noiseCd, curNoiseCd * blender );\n                blenderMax+=blender;\n            }\n            noiseCd += baseNoiseCd*.2;\n            mult= noiseCd.x*noiseCd.y*noiseCd.z*1.2;\n            //mult*=mult;\n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            float fogDap= max(0.0, 1.0-mDepth);\n            fogDap=1.0-fogDap*fogDap;\n            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap ;\n            \n            \n            Cd.rgb= mix( Cd.rgb, vec3(mult*.7), mult)-mult*.35;\n \n            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;\n            Cd.rgb+= bloomCd;\n            Cd.rgb*=exposure;\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));\n            dProx*= dProx* yProxMult * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd*mult;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform sampler2D scenePos;\n        uniform sampler2D noiseTexture;\n        uniform vec3 camPos;\n        uniform vec2 time;\n        uniform vec2 fogMult;\n        uniform vec2 proximityMult;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        vec3 fogValue( vec3 worldPos, float time ){\n            float wpDist = worldPos.x+worldPos.z*2.0;\n            vec2 noiseUV = vec2( ((time*.5+wpDist*.60)), (worldPos.y*.7+time*.25 ));\n            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;\n            noiseUV=vec2( ((time*.3+wpDist*.55)), (worldPos.x*.5+time*.35 ));\n            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,time)).g;\n            noiseUV=vec2( ((time*1.2+wpDist*.83)), (worldPos.y+time*.15  ));\n            noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n            \n            return noiseCd;\n        }\n\n        #define PROX_WARP 3.14159265358979*.45\n        \n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            vec3 worldPos = texture2D(scenePos,vUv).rgb;\n            float t = -time.x*.003;\n            vec3 baseNoiseCd=fogValue( worldPos, t );\n            \n            float mult=0.0;\n            vec3 noiseCd;\n            vec3 curNoiseCd;\n            vec3 samplePos;\n            float samples=4.3;//+sin(time.x*.001);\n            float blender;\n            float blenderMax=0.0;\n            for( int x=0; x<=3; ++x){\n                blender=( float(x+1) / samples );\n                samplePos=worldPos*blender;\n                curNoiseCd=fogValue( samplePos, t );\n                noiseCd=max(noiseCd, curNoiseCd * blender );\n                blenderMax+=blender;\n            }\n            noiseCd += baseNoiseCd*.2;\n            mult= noiseCd.x*noiseCd.y*noiseCd.z*1.2;\n            //mult*=mult;\n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            float fogDap= max(0.0, 1.0-mDepth);\n            fogDap=1.0-fogDap*fogDap;\n            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap ;\n            \n            \n            Cd.rgb= mix( Cd.rgb, vec3(mult*.7), mult)-mult*.35;\n \n            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;\n            Cd.rgb+= bloomCd;\n            Cd.rgb*=exposure;\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));\n            dProx*= dProx* yProxMult * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd*mult;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n    }"},finalOverlayShader:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform sampler2D scenePos;\n        uniform sampler2D noiseTexture;\n        uniform vec2 time;\n        uniform vec2 fogMult;\n        uniform vec2 proximityMult;\n        uniform vec2 lookAtPerc;\n        uniform vec2 resUV;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        #define PROX_WARP 3.14159265358979*.45\n\n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            vec3 worldPos = texture2D(scenePos,vUv).rgb;\n            float wpDist = worldPos.x+worldPos.z*2.0;\n            float t = -time.x*.003;\n            \n            vec2 noiseUV = vec2( ((t*.5+wpDist*.60)), (worldPos.y*.7+t*.25 ));\n            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;\n            noiseUV=vec2( ((t*.3+wpDist*.55)), (worldPos.x*.5+t*.35 ));\n            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,t)).g;\n            noiseUV=vec2( ((t*1.2+wpDist*.83)), (worldPos.y+t*.15  ));\n            noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n            \n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            float fogDap= max(0.0, 1.0-mDepth);\n            fogDap=1.0-fogDap*fogDap;\n            float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;\n            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap;\n            \n            \n            Cd.rgb= mix( Cd.rgb, vec3(mult), mult)-mult*.4;\n \n            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;\n            Cd.rgb+= bloomCd;\n            Cd.rgb*=exposure;\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));\n            dProx*= dProx* yProxMult * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd*mult;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform sampler2D scenePos;\n        uniform sampler2D noiseTexture;\n        uniform vec2 time;\n        uniform vec2 fogMult;\n        uniform vec2 proximityMult;\n        uniform vec2 lookAtPerc;\n        uniform vec2 resUV;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        #define PROX_WARP 3.14159265358979*.45\n\n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            vec3 worldPos = texture2D(scenePos,vUv).rgb;\n            float wpDist = worldPos.x+worldPos.z*2.0;\n            float t = -time.x*.003;\n            \n            vec2 noiseUV = vec2( ((t*.5+wpDist*.60)), (worldPos.y*.7+t*.25 ));\n            vec3 noiseCd = texture2D(noiseTexture,noiseUV).rgb;\n            noiseUV=vec2( ((t*.3+wpDist*.55)), (worldPos.x*.5+t*.35 ));\n            noiseCd.g=texture2D(noiseTexture,noiseUV+vec2(0.0,t)).g;\n            noiseUV=vec2( ((t*1.2+wpDist*.83)), (worldPos.y+t*.15  ));\n            noiseCd.b=texture2D(noiseTexture,noiseUV).b;\n            \n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            float fogDap= max(0.0, 1.0-mDepth);\n            fogDap=1.0-fogDap*fogDap;\n            float mult=noiseCd.x*noiseCd.y*noiseCd.z*1.3;\n            mult*=max(0.0, (worldPos.y-0.04)*1.65) * fogMult.x * fogDap;\n            \n            \n            Cd.rgb= mix( Cd.rgb, vec3(mult), mult)-mult*.4;\n \n            vec3 bloomCd=texture2D(bloomTexture,vUv).rgb;\n            Cd.rgb+= bloomCd;\n            Cd.rgb*=exposure;\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            float yProxMult= 1.0-min(1.0, max(0.0, (worldPos.y-.5 )*1000.));\n            dProx*= dProx* yProxMult * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd*mult;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n        }"},finalOverlaySlimShader:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform vec2 time;\n        uniform vec2 proximityMult;\n        uniform vec2 lookAtPerc;\n        uniform vec2 resUV;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        #define PROX_WARP 3.14159265358979*.4\n        #define PI 3.14159265358979\n        \n        vec3 boostHighs( vec3 Cd ){\n            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);\n            sat=(1.0-sat);\n            sat=1.0-sat*sat;\n            Cd+=Cd*sat;\n            return Cd;\n        }\n        \n        vec3 boostMids( vec3 Cd ){\n            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);\n            sat=sin( sat*PI );\n            Cd+=Cd*sat;\n            return Cd;\n        }\n        \n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            vec2 uv=vUv;\n            \n            vec3 bloomCd=texture2D(bloomTexture,uv).rgb;\n            bloomCd= mix( boostHighs(Cd.rgb), bloomCd,  step( 0.01, length( bloomCd )) );\n            \n            Cd.rgb+= bloomCd;\n\n            // Proximity Draw Over\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            dProx*= dProx * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform sampler2D tDiffuse;\n        uniform sampler2D rDiffuse;\n        uniform sampler2D bloomTexture;\n        uniform sampler2D sceneDepth;\n        uniform vec2 time;\n        uniform vec2 proximityMult;\n        uniform vec2 lookAtPerc;\n        uniform vec2 resUV;\n        uniform float ratio;\n        uniform float exposure;\n        varying vec2 vUv;\n\n        #define PROX_WARP 3.14159265358979*.4\n        #define PI 3.14159265358979\n        \n        vec3 boostHighs( vec3 Cd ){\n            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);\n            sat=(1.0-sat);\n            sat=1.0-sat*sat;\n            Cd+=Cd*sat;\n            return Cd;\n        }\n        \n        vec3 boostMids( vec3 Cd ){\n            float sat=max(max(Cd.r,Cd.g),Cd.b) - min(min(Cd.r,Cd.g),Cd.b);\n            sat=sin( sat*PI );\n            Cd+=Cd*sat;\n            return Cd;\n        }\n        \n        void main() {\n            vec4 Cd=texture2D(rDiffuse,vUv);\n            vec2 uv=vUv;\n            \n            vec3 bloomCd=texture2D(bloomTexture,uv).rgb;\n            bloomCd= mix( boostHighs(Cd.rgb), bloomCd,  step( 0.01, length( bloomCd )) );\n            \n            Cd.rgb+= bloomCd;\n\n            // Proximity Draw Over\n            float depth=texture2D(sceneDepth,vUv).r;\n            \n            // Distance Mapping\n            float proxWarp= cos(( vUv.x-.5 ) * PROX_WARP*ratio );\n            float mDepth= pow( depth, 28.*proxWarp );\n            \n            // Proximity Draw Over\n            float dProx=  ((mDepth-.5)*-10.);\n            dProx= max(0.0, (1.0-dProx)*step( 0., dProx));\n            dProx*= dProx * proximityMult.x;\n            vec3 proxCd = (vec3(.5,.5,.2)*dProx)*.5;\n            Cd.rgb+=proxCd;\n            \n            Cd.a=1.0;\n            gl_FragColor = Cd;\n        }"},glowPassPostProcess:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D gDiffuse;\n    uniform sampler2D rDiffuse;\n    uniform sampler2D sceneDepth;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n      vec4 gCd=texture2D( gDiffuse, vUv );\n      vec4 rCd=texture2D( rDiffuse, vUv );\n      \n      Cd.rgb=gCd.rgb + gCd.rgb*length(gCd.rgb) + rCd.rgb  + Cd.rgb ;\n\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D gDiffuse;\n    uniform sampler2D rDiffuse;\n    uniform sampler2D sceneDepth;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n      vec4 gCd=texture2D( gDiffuse, vUv );\n      vec4 rCd=texture2D( rDiffuse, vUv );\n      \n      Cd.rgb=gCd.rgb + gCd.rgb*length(gCd.rgb) + rCd.rgb  + Cd.rgb ;\n\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},iZoomPostProcess:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDiffusePrev;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n            vec4 pCd=texture2D( tDiffusePrev, vUv );\n            vec3 dCd=Cd.rgb-pCd.rgb;\n            vec3 b1Cd= texture2D( tDiffuse, vUv-vec2( dCd.rg*.1 ) ).rgb;\n            vec3 b2Cd= texture2D( tDiffusePrev, vUv+vec2( dCd.rg*.1 ) ).rgb;\n            b1Cd=mix( b1Cd, b2Cd, step( length(b1Cd), length(b2Cd) ) );\n            \n            vec4 outCd=vec4(1.0);\n            outCd.rgb= mix(  Cd.rgb, b1Cd, length(dCd) );\n            \n      vec3 noiseCd=texture2D( noiseTexture, fract( vUv*50.0+dCd.rg*.1 + length(Cd.rgb*30.0) + time.x) ).rgb;\n\n            outCd.rgb= mix( vec3(length(outCd.rgb)*.333-length(noiseCd)*.1), outCd.rgb, min(1.0,length(dCd))*.5+.5 );\n            outCd.rgb+= dCd.gbr;\n            \n            \n            \n      outCd.a=1.0;\n      gl_FragColor = outCd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDiffusePrev;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n            vec4 pCd=texture2D( tDiffusePrev, vUv );\n            vec3 dCd=Cd.rgb-pCd.rgb;\n            vec3 b1Cd= texture2D( tDiffuse, vUv-vec2( dCd.rg*.1 ) ).rgb;\n            vec3 b2Cd= texture2D( tDiffusePrev, vUv+vec2( dCd.rg*.1 ) ).rgb;\n            b1Cd=mix( b1Cd, b2Cd, step( length(b1Cd), length(b2Cd) ) );\n            \n            vec4 outCd=vec4(1.0);\n            outCd.rgb= mix(  Cd.rgb, b1Cd, length(dCd) );\n            \n      vec3 noiseCd=texture2D( noiseTexture, fract( vUv*50.0+dCd.rg*.1 + length(Cd.rgb*30.0) + time.x) ).rgb;\n\n            outCd.rgb= mix( vec3(length(outCd.rgb)*.333-length(noiseCd)*.1), outCd.rgb, min(1.0,length(dCd))*.5+.5 );\n            outCd.rgb+= dCd.gbr;\n            \n            \n            \n      outCd.a=1.0;\n      gl_FragColor = outCd;\n    }"},lKingPostProcess:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv )*.2;\n      vec4 noiseCd= (texture2D( noiseTexture, vec2( fract(vUv.x*.2-time.x*.02+sin(time.x*.1+vUv.y*PI+Cd.r+Cd.g)),fract( vUv.y*.2+time.x*.01+cos(-time.x*.2+1.15+vUv.x*PI+Cd.g+Cd.b)) ) )-.5)*.025;\n      \n      vec2 bUv=vUv+noiseCd.rg;\n      vec2 rUv=vUv+noiseCd.gb;\n      vec2 gUv=vUv+noiseCd.br;\n      vec4 rCd=texture2D( tDiffuse, rUv );\n      vec4 gCd=texture2D( tDiffuse, gUv );\n      vec4 bCd=texture2D( tDiffuse, bUv );\n      \n      Cd.rgb=vec3( rCd.r, gCd.g, bCd.b );\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform vec2 ratio;\n    varying vec2 vUv;\n\n        #define PI 3.14159265358979\n        \n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv )*.2;\n      vec4 noiseCd= (texture2D( noiseTexture, vec2( fract(vUv.x*.2-time.x*.02+sin(time.x*.1+vUv.y*PI+Cd.r+Cd.g)),fract( vUv.y*.2+time.x*.01+cos(-time.x*.2+1.15+vUv.x*PI+Cd.g+Cd.b)) ) )-.5)*.025;\n      \n      vec2 bUv=vUv+noiseCd.rg;\n      vec2 rUv=vUv+noiseCd.gb;\n      vec2 gUv=vUv+noiseCd.br;\n      vec4 rCd=texture2D( tDiffuse, rUv );\n      vec4 gCd=texture2D( tDiffuse, gUv );\n      vec4 bCd=texture2D( tDiffuse, bUv );\n      \n      Cd.rgb=vec3( rCd.r, gCd.g, bCd.b );\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},mixBlurShaderPass:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform sampler2D tDiffuse;\n        uniform sampler2D pDiffuse;\n        uniform vec2 resUV;\n        varying vec2 vUv;\n        \n        #define PI 3.14159265358979\n        \n        void main() {\n\n          float dist = 3.0;\n          float fade = 1.0;\n          vec2 baseUV=vUv;\n          const int blurCount=3;\n          const int runCount=8;\n          vec2 runDir[runCount];\n          runDir[0]=vec2(1.0, 0.0);\n          runDir[1]=vec2(1.0, 1.0);\n          runDir[2]=vec2(0.0, 1.0);\n          runDir[3]=vec2(-1.0, 1.0);\n          runDir[4]=vec2(-1.0, 0.0);\n          runDir[5]=vec2(-1.0, -1.0);\n          runDir[6]=vec2(0.0, -1.0);\n          runDir[7]=vec2(1.0, -1.0);\n          vec2 curUV;\n          vec4 curCd;\n          vec4 scatterCd=vec4(.0);\n          for(int b=0; b<blurCount; ++b){\n            dist = 1.5*(1.0+float(b));\n            fade = .1*(1.0-float(b)/float(blurCount));\n            for(int s=0; s<runCount; ++s){\n              curUV = baseUV+runDir[s]*(resUV*dist);\n              curCd = texture2D(pDiffuse,curUV);\n              curCd.a *= fade;\n              scatterCd.rgb += curCd.rgb;\n              scatterCd.a = max( scatterCd.a, curCd.a );\n            }\n          }\n          vec4 Cd=scatterCd;\n          \n          vec4 blurCd=texture2D(tDiffuse,vUv);\n          blurCd.rgb = normalize( blurCd.rgb );\n          \n          Cd = mix( blurCd, Cd, Cd.a);\n          Cd = texture2D(tDiffuse,vUv);\n          //Cd.a=.01;\n          gl_FragColor = Cd;\n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform sampler2D tDiffuse;\n        uniform sampler2D pDiffuse;\n        uniform vec2 resUV;\n        varying vec2 vUv;\n        \n        #define PI 3.14159265358979\n        \n        void main() {\n\n          float dist = 3.0;\n          float fade = 1.0;\n          vec2 baseUV=vUv;\n          const int blurCount=3;\n          const int runCount=8;\n          vec2 runDir[runCount];\n          runDir[0]=vec2(1.0, 0.0);\n          runDir[1]=vec2(1.0, 1.0);\n          runDir[2]=vec2(0.0, 1.0);\n          runDir[3]=vec2(-1.0, 1.0);\n          runDir[4]=vec2(-1.0, 0.0);\n          runDir[5]=vec2(-1.0, -1.0);\n          runDir[6]=vec2(0.0, -1.0);\n          runDir[7]=vec2(1.0, -1.0);\n          vec2 curUV;\n          vec4 curCd;\n          vec4 scatterCd=vec4(.0);\n          for(int b=0; b<blurCount; ++b){\n            dist = 1.5*(1.0+float(b));\n            fade = .1*(1.0-float(b)/float(blurCount));\n            for(int s=0; s<runCount; ++s){\n              curUV = baseUV+runDir[s]*(resUV*dist);\n              curCd = texture2D(pDiffuse,curUV);\n              curCd.a *= fade;\n              scatterCd.rgb += curCd.rgb;\n              scatterCd.a = max( scatterCd.a, curCd.a );\n            }\n          }\n          vec4 Cd=scatterCd;\n          \n          vec4 blurCd=texture2D(tDiffuse,vUv);\n          blurCd.rgb = normalize( blurCd.rgb );\n          \n          Cd = mix( blurCd, Cd, Cd.a);\n          Cd = texture2D(tDiffuse,vUv);\n          //Cd.a=.01;\n          gl_FragColor = Cd;\n        }"},motionBlurPostProcess:function(e,t){let i="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return i+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D rDiffuse;\n    uniform sampler2D noiseTexture;\n    \n    uniform float exposure;\n    uniform vec2 time;\n    uniform vec3 camRotXYZ;\n    uniform vec2 blurDirCur;\n    uniform vec2 blurDirPrev;\n    varying vec2 vUv;\n\n    vec4 getTexture( sampler2D texelToLinearTexture ) {\n      return mapTexelToLinear( texture2D( texelToLinearTexture , vUv ) );\n    }\n    \n    vec3 directionalBlur(vec3 origCd, sampler2D tex, vec2 uv, vec2 dir, vec2 deltaDir, float dist, float thresh){\n      float perc;\n      float curPerc=1.0;\n      vec2 curUV;\n      float origLength=length(origCd.rgb);\n      vec3 curCd;\n      vec3 retCd=origCd;\n      float delta;\n      float threshTrigger=1.0;\n      float dropoff;\n      float percCurve;\n      float d=dot(dir,deltaDir)*.5+.5;\n      for(int r=0; r<10; ++r){\n        perc=(float(r)/10.0);\n        percCurve=perc*.5;\n        dropoff=(dist*float(r))*perc*d;\n        curUV=uv+normalize(deltaDir*percCurve+dir*(1.0-percCurve))*dropoff;\n        //curUV=uv+dir*dropoff;\n        curCd=texture2D(tex,curUV).rgb;\n        delta=length(curCd.rgb);\n        delta=origLength<delta?1.0-perc*perc:0.0;\n        //delta=1.0-perc*perc;\n        retCd+=curCd.rgb*delta;\n        curPerc+=delta;\n        \n        percCurve*=percCurve;\n        curUV=uv-normalize(-deltaDir*percCurve+dir*(1.0-percCurve))*dropoff*.4;\n        //curUV=uv-dir*dropoff*.4;\n        curCd=texture2D(tex,curUV).rgb;\n        delta=length(curCd.rgb);\n        delta=origLength<delta?1.0-perc*perc:0.0;\n        //delta=1.0-perc*perc;\n        retCd+=curCd.rgb*delta;\n        curPerc+=delta;\n        \n      }\n      return retCd /curPerc;\n    }\n\n    void main() {\n      \n      \n      vec4 bloomCd=getTexture( rDiffuse );\n      float noise=sin(time.x*1.8+vUv.x*length(bloomCd.rgb)*12.523+cos(time.x*.4+vUv.y*length(bloomCd.rgb)*2.352)*1.9)*.4+.8;\n      noise=1.0-min(1.0, max(0.0, noise*sin(time.x*.4+24.512)*3.0+1.0));\n      vec2 noiseUV=vUv*0.1;//+vec2(camRotXYZ.x+time.x*.05,-camRotXYZ.y);\n      vec4 noiseCd=texture2D(noiseTexture,noiseUV);\n      float blurDist=length(blurDirCur);\n      blurDist=min(1.0,blurDist*15.0);\n      //blurDist=(1.0-(1.0-blurDist)*(1.0-blurDist));\n      vec2 blurDir=normalize(blurDirCur);//+(vUv-.5)*2.0);",t||(i+="\n        blurDir=normalize( blurDir + (noiseCd.gb-.5)*(dot(blurDir,noiseCd.gb)*.5+.5) );\n      "),i+="\n      vec2 deltaDir=normalize(blurDirPrev);\n      deltaDir.x+=sin((blurDir.x-deltaDir.x));\n      deltaDir.y+=sin((blurDir.y-deltaDir.y));\n      \n      vec4 bloomAdd=vec4( directionalBlur(bloomCd.rgb, rDiffuse, vUv, blurDir, deltaDir, "+e.y+"*"+(t?"3.0":"5.0")+"*(1.5)*blurDist, .5)*(1.0+exposure*.4), 1.0);\n      vec4 Cd= bloomAdd* ( 0.50+bloomCd)*exposure;//getTexture( rDiffuse ) + bloomAdd;//+ vec4( 1.0 ) * bloomCd + bloomAdd;\n      //Cd.a=bloomAdd.a-bloomCd.a;\n      \n      Cd.a=1.0;\n      gl_FragColor = Cd;\n      \n    }",i},sFieldPostProcessFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n        uniform sampler2D tDiffuse;\n        uniform sampler2D starTexture;\n        varying vec2 vUv;\n        varying vec2 vUvShift;\n        varying vec2 starUv;\n        varying float vTimer;\n\n        #define PI 3.14159265358979\n        \n        void main() {\n            float uvDist=length(vUvShift);\n            \n            vec3 starCd=texture2D( starTexture, starUv ).rgb*uvDist;\n            \n            float blender=uvDist*starCd.b * abs((fract(starCd.b*PI+vTimer))*2.0-1.0)*.5;\n            vec2 starBlendUV=starCd.rg*blender;\n            \n            vec2 cdUv = vUv+starBlendUV;\n            vec4 Cd=texture2D( tDiffuse, cdUv );\n            \n            vec3 negCd= mix( Cd.brg, Cd.gbr, length(Cd.rgb-Cd.rgb) );\n            float cdBlender=step(.015,starBlendUV.x*uvDist)+starCd.b;\n            Cd.rgb= mix( Cd.rgb, negCd, cdBlender );\n            \n            gl_FragColor = Cd;\n        }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n        uniform sampler2D tDiffuse;\n        uniform sampler2D starTexture;\n        varying vec2 vUv;\n        varying vec2 vUvShift;\n        varying vec2 starUv;\n        varying float vTimer;\n\n        #define PI 3.14159265358979\n        \n        void main() {\n            float uvDist=length(vUvShift);\n            \n            vec3 starCd=texture2D( starTexture, starUv ).rgb*uvDist;\n            \n            float blender=uvDist*starCd.b * abs((fract(starCd.b*PI+vTimer))*2.0-1.0)*.5;\n            vec2 starBlendUV=starCd.rg*blender;\n            \n            vec2 cdUv = vUv+starBlendUV;\n            vec4 Cd=texture2D( tDiffuse, cdUv );\n            \n            vec3 negCd= mix( Cd.brg, Cd.gbr, length(Cd.rgb-Cd.rgb) );\n            float cdBlender=step(.015,starBlendUV.x*uvDist)+starCd.b;\n            Cd.rgb= mix( Cd.rgb, negCd, cdBlender );\n            \n            gl_FragColor = Cd;\n        }"},sFieldPostProcessVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec2 time;\n    varying vec2 vUv;\n    varying vec2 vUvShift;\n    varying vec2 starUv;\n    varying float vTimer;\n\n    void main(){\n        vUv=uv;\n        vUvShift=uv-.5;\n        \n        vec2 rUv=vUvShift*0.7071067811865476;\n        vec2 tmpUv=rUv;\n        float rot=time.x*.1;\n        vec2 sinCos=vec2( sin(rot), cos(rot) );\n        rUv.x=sinCos.x*tmpUv.x + sinCos.y*tmpUv.y;\n        rUv.y=sinCos.y*tmpUv.x - sinCos.x*tmpUv.y;\n        rUv=(rUv+.5);\n        \n        float starTimer=sin(time.x*.2)*.1+.1;\n        starUv=mix( vUv, rUv, starTimer);\n        \n        vTimer=time.x*.5;\n        \n        vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix*modelViewPosition;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec2 time;\n    varying vec2 vUv;\n    varying vec2 vUvShift;\n    varying vec2 starUv;\n    varying float vTimer;\n\n    void main(){\n        vUv=uv;\n        vUvShift=uv-.5;\n        \n        vec2 rUv=vUvShift*0.7071067811865476;\n        vec2 tmpUv=rUv;\n        float rot=time.x*.1;\n        vec2 sinCos=vec2( sin(rot), cos(rot) );\n        rUv.x=sinCos.x*tmpUv.x + sinCos.y*tmpUv.y;\n        rUv.y=sinCos.y*tmpUv.x - sinCos.x*tmpUv.y;\n        rUv=(rUv+.5);\n        \n        float starTimer=sin(time.x*.2)*.1+.1;\n        starUv=mix( vUv, rUv, starTimer);\n        \n        vTimer=time.x*.5;\n        \n        vec4 modelViewPosition=modelViewMatrix * vec4(position, 1.0);\n        gl_Position = projectionMatrix*modelViewPosition;\n    }"},textureStorePass:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDiffusePrev;\n    uniform sampler2D tDiffusePrevRoom;\n    uniform float roomComposer;\n    varying vec2 vUv;\n        \n    void main() {\n      vec4 Cd = texture2D( tDiffusePrev, vUv );\n      vec3 prevRoomCd = texture2D( tDiffusePrevRoom, vUv ).rgb;\n      Cd.rgb=mix( Cd.rgb, prevRoomCd, roomComposer);\n      //Cd.rgb=Cd.rgb + prevRoomCd;\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDiffusePrev;\n    uniform sampler2D tDiffusePrevRoom;\n    uniform float roomComposer;\n    varying vec2 vUv;\n        \n    void main() {\n      vec4 Cd = texture2D( tDiffusePrev, vUv );\n      vec3 prevRoomCd = texture2D( tDiffusePrevRoom, vUv ).rgb;\n      Cd.rgb=mix( Cd.rgb, prevRoomCd, roomComposer);\n      //Cd.rgb=Cd.rgb + prevRoomCd;\n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},warpPostProcess:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D tDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform sampler2D animTexture;\n    uniform vec2 time;\n    uniform vec2 fader;\n    varying vec2 vUv;\n\n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n      vec4 animCd=texture2D( animTexture, vUv );\n      float timer=time.x*.2;\n      vec2 animUV=vec2( mod(animCd.r+Cd.r+Cd.g+timer, 1.0), mod(animCd.g+Cd.g+Cd.b+timer, 1.0) );\n      animCd=texture2D( animTexture, animUV );\n      \n      vec2 noiseUV=animUV+animCd.rg;\n      vec4 noiseCd=texture2D(noiseTexture,noiseUV);\n      noiseCd.rgb=vec3( length( noiseCd.rgb )*.5-.25 );\n      \n      float blend=fader.x*fader.y;\n      Cd=mix( Cd, noiseCd, blend);\n      \n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D tDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform sampler2D animTexture;\n    uniform vec2 time;\n    uniform vec2 fader;\n    varying vec2 vUv;\n\n    void main() {\n      vec4 Cd=texture2D( tDiffuse, vUv );\n      vec4 animCd=texture2D( animTexture, vUv );\n      float timer=time.x*.2;\n      vec2 animUV=vec2( mod(animCd.r+Cd.r+Cd.g+timer, 1.0), mod(animCd.g+Cd.g+Cd.b+timer, 1.0) );\n      animCd=texture2D( animTexture, animUV );\n      \n      vec2 noiseUV=animUV+animCd.rg;\n      vec4 noiseCd=texture2D(noiseTexture,noiseUV);\n      noiseCd.rgb=vec3( length( noiseCd.rgb )*.5-.25 );\n      \n      float blend=fader.x*fader.y;\n      Cd=mix( Cd, noiseCd, blend);\n      \n      Cd.a=1.0;\n      gl_FragColor = Cd;\n    }"},worldPositionFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e="#include <packing>\n  "+e,e+="\n    uniform sampler2D diffuse;\n    uniform sampler2D depth;\n    uniform float camNear;\n    uniform float camFar;\n    varying vec3 pos;\n    \n    void main() {\n      \n      vec4 Cd=vec4( pos, 1.0 );\n      gl_FragColor = Cd;\n    }",e},worldPositionVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n  varying vec3 pos;\n  \n  void main(){\n    vec3 transformed = vec3( position );\n      vec4 mvPosition = modelViewMatrix  * vec4( transformed, 1.0 );\n    pos=((projectionMatrix * modelMatrix * vec4( transformed-vec3(0.0,0.0,-500.0), 1.0 )).xyz*.0001)*.5+.5;\n    \n    gl_Position = projectionMatrix * mvPosition;\n  }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n  varying vec3 pos;\n  \n  void main(){\n    vec3 transformed = vec3( position );\n      vec4 mvPosition = modelViewMatrix  * vec4( transformed, 1.0 );\n    pos=((projectionMatrix * modelMatrix * vec4( transformed-vec3(0.0,0.0,-500.0), 1.0 )).xyz*.0001)*.5+.5;\n    \n    gl_Position = projectionMatrix * mvPosition;\n  }"}}),scene:Object.freeze({__proto__:null,bgScreenFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform sampler2D noiseTexture;\n    varying vec2 vUv;\n    varying vec3 vCamNormal;\n    varying vec3 vWorldNormal;\n    varying vec3 vWorldCross;\n    varying vec3 vSunPos;\n    \n    void main(){\n        vec4 Cd=vec4( vec3(1.0, .10, .10), 1.0);\n        \n        float sunDot = dot( vSunPos, vCamNormal )*.5 +.5;\n        sunDot *= max(0.0, dot( vSunPos, vec3(.0, 1.0, .0)) );\n        \n        vec2 xOffset = vec2( .0, .0);\n        vec3 nCd=texture2D(noiseTexture,vUv*.1+vSunPos.zy*vec2(.15,.22) + xOffset ).rgb;\n        nCd*=texture2D(noiseTexture,vUv*.1+vSunPos.yx*.2).rgb;\n        sunDot *= nCd.x*nCd.y*nCd.z;\n        nCd= vec3( length( nCd ) );\n        \n        float mixVal= min(1.0, sunDot+(1.-(vWorldNormal.y*.5+.5)));\n        Cd.rgb= mix(vec3(0.0, .20, 1.0)+nCd*vWorldNormal.y, vec3(.0, .0, .0), mixVal);\n        Cd.rgb=mix( vec3(.0), Cd.rgb, vWorldNormal.y );\n        Cd.rgb=vec3(mix( vWorldNormal, vWorldCross, step(.4, vUv.x)));\n        Cd.rgb=vec3(mix( vWorldCross, Cd.rgb, step(vUv.y,.9)));\n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform sampler2D noiseTexture;\n    varying vec2 vUv;\n    varying vec3 vCamNormal;\n    varying vec3 vWorldNormal;\n    varying vec3 vWorldCross;\n    varying vec3 vSunPos;\n    \n    void main(){\n        vec4 Cd=vec4( vec3(1.0, .10, .10), 1.0);\n        \n        float sunDot = dot( vSunPos, vCamNormal )*.5 +.5;\n        sunDot *= max(0.0, dot( vSunPos, vec3(.0, 1.0, .0)) );\n        \n        vec2 xOffset = vec2( .0, .0);\n        vec3 nCd=texture2D(noiseTexture,vUv*.1+vSunPos.zy*vec2(.15,.22) + xOffset ).rgb;\n        nCd*=texture2D(noiseTexture,vUv*.1+vSunPos.yx*.2).rgb;\n        sunDot *= nCd.x*nCd.y*nCd.z;\n        nCd= vec3( length( nCd ) );\n        \n        float mixVal= min(1.0, sunDot+(1.-(vWorldNormal.y*.5+.5)));\n        Cd.rgb= mix(vec3(0.0, .20, 1.0)+nCd*vWorldNormal.y, vec3(.0, .0, .0), mixVal);\n        Cd.rgb=mix( vec3(.0), Cd.rgb, vWorldNormal.y );\n        Cd.rgb=vec3(mix( vWorldNormal, vWorldCross, step(.4, vUv.x)));\n        Cd.rgb=vec3(mix( vWorldCross, Cd.rgb, step(vUv.y,.9)));\n        gl_FragColor=Cd;\n    }"},bgScreenVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform vec2 time;\n    \n    varying vec2 vUv;\n    varying vec3 vCamNormal;\n    varying vec3 vWorldNormal;\n    varying vec3 vWorldCross;\n    varying vec3 vSunPos;\n    \n    void main(){\n        vUv=uv;\n        \n        mat4 pvMat=projectionMatrix * viewMatrix;\n        pvMat[3] = vec4(.0, .0, .0, 1.0);\n        mat3 pvRot = inverse( mat3( pvMat ) );\n        vCamNormal= pvRot * vec3( position*.2 + vec3(.0, .0, 1.0));\n        vWorldNormal= normalize( pvRot[2] *vec3(1.,0.,1.));\n        vWorldCross= normalize( pvRot[0]*vec3(1.,0.,1.));\n        \n        float timeRate = time.x * .1;\n        vec3 sunPos = normalize( vec3(.3, 1.0, 1.0) );\n        vec3 sunRef = sunPos;\n        sunPos.y= sin(timeRate) * sunRef.y + cos(timeRate)*sunRef.z;\n        sunPos.z= sin(timeRate) * sunRef.z - cos(timeRate)*sunRef.y;\n        sunPos.x = sin( timeRate ) * .1;\n        \n        vSunPos = normalize( sunPos );\n        \n        vec4 modelViewPosition= vec4(position*2.0 + vec3(.0, .0, 1.0), 1.0);\n        gl_Position = modelViewPosition;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform vec2 time;\n    \n    varying vec2 vUv;\n    varying vec3 vCamNormal;\n    varying vec3 vWorldNormal;\n    varying vec3 vWorldCross;\n    varying vec3 vSunPos;\n    \n    void main(){\n        vUv=uv;\n        \n        mat4 pvMat=projectionMatrix * viewMatrix;\n        pvMat[3] = vec4(.0, .0, .0, 1.0);\n        mat3 pvRot = inverse( mat3( pvMat ) );\n        vCamNormal= pvRot * vec3( position*.2 + vec3(.0, .0, 1.0));\n        vWorldNormal= normalize( pvRot[2] *vec3(1.,0.,1.));\n        vWorldCross= normalize( pvRot[0]*vec3(1.,0.,1.));\n        \n        float timeRate = time.x * .1;\n        vec3 sunPos = normalize( vec3(.3, 1.0, 1.0) );\n        vec3 sunRef = sunPos;\n        sunPos.y= sin(timeRate) * sunRef.y + cos(timeRate)*sunRef.z;\n        sunPos.z= sin(timeRate) * sunRef.z - cos(timeRate)*sunRef.y;\n        sunPos.x = sin( timeRate ) * .1;\n        \n        vSunPos = normalize( sunPos );\n        \n        vec4 modelViewPosition= vec4(position*2.0 + vec3(.0, .0, 1.0), 1.0);\n        gl_Position = modelViewPosition;\n    }"},skyObjectFrag:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n     \n    uniform sampler2D diffuse;\n    uniform sampler2D envDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float camNear;\n    uniform float camFar;\n    uniform vec2 resUV;\n\n    uniform float rate;\n    uniform vec3 fogColor;\n    \n    varying vec2 vUv;\n    varying vec3 vLocalPos;\n    varying vec4 vWorldPos;\n    \n    #define PI 3.14159265358979323\n\n    float fitDepth( float zDepth ){\n        float viewZ = ( camNear * camFar ) / ( ( camFar - camNear ) * zDepth - camFar );\n        return ( viewZ + camNear ) / ( camNear - camFar );\n    }\n    \n    void main(){\n        vec2 uv=vUv;\n        vec2 screenUV=(vec2(vWorldPos.xy/vWorldPos.w))*.5+.5;\n        vec4 Cd=texture2D(diffuse,uv);\n        float t = time.x*.6;\n        \n        vec2 nUv = fract( vec2(vUv.x*2.0, vUv.y - t*.01) );\n        vec3 noiseCd = texture2D( noiseTexture, nUv ).rgb;\n        nUv = fract( nUv+noiseCd.rg*(noiseCd.b-.5));\n        noiseCd = texture2D( noiseTexture, nUv ).rgb;\n        noiseCd.rg = noiseCd.rg*2.0-1.0;\n        \n        float zFrag = texture2D( envDiffuse, screenUV ).x;\n        float depth = fitDepth( zFrag );\n        float stencil = zFrag==1.0 ? 1.0 : 0.0;\n        \n        float reachDepth = 0.0 ;\n        vec2 baseUV=screenUV;\n        vec2 curUV=vec2(0.0);\n        float curDepth=0.0;\n        float curPerc = 0.0;\n        float dist = 11.0;\n        float blendStep = .4;\n        float blend = 0.0;\n        float uvShift=0.0;\n        for(int s=0; s<7; ++s){\n            uvShift = mix(noiseCd.r, noiseCd.g, noiseCd.b)*15.0;\n            curUV = baseUV+vec2(0.0,resUV.y*-(dist+uvShift) );\n            curDepth = texture2D(envDiffuse,curUV).x ;\n            curDepth = fitDepth( curDepth );\n            curPerc = step( .3, (1.0-curDepth)*7.0 );\n            reachDepth += min(1.0,curDepth)*curPerc;\n            blend += blendStep*curPerc;\n            dist+=dist*dot(noiseCd.rgb, vec3(0.0,0.0,1.0));\n        }\n        reachDepth *= blend*stencil;\n        \n        vec3 normPos = normalize(vLocalPos);\n        normPos.y = 1.0-min(1.0,(normPos.y)*2.0);\n        normPos.y = normPos.y*normPos.y*normPos.y;\n        depth = clamp(reachDepth+normPos.y, 0.0, 1.0);\n        \n        vec3 baseColor = fogColor+(sin(noiseCd.r*PI+t+uv.x)*.008)*max(0.0,1.0-depth);\n        baseColor = (baseColor);//+Cd.rgb*.2);\n        Cd.rgb = mix(Cd.rgb, baseColor, depth);\n        \n        gl_FragColor=Cd;\n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n     \n    uniform sampler2D diffuse;\n    uniform sampler2D envDiffuse;\n    uniform sampler2D noiseTexture;\n    uniform vec2 time;\n    uniform float camNear;\n    uniform float camFar;\n    uniform vec2 resUV;\n\n    uniform float rate;\n    uniform vec3 fogColor;\n    \n    varying vec2 vUv;\n    varying vec3 vLocalPos;\n    varying vec4 vWorldPos;\n    \n    #define PI 3.14159265358979323\n\n    float fitDepth( float zDepth ){\n        float viewZ = ( camNear * camFar ) / ( ( camFar - camNear ) * zDepth - camFar );\n        return ( viewZ + camNear ) / ( camNear - camFar );\n    }\n    \n    void main(){\n        vec2 uv=vUv;\n        vec2 screenUV=(vec2(vWorldPos.xy/vWorldPos.w))*.5+.5;\n        vec4 Cd=texture2D(diffuse,uv);\n        float t = time.x*.6;\n        \n        vec2 nUv = fract( vec2(vUv.x*2.0, vUv.y - t*.01) );\n        vec3 noiseCd = texture2D( noiseTexture, nUv ).rgb;\n        nUv = fract( nUv+noiseCd.rg*(noiseCd.b-.5));\n        noiseCd = texture2D( noiseTexture, nUv ).rgb;\n        noiseCd.rg = noiseCd.rg*2.0-1.0;\n        \n        float zFrag = texture2D( envDiffuse, screenUV ).x;\n        float depth = fitDepth( zFrag );\n        float stencil = zFrag==1.0 ? 1.0 : 0.0;\n        \n        float reachDepth = 0.0 ;\n        vec2 baseUV=screenUV;\n        vec2 curUV=vec2(0.0);\n        float curDepth=0.0;\n        float curPerc = 0.0;\n        float dist = 11.0;\n        float blendStep = .4;\n        float blend = 0.0;\n        float uvShift=0.0;\n        for(int s=0; s<7; ++s){\n            uvShift = mix(noiseCd.r, noiseCd.g, noiseCd.b)*15.0;\n            curUV = baseUV+vec2(0.0,resUV.y*-(dist+uvShift) );\n            curDepth = texture2D(envDiffuse,curUV).x ;\n            curDepth = fitDepth( curDepth );\n            curPerc = step( .3, (1.0-curDepth)*7.0 );\n            reachDepth += min(1.0,curDepth)*curPerc;\n            blend += blendStep*curPerc;\n            dist+=dist*dot(noiseCd.rgb, vec3(0.0,0.0,1.0));\n        }\n        reachDepth *= blend*stencil;\n        \n        vec3 normPos = normalize(vLocalPos);\n        normPos.y = 1.0-min(1.0,(normPos.y)*2.0);\n        normPos.y = normPos.y*normPos.y*normPos.y;\n        depth = clamp(reachDepth+normPos.y, 0.0, 1.0);\n        \n        vec3 baseColor = fogColor+(sin(noiseCd.r*PI+t+uv.x)*.008)*max(0.0,1.0-depth);\n        baseColor = (baseColor);//+Cd.rgb*.2);\n        Cd.rgb = mix(Cd.rgb, baseColor, depth);\n        \n        gl_FragColor=Cd;\n    }"},skyObjectVert:function(){let e="\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        ";return e+="\n    uniform float camFar;\n    uniform vec2 resUV;\n    \n    varying vec2 vUv;\n    varying vec3 vLocalPos;\n    varying vec4 vWorldPos;\n    \n    void main(){\n        vUv=uv;\n        vLocalPos=position;\n        \n        vec3 pos = position;\n        vec4 modelViewPosition=projectionMatrix * viewMatrix * vec4(normalize(position)*camFar, 1.0);\n        gl_Position = modelViewPosition;\n        \n        vWorldPos = modelViewPosition;\n        \n    }","\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n    #else\n      precision mediump float;\n    #endif\n        \n    uniform float camFar;\n    uniform vec2 resUV;\n    \n    varying vec2 vUv;\n    varying vec3 vLocalPos;\n    varying vec4 vWorldPos;\n    \n    void main(){\n        vUv=uv;\n        vLocalPos=position;\n        \n        vec3 pos = position;\n        vec4 modelViewPosition=projectionMatrix * viewMatrix * vec4(normalize(position)*camFar, 1.0);\n        gl_Position = modelViewPosition;\n        \n        vWorldPos = modelViewPosition;\n        \n    }"}})};const Cd="pxlNav-coreCanvas";var Td,Ed,Pd=window.innerWidth,Ad=window.innerHeight;exports.pxlNav=class{constructor(e,t,i,n,r){this._active=!1,this.options={loadList:["Cloud3d","SoftNoise","SmoothNoise","WarpAnimTexture"]},this.verbose=e,this.projectTitle=t,this.startingRoom=n,r.includes(n)||r.push(n),this.roomBootList=r,this.callbacks={},this.uriHashParms=this.findHashParms(),this.mobile=this.isMobile(),this.autoCam=this.getHashParm("autoCam",!1),this.loadPercent=0,this.folderDict={assetRoot:"assets/",guiRoot:"assets/GUI/",roomRoot:"assets/rooms/",vidRoot:"assets/screenContent/"},this.validEvents={booted:"Emitted after the engine has fully booted and is ready to be addressed.",shaderEditorVis:"Returns a [bool]; Emitted when the shader editor is toggled on or off.","roomChange-Start":"Emitted when the room change transition begins.","roomChange-Middle":"Emitted when the room change process occurs mid transition.","roomChange-End":"Returns a [bool]; Emitted when the room change transition ends.",fromRoom:"Returns a custom object; Emitted from your Room code you choose to emit during run time.",pxlNavEventNameHere:"Never emitted; You did some copy'pasta.","":"** NOTE : callbacks get an event object shaped -  **","":"** { 'type' : *eventName*, 'value' : *data* } **","":"",help:"Hello! I'm here to help you!",pingPong:"Send 'ping', Get 'pong'! - pxlNav.trigger('ping');"},this.validEventsKeys=Object.keys(this.validEvents),this.pxlTimer=new Wu,this.pxlShaders=Sd,this.pxlCookie=new Vu(t,"/"),this.pxlCookie.hasCookie("forceMobile")&&(this.mobile=pxlCookie.parseCookie("forceMobile")),this.pxlQuality=new zu(this.verbose,this.mobile,this.uriHashParms),this.pxlUtils=new eu(this.folderDict.assetRoot,this.mobile),this.pxlFile=new ju(this.folderDict),this.pxlExtensions=new xd,this.pxlAudio=new yd(this.pxlTimer),this.pxlAutoCam=new gd(this.autoCam,this.mobile),this.pxlAutoCam.active=!1,this.pxlUser=new Xu,this.pxlEnv=new hd(this.startingRoom,i,this.verbose,this.mobile),this.pxlDevice=new qu(t,Cd,this.mobile,this.autoCam),this.pxlCamera=new fd,this.pxlAnim=new Yu(this.folderDict.assetRoot,this.pxlTimer),this.pxlGuiDraws=new md(this.verbose,t,this.folderDict.assetRoot,this.folderDict.guiRoot),this.pxlQuality.setDependencies(this),this.pxlUtils.setDependencies(this),this.pxlFile.setDependencies(this),this.pxlAudio.setDependencies(this),this.pxlAutoCam.setDependencies(this),this.pxlEnv.setDependencies(this),this.pxlAnim.setDependencies(this),this.pxlDevice.setDependencies(this),this.pxlCamera.setDependencies(this),this.pxlGuiDraws.setDependencies(this),this.pxlGuiDraws.prepLoader(),this.pxlQuality.init()}set active(e=null){null==e&&(e=!this.pxlTimer.active),1==e?(this.pxlTimer.play(),this.step(!1)):this.pxlTimer.stop()}get active(){return this.pxlTimer.active}start(){this.active=!0}stop(){this.active=!1}init(){this.pxlEnv.boot(),this.pxlQuality.startBenchmark(),this.buildGui().then((()=>{this.tickLoader(),this.bootEnvironment()})).then((()=>{this.tickLoader(),this.bootEngine()})).then((()=>{this.tickLoader(),this.pxlEnv.buildComposers(),this.cameraRunAnimatorMobile(this),this.pxlGuiDraws.stepLoader("postBoot"),this.pxlEnv.mapRender(),this.pxlDevice.setCursor("grab")})).catch((e=>{this.verbose>Qh&&(console.error("Error in pxlNavCore.init(); Load level - ",e),console.error(e))})).finally((()=>{this.verbose>Jh&&console.log("pxlNavCore Promise Chain Completed; ",this.loadPercent),this.start()}))}buildGui(){return new Promise(((e,t)=>{this.pxlGuiDraws.booted(),this.pxlGuiDraws.pxlNavCanvas=document.getElementById(Cd),Td=window.innerWidth*this.pxlQuality.screenResPerc,this.pxlGuiDraws.pxlNavCanvas.width=window.innerWidth,Ed=window.innerHeight*this.pxlQuality.screenResPerc,this.pxlGuiDraws.pxlNavCanvas.height=window.innerHeight,this.pxlDevice.canCursorLock&&(this.pxlGuiDraws.pxlNavCanvas.requestPointerLock=this.pxlGuiDraws.pxlNavCanvas.requestPointerLock||this.pxlGuiDraws.pxlNavCanvas.mozRequestPointerLock||this.pxlGuiDraws.pxlNavCanvas.webkitRequestPointerLock,document.requestPointerLock=this.pxlGuiDraws.pxlNavCanvas.exitPointerLock||this.pxlGuiDraws.pxlNavCanvas.mozExitPointerLock||this.pxlGuiDraws.pxlNavCanvas.webkitExitPointerLock),this.pxlGuiDraws.mapPrepPrompts(),e(!0)}))}isMobile(){var e=!1;return e=/\b(BlackBerry|webOS|iPhone|IEMobile|Android|Windows Phone|iPad|iPod)\b/i.test(navigator.userAgent),e=this.getHashParm("m",e)}findHashParms(){var e={},t=window.location.hash;if(t.length>1)for(var i=(t=t.substring(1)).split("&"),n=0;n<i.length;n++){var r=i[n].split("=");e[r[0]]=r[1]}return e}getHashParm(e,t){return Object.keys(this.uriHashParms).includes(e)?this.uriHashParms[e]:t}tickLoader(){this.loadPercent+=1}bootEngine(){return new Promise(((e,t)=>{let i=[];for(let e=0;e<this.roomBootList.length;++e)i.push(this.pxlEnv.loadRoom(this.roomBootList[e]));Promise.all(i).then((()=>{e(!0)}))}))}bootEnvironment(){return new Promise(((e,t)=>{this.pxlEnv.engine=new $r({canvas:this.pxlGuiDraws.pxlNavCanvas,alpha:!0,antialias:!1,sortObjects:!0,depth:!0});var i={format:L,antialias:!1,sortObjects:!0,alpha:!0,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?P:E};this.pxlEnv.engine.autoClear=!0,this.pxlEnv.engine.debug.checkShaderErrors=!1,this.pxlEnv.engine.debug.checkShaderErrors=!0,this.verbose>=$h&&(this.pxlEnv.engine.extensions.get("WEBGL_depth_texture")?console.log("  ** WebGL Depth Texture support enabled **"):console.log("  ** WebGL Depth Texture NOT supported **"),console.log("-- Depth Composer pass currently not used, --"),console.log("  -- A future technology for Metal Asylum --"));if(this.pxlEnv.engine.setClearColor(this.pxlEnv.fogColor,0),this.pxlEnv.engine.setSize(Td/this.pxlQuality.screenResPerc,Ed/this.pxlQuality.screenResPerc),this.pxlEnv.engine.setPixelRatio(1),this.pxlEnv.engine.outputEncoding=z,this.pxlEnv.engine.shadowMap.enabled=!0,this.pxlEnv.engine.shadowMap.type=0,this.pxlEnv.scene=new Ge,this.pxlEnv.scene.fog=this.pxlEnv.fog,this.pxlEnv.scene.background=new At("#000000"),this.pxlEnv.scene.renderTarget=new ae(Pd*this.pxlQuality.screenResPerc,Ad*this.pxlQuality.screenResPerc,i),this.pxlEnv.scene.renderTarget.texture.format=L,this.pxlEnv.scene.renderTarget.texture.minFilter=w,this.pxlEnv.scene.renderTarget.texture.magFilter=w,this.pxlEnv.scene.renderTarget.texture.generateMipmaps=!1,this.pxlEnv.scene.renderTarget.depthBuffer=!0,this.pxlEnv.scene.renderTarget.depthTexture=new io,this.pxlEnv.scene.renderTarget.depthTexture.format=R,this.pxlEnv.scene.renderTarget.depthTexture.type=T,this.pxlEnv.scene.renderWorldPos=new ae(Pd*this.pxlQuality.screenResPerc,Ad*this.pxlQuality.screenResPerc,i),this.pxlEnv.scene.renderWorldPos.texture.format=L,this.pxlEnv.scene.renderWorldPos.texture.minFilter=x,this.pxlEnv.scene.renderWorldPos.texture.magFilter=x,this.pxlEnv.scene.renderWorldPos.texture.generateMipmaps=!1,i.alpha=!0,this.pxlEnv.scene.renderGlowTarget=new ae(parseInt(Pd*this.pxlQuality.screenResPerc),parseInt(Ad*this.pxlQuality.screenResPerc),i),this.pxlEnv.scene.renderGlowTarget.texture.format=L,this.pxlEnv.scene.renderGlowTarget.texture.generateMipmaps=!1,this.pxlGuiDraws.pxlNavCanvas.width,this.pxlGuiDraws.pxlNavCanvas.height,this.pxlCamera.camera=new ki(this.pxlEnv.pxlCamFOV,1,this.pxlEnv.camNear,this.pxlEnv.camFar),this.pxlAutoCam.camera=this.pxlCamera.camera,this.pxlCamera.cameraAimTarget=new Be,this.pxlEnv.scene.add(this.pxlCamera.cameraAimTarget),this.pxlCamera.camera.target=this.pxlCamera.cameraAimTarget,this.pxlCamera.camera.layers.enable(1),this.pxlCamera.camera.layers.enable(2),this.pxlEnv.scene.add(this.pxlEnv.userAvatarGroup),this.options.loadList.includes("Cloud3d")&&(this.pxlEnv.cloud3dTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_Cloud3d.jpg"),this.pxlEnv.cloud3dTexture.wrapS=f,this.pxlEnv.cloud3dTexture.wrapT=f),this.options.loadList.includes("SoftNoise")&&(this.pxlEnv.softNoiseTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_Soft3d.jpg"),this.pxlEnv.softNoiseTexture.wrapS=f,this.pxlEnv.softNoiseTexture.wrapT=f),this.options.loadList.includes("SmoothNoise")&&(this.pxlEnv.detailNoiseTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"Noise_UniformSmooth.jpg"),this.pxlEnv.detailNoiseTexture.wrapS=f,this.pxlEnv.detailNoiseTexture.wrapT=f),this.options.loadList.includes("ChromaticAberration")){let e=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"uv_ChromaticAberration_1k.png");e.minFilter=w,e.magFilter=w,this.pxlEnv.chroAberUVTexture=e}var n;this.options.loadList.includes("WarpAnimTexture")&&(this.pxlEnv.blockAnimTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"uv_blockPortalWarp.jpg"),this.pxlEnv.blockAnimTexture.minFilter=w,this.pxlEnv.blockAnimTexture.magFilter=w),this.options.loadList.includes("MathFuncs")&&(this.pxlEnv.mathFuncsTexture=this.pxlUtils.loadTexture(this.folderDict.assetRoot+"MathFuncs.jpg"),this.pxlEnv.mathFuncsTexture.minFilter=w,this.pxlEnv.mathFuncsTexture.magFilter=w);n=((e=null)=>{var t={t:[0,0,0],r:[0,0,0],s:[1,1,1]};return null!=e&&(t[e[0]]=e[1]),t})();let r="";this.mobile&&(r="_mobile");{let e=this.folderDict.assetRoot+"EnvironmentAssets"+r+".fbx";this.pxlFile.loadSceneFBX(e,undefined,n,this.verbose,"EnvironmentAssets",[this.pxlEnv.scene])}this.pxlEnv.engine.shadowMap.enabled=!0,this.mobile?this.pxlEnv.engine.shadowMap.type=0:this.pxlEnv.engine.shadowMap.type=2;var s=new kl(16777215,.05);this.pxlEnv.lightList.push(s),this.pxlEnv.scene.add(s);var o=new Nl(16777215,.1);o.position.set(1e3,550,1200),this.pxlEnv.lightList.push(o),this.pxlEnv.scene.add(o),e(!0)}))}cameraRunAnimatorMobile(e){let t=!1,i=Object.keys(e.pxlEnv.geoLoadList);for(let n=0;n<i.length&&(t=0==e.pxlEnv.geoLoadList[i[n]],t=t&&!e.pxlEnv.roomSceneList[n]?.booted,!t);++n);t?setTimeout((()=>{e.cameraRunAnimatorMobile(e)}),300):e.initRoomList(e)}initRoomList(e){e.pxlGuiDraws.stepLoader("camAnim"),e.pxlCamera.setTransform(e.pxlEnv.camInitPos,e.pxlEnv.camInitLookAt),e.pxlCamera.updateCamera(),e.pxlEnv.buildRoomEnvironments(),e.monitorRoomLoad(e)}monitorRoomLoad(e,t=0){let i=!1,n=Object.keys(e.pxlEnv.geoLoadList);for(let t=0;t<n.length&&(i=0==e.pxlEnv.geoLoadList[n[t]],i=i&&!e.pxlEnv.roomSceneList[t]?.booted,!i);++t);i?setTimeout((()=>{e.monitorRoomLoad(e)}),300):(e.pxlQuality.mapAutoQualityUpdate(1,!0),e.runPrepDrawScenes(0,!0,[]))}runPrepDrawScenes(e=0,t=!0,i=[]){if(e++,i.length>0){if(t){t=!1;let e=i[i.length-1];this.pxlCamera.warpToRoom(e)}if(this.pxlCamera.colliderPrevObjHit=null,this.pxlEnv.mapRender(!1),e%10==0){let e=i.pop();t=!0,this.pxlGuiDraws.stepLoader(e)}requestAnimationFrame((()=>{this.runPrepDrawScenes(e,t,i)}))}else this.pxlGuiDraws.stepLoader("Post Room Prep"),this.pxlNavPrepSettings()}pxlNavPrepSettings(){this.pxlCamera.warpToRoom(this.pxlEnv.bootRoom,!0),this.pxlQuality.endBenchmark(),this.pxlGuiDraws.stepLoader("Nav Settings"),this.startPxlNav()}startPxlNav(){this.pxlTimer.init(),this.pxlTimer.play(),this.pxlGuiDraws.applyCookies(),this.pxlGuiDraws.pxlNavCanvas&&this.pxlGuiDraws.pxlNavCanvas.focus();let e=this.pxlEnv.roomSceneList[this.pxlEnv.currentRoom];e.active=!0,e.startTime=this.pxlTimer.msRunner.x,this.pxlEnv.roomPostGuiCalls.forEach((e=>{e.postGuiEvent()})),this.pxlEnv.roomPostGuiCalls=[],this.pxlAutoCam.enabled&&this.pxlGuiDraws.guiToggleVisibility(!1),this.pxlAutoCam.init(),this.pxlDevice.resizeRenderResolution(),this.pxlEnv.mapRender(),this.pxlQuality.setDependentSettings(),this.pxlGuiDraws.stepLoader("Starting...");let t=this;setTimeout((()=>{t.pxlEnv.postBoot(),t.pxlGuiDraws.mapPrompt&&t.pxlGuiDraws.promptFader(t.pxlGuiDraws.mapPrompt,!1,null,!0),t.pxlGuiDraws.mapPromptBG&&t.pxlGuiDraws.promptFader(t.pxlGuiDraws.mapPromptBG,!1,null,!1),t.emit("booted",!0)}),200)}step(e=!1){this.pxlTimer.active&&(this.pxlTimer.step(),e&&requestAnimationFrame((()=>{this.step()})))}bootTimer(){this.pxlTimer.init(),this.pxlTimer.play()}stopTimer(){this.pxlTimer.stop()}pauseTimer(){this.pxlTimer.pause()}prepPromptFader(e,t=!1){let i=e;("string"!=typeof i||(i=document.getElementById(i),i))&&(i.classList.add("fader"),i.classList.add(t?"visOn":"visOff"),i.style.display=t?"inline-block":"none")}promptFader(e,t,i=null,n=!1){if("string"!=typeof e||(e=document.getElementById(e)))if(e.classList.value.indexOf("fader")<0&&e.classList.add("fader"),t)e.style.display="inline-block",setTimeout((()=>{e.classList.contains("visOff")&&(e.classList.remove("visOff"),e.classList.add("visOn"),null!=i&&(e.setAttribute("fadeOut",clockTime+1e3*i),fadeOutList.push(e)))}),50);else if(e.classList.remove("visOn"),e.classList.add("visOff"),n){["webkitTransitionEnd","otransitionend","oTransitionEnd","msTransitionEnd","transitionend"].forEach((t=>{e.addEventListener(t,(()=>{let t=e.parentNode;t&&t.removeChild(e)}))}))}else setTimeout((()=>{e.classList.contains("visOff")&&(e.style.display="none")}),1e3)}addRooms(e){for(let t=0;t<e.length;++t)this.pxlEnv.roomNameList.includes(e[t])||this.booted||this.roomBootList.push(e[t])}setBootRoom(e,t){console.log(e,t),this.pxlEnv.bootRoom=e,this.pxlEnv.bootLocation=t}setLoaderPhrases(e){this.pxlGuiDraws.setLoaderPhrases(e)}initExtension(e,t,i){this.pxlExtensions.init(e,t,i)}startExtension(e,t,i){this.pxlExtensions.start(e,t,i)}stopExtension(e,t,i){this.pxlExtensions.stop(e,t,i)}extensionStatus(e){return this.pxlExtensions.status(e)}trigger(e,t=null,i=null){switch(e=e.toLowerCase()){case"warptoroom":this.pxlCamera.warpToRoom(t,!0,i);break;case"ping":this.emit("pingPong","pong");break;case"roommessage":let e=i.type,n=i.value;null==t&&(t=this.pxlEnv.currentRoom),this.pxlEnv.sendRoomMessage(t,e,n)}}subscribe(e,t){this.validEventsKeys.includes(e)?"pxlNavEventNameHere"==e||"help"==e||"test"==e?(console.warn("Warning : `pxlNav.subscribe( 'pxlNavEventNameHere', ... )` was used; need some help?"),console.log("Valid Event Types : "),this.validEventsKeys.forEach((e=>{console.log("  - ",e," : ",this.validEvents[e])}))):this.callbacks[e]=t:console.warn("Warning : `pxlNav.subscribe( '"+e+"', ... )` was used; use 'help' for a list of valid events.")}emit(e,t,i=null){if(this.callbacks[e]){let n={type:e,value:t};null!==i&&(n.status=i),this.callbacks[e](n)}}},exports.pxlNavVersion="0.0.9";
