{"version":3,"file":"static/js/78.5eff9c7c.chunk.js","mappings":"8FAgBAA,KAAKC,UAAYC,UACf,MAAM,KAAEC,EAAI,KAAEC,GAASC,EAAMD,KAE7B,OAAQD,GACN,IAAK,YAdmBD,WAC1B,IAGEI,QAAQC,IAAI,wCACd,CAAE,MAAOC,GACPF,QAAQE,MAAM,mCAAoCA,EACpD,GAQUC,GACNT,KAAKU,YAAY,CAAEP,KAAM,gBACzB,MAEF,IAAK,eAMD,YAJAH,KAAKU,YAAY,CACfP,KAAM,QACNK,MAAO,+BAkBb,QACEF,QAAQK,KAAK,wBAAyBR,GAC1C,C","sources":["components/pxlNav/extensions/PoseEngine/PoseEngine_worker.js"],"sourcesContent":["// worker.js\r\n/* eslint-disable no-restricted-globals */\r\n\r\nlet poseModel = null;\r\n\r\n// Initialize pose model when worker starts\r\nconst initializePoseModel = async () => {\r\n  try {\r\n    // TODO: Import and initialize your pose detection model here\r\n    // Example: poseModel = await tf.loadLayersModel('/path/to/model');\r\n    console.log(\"Pose model initialization placeholder\");\r\n  } catch (error) {\r\n    console.error(\"Failed to initialize pose model:\", error);\r\n  }\r\n};\r\n\r\nself.onmessage = async (event) => {\r\n  const { type, data } = event.data;\r\n\r\n  switch (type) {\r\n    case \"init\":\r\n      await initializePoseModel();\r\n      self.postMessage({ type: \"initialized\" });\r\n      break;\r\n\r\n    case \"processFrame\":\r\n      if (!poseModel) {\r\n        self.postMessage({ \r\n          type: \"error\", \r\n          error: \"Pose model not initialized\" \r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { imageData } = data;\r\n        // TODO: Replace with actual pose estimation\r\n        const pose = await poseModel.estimate(imageData);\r\n        self.postMessage({ type: \"result\", pose });\r\n      } catch (error) {\r\n        self.postMessage({ \r\n          type: \"error\", \r\n          error: error.message \r\n        });\r\n      }\r\n      break;\r\n\r\n    default:\r\n      console.warn(\"Unknown message type:\", type);\r\n  }\r\n};\r\n"],"names":["self","onmessage","async","type","data","event","console","log","error","initializePoseModel","postMessage","warn"],"sourceRoot":""}