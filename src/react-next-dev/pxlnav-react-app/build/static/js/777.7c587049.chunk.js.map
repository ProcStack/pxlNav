{"version":3,"file":"static/js/777.7c587049.chunk.js","mappings":"mKAEO,MAAMA,UAAkBC,EAAAA,cAC7BC,WAAAA,GACEC,KAAKC,MAAQC,SAASC,cAAc,SACpCH,KAAKI,OAAS,KACdJ,KAAKK,eAAgB,EACrBL,KAAKM,QAAS,CAChB,CAEAC,IAAAA,CAAKC,GACHC,UAAUC,aAAaC,aAAa,CAAEV,OAAO,EAAMW,OAAO,IACvDC,MAAMT,IACLJ,KAAKI,OAASA,EACdJ,KAAKC,MAAMa,UAAYd,KAAKI,OAC5BJ,KAAKC,MAAMc,OACXf,KAAKK,eAAgB,EACrBW,QAAQC,IAAI,yBACRT,GAAUA,EAAS,KAAK,IAE7BU,OAAOC,IACNH,QAAQG,MAAM,gCAAiCA,GAC3CX,GAAUA,EAASW,EAAM,GAEnC,CAGAC,KAAAA,CAAMZ,GACAR,KAAKK,eACPL,KAAKM,QAAS,EACdU,QAAQC,IAAI,qBACRT,GAAUA,EAAS,QAEvBQ,QAAQG,MAAM,gCACVX,GAAUA,EAAS,IAAIa,MAAM,iCAErC,CAEAC,KAAAA,CAAMd,GACJR,KAAKuB,KAAKf,EACZ,CAEAe,IAAAA,CAAKf,GACCR,KAAKI,QACPJ,KAAKI,OAAOoB,YAAYC,SAASC,GAAUA,EAAMH,SACjDvB,KAAKC,MAAMa,UAAY,KACvBd,KAAKK,eAAgB,EAErBW,QAAQC,IAAI,qBAEZjB,KAAKM,QAAS,EAEVE,GACFA,EAAS,OAGPA,GACDA,EAAS,IAAIa,MAAM,gCAG1B,E,oDC5DK,MAAMvB,EACXC,WAAAA,GACEC,KAAKM,QAAS,EACdN,KAAK2B,SAAU,EACf3B,KAAK4B,UAAY,CAAC,CACpB,CAGArB,IAAAA,GACE,CAKFa,KAAAA,GACEpB,KAAKM,QAAS,CAChB,CACAgB,KAAAA,GACEtB,KAAKuB,MACP,CACAA,IAAAA,GACEvB,KAAKM,QAAS,CAChB,CAIAuB,SAAAA,CAAWC,EAAOtB,GACXR,KAAK4B,UAAUE,KAClB9B,KAAK4B,UAAUE,GAAS,IAE1B9B,KAAK4B,UAAUE,GAAOC,KAAMvB,EAC9B,CACAwB,WAAAA,CAAaF,EAAOtB,GACdR,KAAK4B,UAAWE,KAClB9B,KAAK4B,UAAWE,GAAU9B,KAAK4B,UAAWE,GAAQG,QAAQC,GAAMA,IAAO1B,IAE3E,CACA2B,IAAAA,CAAML,EAAOM,GACPpC,KAAK4B,UAAUE,IACjB9B,KAAK4B,UAAWE,GAAQL,SAASS,GAAMA,EAAGE,IAE9C,CAIAC,OAAAA,GACErC,KAAKsC,SAEP,E","sources":["components/pxlNav/extensions/WebCam.js","components/pxlNav/extensions/ExtensionBase.js"],"sourcesContent":["import { ExtensionBase } from './ExtensionBase.js';\r\n\r\nexport class WebCamera extends ExtensionBase {\r\n  constructor(){\r\n    this.video = document.createElement('video');\r\n    this.stream = null;\r\n    this.isInitialized = false;\r\n    this.active = false;\r\n  }\r\n\r\n  init(callback) {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false })\r\n      .then((stream) => {\r\n        this.stream = stream;\r\n        this.video.srcObject = this.stream;\r\n        this.video.play();\r\n        this.isInitialized = true;\r\n        console.log(\"WebCamera Initialized\");\r\n        if (callback) callback(null);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error initializing WebCamera:\", error);\r\n        if (callback) callback(error);\r\n      });\r\n  }\r\n\r\n  \r\n  start(callback) {\r\n    if (this.isInitialized) {\r\n      this.active = true;\r\n      console.log(\"WebCamera Started\");\r\n      if (callback) callback(null);\r\n    } else {\r\n      console.error(\"WebCamera is not initialized\");\r\n      if (callback) callback(new Error(\"WebCamera is not initialized\"));\r\n    }\r\n  }\r\n\r\n  pause(callback){\r\n    this.stop(callback);\r\n  }\r\n\r\n  stop(callback) {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach((track) => track.stop());\r\n      this.video.srcObject = null;\r\n      this.isInitialized = false;\r\n      \r\n      console.log(\"WebCamera Stopped\");\r\n\r\n      this.active = false;\r\n\r\n      if (callback){\r\n        callback(null);\r\n      }\r\n    } else {\r\n      if (callback){\r\n         callback(new Error(\"WebCamera is not initialized\"));\r\n      }\r\n    }\r\n  }\r\n}","export class ExtensionBase{\r\n  constructor() {\r\n    this.active = false;\r\n    this.verbose = false;\r\n    this.callbacks = {};\r\n  }\r\n  // -- -- --\r\n  \r\n  init(){\r\n    // Initialize --\r\n  }\r\n  \r\n  // -- -- --\r\n\r\n  start() {\r\n    this.active = true;\r\n  }\r\n  pause() {\r\n    this.stop();\r\n  }\r\n  stop() {\r\n    this.active = false;\r\n  }\r\n  \r\n  // -- -- --\r\n\r\n  subscribe( event, callback ){\r\n    if (!this.callbacks[event]) {\r\n      this.callbacks[event] = [];\r\n    }\r\n    this.callbacks[event].push( callback );\r\n  }\r\n  unsubscribe( event, callback ){\r\n    if( this.callbacks[ event ] ) {\r\n      this.callbacks[ event ] = this.callbacks[ event ].filter( fn => fn !== callback );\r\n    }\r\n  }\r\n  emit( event, data ) {\r\n    if( this.callbacks[event] ){\r\n      this.callbacks[ event ].forEach( fn => fn(data) );\r\n    }\r\n  }\r\n\r\n  // -- -- --\r\n\r\n  destroy(){\r\n    this.disable();\r\n    // Clean up --\r\n  }\r\n}"],"names":["WebCamera","ExtensionBase","constructor","this","video","document","createElement","stream","isInitialized","active","init","callback","navigator","mediaDevices","getUserMedia","audio","then","srcObject","play","console","log","catch","error","start","Error","pause","stop","getTracks","forEach","track","verbose","callbacks","subscribe","event","push","unsubscribe","filter","fn","emit","data","destroy","disable"],"sourceRoot":""}