"use strict";(self.webpackChunkpxlnav_react_app=self.webpackChunkpxlnav_react_app||[]).push([[800],{800:(e,o,r)=>{r.r(o),r.d(o,{MediaPipePoseEngine:()=>t});class t{constructor(){this.workerScriptUrl="./PoseEngine_worker.js",this.worker=null,this.booted=!1}static async loadScriptWithProgress(e,o){return new Promise(((r,t)=>{const i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="text",i.onprogress=e=>{if(e.lengthComputable&&"function"===typeof o){const r=Math.round(e.loaded/e.total*100);o(r)}},i.onload=()=>{if(200===i.status){const e=document.createElement("script");e.textContent=i.responseText,document.head.appendChild(e),r()}else t(new Error(`Failed to load script: ${e}`))},i.onerror=()=>t(new Error(`Network error while loading: ${e}`)),i.send()}))}async init(e){try{console.log("Loading MediaPipe..."),await t.loadScriptWithProgress("https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/face_mesh.js",e),this.worker=new Worker(this.workerScriptUrl),this.booted=!0,console.log("MediaPipe Pose Engine Initialized")}catch(o){console.error("Error initializing MediaPipePoseEngine:",o)}}sendMessage(e){this.booted?this.worker.postMessage(e):console.warn("MediaPipePoseEngine is not initialized.")}onMessage(e){this.worker?this.worker.onmessage=o=>e(o.data):console.warn("WebWorker not initialized.")}terminateWorker(){this.worker&&(this.worker.terminate(),this.worker=null,console.log("WebWorker terminated."))}}}}]);
//# sourceMappingURL=800.4cbf5f8a.chunk.js.map