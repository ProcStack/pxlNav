///////////////////////////////////////////////
// Asset & Scene Utility Scripts for pxlNav  //
//   Maya Pipeline; Mel Window               //
//   Written by Kevin Edzenga 2020-2024      //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
// By running the mel script contents here,  //
//   A window will launch with two tabs.     //
// Tab 1 is the `Scene Group Manager`        //
// Tab 2 is the `Asset Attributes`           //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
///////////////////////////////////////////////


global proc pxlNav_launcher(){
    global string $pxlNavName = "AssetPrepper";
    global int $pxlNav_ww=485; // window width
    global int $pxlNav_wh=810; // window height
    global int $pxlNav_btnHeight=30;// Button height
    
    global string $pxlNav_descriptionBox="";// Help description box
    
    global string $pxlNav_imgDirectory="pxlNavAssets";
    global string $pxlNav_imgDirectory;
    $pxlNav_imgDirectory=(`internalVar -userScriptDir`+ $pxlNav_imgDirectory + "/");
    global string $pxlNav_iconDirectory;
    $pxlNav_iconDirectory=(`internalVar -userScriptDir`+$pxlNav_imgDirectory + "/");
    string $scriptName="pxlNav";
    string $version="v0.04";
    $pxlNavName=($scriptName +" "+ $version);
    
    TartarusPulldownMenu();
}

global proc string pxlNav_camelToHumanReadable(string $label){
    string $caps[]={"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"};
    int $ccc=0;
    string $retStr=$label;
    for($ccc=0;$ccc<size($caps);++$ccc){
        $label= substituteAllString($label, $caps[$ccc], (" "+$caps[$ccc])) ;
    }
    return $label;
}

global proc string[] pxlNav_findEnvGroups(){
    string $envRoot[]=`ls -tr -l`;
    int $x=0;
    string $envGroupChildren[];
    string $envGroupObj;
    string $token[];
    for($x=0;$x<size($envRoot);++$x){
        tokenize $envRoot[$x] "|" $token;
        if( size($token)<2 ){
            $envGroupChildren=`listRelatives -f $envRoot[$x]`;
            print($envGroupChildren);
            print("\n");
            if( `size($envGroupChildren)`==0){
                continue;
            }
            if( `objectType($envGroupChildren[0])` == "transform" ){
                $envGroupObj=$envRoot[$x];
                break;
            }
        }
    }
    string $retArr[]=`listRelatives -children $envGroupObj`;
    stringArrayInsertAtIndex(0, $retArr, $envGroupObj);
    
    return $retArr;
}

// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //

global proc pxlNav_prepColliderAttributes_desc(){
	global string $pxlNav_descriptionBox;
    string $desc = "Adds 'checkX' and 'checkZ' attributes to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepColliderAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "checkX"  -at long  -min -2 -max 1 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".checkX");
        addAttr -ln "checkZ"  -at long  -min -2 -max 1 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".checkZ");
    }
}
//pxlNav_prepColliderAttributes();



global proc pxlNav_prepWarpPadAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'warpTo' attribute to selected Collider.";
    $desc += "   pxlNav will place a particle system of that name at that location.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepWarpPadAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "warpToCam"  -dt "string" $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".warpToCam");
    }
}
//pxlNav_prepWarpPadAttribute();



global proc pxlNav_prepDoubleSidedAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'doubleSided' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepDoubleSidedAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "doubleSided"  -at bool -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".doubleSided");
    }
}
//pxlNav_prepDoubleSidedAttributes();

global proc pxlNav_prepGlassAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'isGlass' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepGlassAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "isGlass"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".isGlass");
    }
}
//pxlNav_prepGlassAttributes();

global proc pxlNav_prepLiquidAttributes_desc(){ 
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'isLiquid' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepLiquidAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "isLiquid"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".isLiquid");
    }
}
//pxlNav_prepLiquidAttributes();



global proc pxlNav_prepItemBaseGeoAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'itemBase' attribute to selected objects.";
    $desc += "\n  The geometry will be used as the 'aura' or surrounding object around the item in pxlNav.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepItemBaseGeoAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "itemBase"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".itemBase");
    }
}
//pxlNav_prepItemBaseGeoAttribute();

global proc pxlNav_prepItemGeoAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Add 'itemGeo', 'itemName', 'itemMessage' attribute to selected Locator.";
    $desc += "\n'itemGeo' - Boolean \n   The geo used for Item .";
    $desc += "\n'itemName' - String \n   The pxlNav item name.";
    $desc += "\n'itemMessage' - String \n   The message displayed on pickup.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepItemGeoAttribute(){
    string $sel[]=`ls -sl -l`;
    string $selShort[]=`ls -sl`;
    string $token[];
    for($x=0; $x<size($sel); ++$x){
        tokenize $selShort[$x] "_" $token;
        print $token;
        addAttr -ln "itemGeo"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".itemGeo");
        addAttr -ln "itemName"  -dt "string" $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".itemName");
        setAttr -type "string" ($sel[$x]+".itemName") $token[0];
        addAttr -ln "itemMessage"  -dt "string" $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".itemMessage");
        setAttr -type "string" ($sel[$x]+".itemMessage") $token[0];
    }
}
//pxlNav_prepItemGeoAttribute();


global proc pxlNav_prepScriptedAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'Scripted' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepScriptedAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "Scripted"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".Scripted");
    }
}
//pxlNav_prepScriptedAttribute();

global proc pxlNav_prepInstanceAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'Instance' attribute to selected objects.";
    $desc += "\n   Set the name of the object from your 'Instances' group.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepInstanceAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "Instance"  -dt "string" $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".Instance");
    }
}
//pxlNav_prepInstanceAttribute();

global proc pxlNav_prepInstanceFixAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'fixInstMatrix' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepInstanceFixAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "fixInstMatrix"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".fixInstMatrix");
    }
}
//pxlNav_prepInstanceFixAttribute();





global proc pxlNav_createInstanceLocatorFromSelection_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Creates a locator with 'Instance' attribute pre-set.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_createInstanceLocatorFromSelection(){
    string $sel[]=`ls -sl`;
    if( `size($sel)`==0 ){
        error("Select an Instance Object you'd like to create a Locator with 'Instance' attribute pre-set.");
    }
    string $loc[]=`spaceLocator`;
    select $loc[0];
    pxlNav_prepInstanceAttribute();
    setAttr -type "string" ($loc[0]+".Instance") $sel[0];
    
    select -cl;
    select $sel[0];
    select -add $loc[0];
    parentConstraint -weight 1 $sel[0] $sel[1];
    connectAttr -f ($sel[0]+".scale") ($sel[1]+".scale");
}
//pxlNav_createInstance();

global proc pxlNav_prepEmitterAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'Emitter' attribute to selected Locator.";
    $desc += "   pxlNav will place a particle system of that name at that location.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepEmitterAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "Emitter"  -dt "string" $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".Emitter");
    }
}
//pxlNav_prepEmitterAttribute();

global proc pxlNav_prepCameraThirdPersonAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'isThirdPerson' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepCameraThirdPersonAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "isThirdPerson"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".isThirdPerson");
    }
}
//pxlNav_prepCameraThirdPersonAttribute();


global proc pxlNav_prepGlowPassAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'GlowPass' and 'GlowPerc' attributes to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepGlowPassAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "GlowPass"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".GlowPass");
        addAttr -ln "GlowPerc"  -at double  -min 0 -max 2 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".GlowPerc");
    }
}
//pxlNav_prepGlowPassAttribute();

global proc pxlNav_prepGlowPercAttribute_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'GlowPerc' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepGlowPercAttribute(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "GlowPerc"  -at double  -min 0 -max 2 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".GlowPerc");
    }
}
//pxlNav_prepGlowPercAttribute();

global proc pxlNav_prepHoverAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'Hover' attributes to selected objects.";
    $desc += "\n  Subscribe to that object's event in your pxlRoom.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepHoverAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "Hover"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".Hover");
    }
}
//pxlNav_prepHoverAttributes();

       
global proc pxlNav_prepClickAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'Click' attributes to selected objects.";
    $desc += "\n  Subscribe to that object's event in your pxlRoom.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepClickAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "Click"  -at bool -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".Click");
    }
}
//pxlNav_prepClickAttributes();
       
       
global proc pxlNav_prepCamPathAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "For Auto Camera Rigs; Adds 'duration' attribute to polygon / nurb curve objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepCamPathAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "duration"  -at long  -min 1 -max 1000 -dv 50 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".duration");
    }
}
//pxlNav_prepCamPathAttributes();

global proc pxlNav_prepScreenAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'djScreen' and 'performerScreen' attributes to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepScreenAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "djScreen"  -at long  -min 0 -max 3 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".djScreen");
        addAttr -ln "performerScreen"  -at long  -min 0 -max 3 -dv 0 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".performerScreen");
    }
}
//pxlNav_prepScreenAttributes();

global proc pxlNav_prepDjAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'dj' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepDjAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "dj"  -at long  -min 0 -max 3 -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".dj");
    }
}
//pxlNav_prepDjAttributes();

global proc pxlNav_prepPerformerAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'performer' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepPerformerAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "dj"  -at long  -min 0 -max 3 -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".performer");
    }
}
//pxlNav_prepPerformerAttributes();

global proc pxlNav_prepAdAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'ad' attribute to selected objects.";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepAdAttributes(){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        addAttr -ln "ad"  -at long  -min 0 -max 3 -dv 1 $sel[$x];
        setAttr -e-keyable true ($sel[$x]+".ad");
    }
}
//pxlNav_prepAdAttributes();

global proc pxlNav_prepVideoAttributes_desc(){
   global string $pxlNav_descriptionBox;
    string $desc = "Adds 'video' and 'portrait' attributes to selected objects.";
    $desc += "\n\n*Note: To edit 'String' attributes, edit in-\n   Attribute Editor > Transform > Extra Attributes";
	scrollField -e -tx $desc $pxlNav_descriptionBox;
}
global proc pxlNav_prepVideoAttributes(string $vidName){
    string $sel[]=`ls -sl -l`;
    for($x=0; $x<size($sel); ++$x){
        if( !`attributeExists "video" $sel[$x]`){
            addAttr -ln "video" -dt "string"  $sel[$x];
            setAttr -e-keyable true ($sel[$x]+".video");
        }
        if( !`attributeExists "portrait" $sel[$x]`){
            addAttr -ln "portrait"  -at long  -min 0 -max 3 -dv 0 $sel[$x];
            setAttr -e-keyable true ($sel[$x]+".portrait");
        }
        setAttr -type "string" ($sel[$x]+".video") $vidName;
    }
}
//pxlNav_prepVideoAttributes("JimBobFallsDownVideo");




// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //


proc pxlNav_parConstScaleConnectMulti(){
    string $sel[]=`ls -sl`;
    
    
    string $animConnection[];
    string $parconst[];
    string $group, $loc, $geo;
    int $x=0;
    int $mid=int(size($sel)*.5);
    for($x=0; $x<$mid; ++$x){
        $loc = ($sel[$x]);
        $geo = ($sel[$mid+$x]);

        $parconst=`parentConstraint -weight 1 $loc $geo`;
        connectAttr -f ($loc+".scale") ($geo+".scale");
        setAttr ($parconst[0]+".interpType") 0;
    }
    
}
//pxlNav_parConstScaleConnectMulti();




// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //



// Prep for FXB export

global proc pxlNav_saveAntibodyDesktopAndMobile_FBX( string $projectName ){
    string $curSceneName=`file -q -sn`;
    string $token[];
    tokenize $curSceneName "." $token;
    
    // Prep for Live
    
    
    select -r $projectName ;
    file -force -options "v=0;" -typ "FBX export" -es ($token[0]+".fbx");
        
    string $queue=`undoInfo -ock`;
    string $nameList[]={
            "Items",
            "PortalExit",
            "RoomWarpZoneVisuals",
            "Colliders",
            "Instances",
            "Clickable",
            "Glass",
            "Chrome",
            "Side_Walk_Shop",
            "Stairs_Metal_Gray",
            "WaveGlow",
            "Metal_RoofTop_SupportRails",
            "Metal_Black",
            "InstanceTransforms"
    };
    string $sl[]=`ls -l $nameList`;
    select $sl;
    parent -w;
    
    // Lower Texture Quality --
    //   Override textures with lower res version so scenes can load quicker in browser
    setAttr -type "string" TEXTURE_USING_TEXTURE_VARIATIONS.fileTextureName "Local/Path/To/Image_1k.jpg";
    
    select -r $projectName ;
    file -force -options "v=0;" -typ "FBX export" -es ($token[0]+"_mobile.fbx");
    
    undoInfo -cck;
    undo;
    print( "Desktop FBX Saved To - "+$token[0]+".fbx\n");
    print( "Mobile FBX Saved To - "+$token[0]+"_mobile.fbx");
}
//pxlNav_saveAntibodyDesktopAndMobile_FBX( "CampfireEnvironment" );




// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //
// -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //



global proc pxlNav_assetPrepWindow(){
	global string $pxlNavName;
	global string $pxlNavAssetPrepWindowObject;
	global string $pxlNav_imgDirectory;
	global float $pxlNavMinEdge;
    global string $pxlNav_descriptionBox;
	string $toolWindow="User Data Attributes";
	string $toolWindowName=($toolWindow +" - "+ $pxlNavName);
	if(`window -exists $pxlNavAssetPrepWindowObject`){
		deleteUI -window $pxlNavAssetPrepWindowObject;
	}
	
    // -- -- -- -- -- -- -- -- -- -- -- -- -- --
	
	global int $pxlNav_ww;
	global int $pxlNav_wh;
	global int $pxlNav_btnHeight;
	
	string $envGroups[]={"MainScene","Sky","Glass","Instances","Lights","Camera","AutoCamPaths","Colliders","Items","Clickable","Scripted"};
	
	string $assetFuncs[]={
	    ".-General/Visual Attrs-.",
       "pxlNav_prepDoubleSidedAttributes",
       "---",
       "pxlNav_prepInstanceAttribute","pxlNav_prepInstanceFixAttribute","pxlNav_createInstanceLocatorFromSelection",
       "---",
       "pxlNav_prepScriptedAttribute",
       "---",
       "pxlNav_prepGlassAttributes",
       "pxlNav_prepLiquidAttributes",
       "---",
       "pxlNav_prepGlowPassAttribute","pxlNav_prepGlowPercAttribute",
       "---",
       "pxlNav_prepColliderAttributes", "pxlNav_prepWarpPadAttribute",
       "---",
       "pxlNav_prepClickAttributes","pxlNav_prepHoverAttributes",
       "---",
       "pxlNav_prepCamPathAttributes",
       "---",
	    "pxlNav_prepEmitterAttribute",
       "---",
       "pxlNav_prepItemBaseGeoAttribute","pxlNav_prepItemGeoAttribute",
	    
	    ".-Video/Specalized Attrs-.",
	    "pxlNav_prepVideoAttributes",
       "---",
       "pxlNav_prepScreenAttributes","pxlNav_prepDjAttributes","pxlNav_prepPerformerAttributes","pxlNav_prepAdAttributes"
	};       
       

   string $replacePrefix="prep";
   string $toPrefix = "Add";
    int $x=0;
    int $c=0;
	int $v=0;
    string $token[];
    string $label="Default";
	
    // -- -- -- -- -- -- -- -- -- -- -- -- -- --
    
	$pxlNavAssetPrepWindowObject=`window -iconName $toolWindowName  -title $toolWindowName`;
	menuBarLayout  tartarusSoloWindowPulldowns;
		menu -label "Info";
			menuItem -label "Walkthrough";// -c "walkthroughWindowTARTARUS";
			menuItem -label "Contact Info";// -c "contactWindowTARTARUS";
		setParent..;

    paneLayout -cn "horizontal2" -ps 1 100 87;
    
    
   string $colLayout=`columnLayout -columnAttach "both" 5 -rowSpacing 1 -columnWidth ($pxlNav_ww-5) -backgroundColor .2 .2 .2 `;
 	setParent..;
    string $tabs = `tabLayout -innerMarginWidth 1 -innerMarginHeight 1 -p $colLayout`;
    
    string $sceneGroupsTab = `scrollLayout -horizontalScrollBarThickness 0 -verticalScrollBarThickness 10 -cr 1 -backgroundColor .35 .35 .35 -h ($pxlNav_wh-55-$pxlNav_btnHeight)`;
		columnLayout -adj 1  -backgroundColor .35 .35 .35 ;
			image -image ($pxlNav_imgDirectory+"pxlNav_windowHeader_sceneGroups.png") -h 35 -w 446;
			string $groupDescText = "- Feature not implemented yet -";
			$groupDescText += "\n\nHowever, these are the available Group types pxlNav understands.";
			$groupDescText += "\n\nStart with a top group --";
			$groupDescText += "\n+YourEnvironmentName_grp";
			$groupDescText += "\n   |-'Instances_grp'";
			$groupDescText += "\n   |-'Camera_grp'";
			$groupDescText += "\n   |-'[...]'";
			$groupDescText += "\n   |-'MainScene_grp'";
			
			$groupDescText += "\n\nName your groups with the name of the group below somewhere in the name.  As long as 'Camera' is in your group name somewhere, it will load just fine.";
			$groupDescText += "\n  So your camera group can be 'Camera', 'Camera_grp', 'FunTimesCamera_grp', etc.";
			$groupDescText += "\nYou're main geometry should be in your 'Scene' group.";
			
			$groupDescText += "\n\nSome Groups have 'Asset Attributes' you can use as well, leaving your object in your 'MainScene'";
			
			$groupDescText += "\n\nRequired groups to use the associated feature -";
			$groupDescText += "\n -Camera";
			$groupDescText += "\n -AutoCamPaths";
			$groupDescText += "\n -Sky";
			$groupDescText += "\n -Colliders";
			$groupDescText += "\n -Items ( For the Geo to use as the Item )";
			$groupDescText += "\n -Instances ( For the Geo to instance, not locations )";
			$groupDescText += "\n\nAsset Attribute supported -";
			$groupDescText += "\n -Glass";
			$groupDescText += "\n -Clickable";
			$groupDescText += "\n -Scripted";
			$groupDescText += "\n\nLights will load from 'Lights_grp' or 'MainScene_grp'.";
			$groupDescText += "\n\nCameras can either be -";
			$groupDescText += "\n+YourEnvironmentName_grp";
			$groupDescText += "\n   |-Cameras_grp";
			$groupDescText += "\n      |- Position_loc";
			$groupDescText += "\n      |- LookAt_loc";
			$groupDescText += "\nFor Camera Positions, Group each locator-";
			$groupDescText += "\n+YourEnvironmentName_grp";
			$groupDescText += "\n   |- Cameras_grp";
			$groupDescText += "\n       |- CamLocationName_grp";
			$groupDescText += "\n           |- Position_loc";
			$groupDescText += "\n           |- LookAt_loc";
			$groupDescText += "\n       |- OtherLocationName_grp";
			$groupDescText += "\n           |- Position_loc";
			$groupDescText += "\n           |- LookAt_loc";
			scrollField -editable false -height 350 -isObscured -wordWrap true -backgroundColor .8 .8 .8 -text $groupDescText;
				setParent..;
				string $envGrpCol=`columnLayout -adj 1 -backgroundColor .55 .55 .55`;
				setParent..;
				
				int $grpIndex;
				string $existingEnvGroups[]=pxlNav_findEnvGroups();
				int $existsVal;
				for($v=0;$v<size($envGroups);++$v){
				    $label=pxlNav_camelToHumanReadable($envGroups[$v]);
				    $grpIndex = stringArrayFind( $envGroups[$v], 0, $existingEnvGroups );
				    $existsVal = $grpIndex<0 ? 0 : 1;
				    checkBox -label $label -v $existsVal -p $envGrpCol $envGroups[$v];
				}
				
	setParent..;
    string $assetUserDataTab = `scrollLayout -horizontalScrollBarThickness 0 -verticalScrollBarThickness 10 -cr 1 -backgroundColor .25 .25 .25 `;
		columnLayout -adj 1  -backgroundColor .35 .35 .35 ;
			image -image ($pxlNav_imgDirectory+"pxlNav_windowHeader_assetAttributes.png") -h 35 -w 446;
			
			$pxlNav_descriptionBox = `scrollField -editable false -height 78 -isObscured -wordWrap true -backgroundColor .8 .8 .8 -text "Select an object you'd like to add an override to.\nClicking a button will add a new channel to your selection, change the values from there. \n"`;
			
         string $assetAttrTabs = `tabLayout -innerMarginWidth 1 -innerMarginHeight 1 -noBackground false -p $assetUserDataTab  -backgroundColor .2 .2 .2 `;

         string $curLayout;
         string $curRowColLayout;
         string $curHelpDesc;
         string $curCol;
			for($x=0;$x<size($assetFuncs);++$x){
			    
			    $label = $assetFuncs[$x];
			    if( $label=="---" ){
			        separator -height 7 -p $curRowColLayout;
			        separator -height 7 -p $curRowColLayout;
			        continue;
			    }
			    
			    tokenize $label "--" $token;
			    if( size($token)>1 ){
		            $curRowColLayout=`rowColumnLayout -numberOfColumns 2 -columnWidth 1 400 -columnWidth 2 40`;
		            setParent..;
                 tabLayout -edit -tabLabel $curRowColLayout $token[1] $assetAttrTabs;
                 continue;
			    }
			    
			    tokenize $label "_" $token;
			    $label = $token[size($token)-1];
			    tokenize $label "(" $token;
			    $label = $token[0];
			    
			    $label=`pxlNav_camelToHumanReadable($label)`;
			    
                $label= substituteAllString($label, ($replacePrefix+" "), ($toPrefix+" ")) ;
                
                $curHelpDesc = ($assetFuncs[$x]+"_desc");
               
			    button -backgroundColor .65 .65 .65 -label $label -height $pxlNav_btnHeight -p $curRowColLayout -command ($assetFuncs[$x]+"();"+$curHelpDesc+"()") -statusBarMessage $assetFuncs[$x];
			    button -backgroundColor .65 .65 .65 -label "?" -height $pxlNav_btnHeight -p $curRowColLayout -command ($curHelpDesc+"()") -statusBarMessage $curHelpDesc;
			}
		setParent..;
	
	
    	
     tabLayout -edit
         -tabLabel $sceneGroupsTab "Scene Groups" -tabLabel $assetUserDataTab "Asset Attributes"
         -selectTab $assetUserDataTab
         $tabs;
    	
	button -l "Close Window" -c "deleteUI -window $pxlNavAssetPrepWindowObject;" -h $pxlNav_btnHeight -backgroundColor .8 .8 .8 -p $colLayout;
 
	showWindow $pxlNavAssetPrepWindowObject;
	window -edit -wh $pxlNav_ww $pxlNav_wh -backgroundColor .3 .3 .3 $pxlNavAssetPrepWindowObject;
}











pxlNav_launcher();
pxlNav_assetPrepWindow();